{"version":3,"sources":["components/snack-bar/hooks/use-snack-bar.js","components/snack-bar/snack-bar.js","components/splash-screen/hooks/use-splash-screen.js","components/splash-screen/splash-screen.js","utils/user-context/user-context.js","components/key-home/key-home.js","components/question-creator/auth-forms/continue-bank.js","components/question-creator/auth-forms/create-new-bank.js","components/question-creator/question-creator.js","assets/images/logo.PNG","components/questions-landing/side-bar/right-side-bar.js","components/questions-landing/footer-bar/footer-bar.js","components/questions-landing/question-content/question-content.js","components/questions-landing/side-bar/question-map-view.js","components/questions-landing/side-bar/left-side-bar.js","utils/auth-functions/auth-functions.js","components/questions-landing/questions-landing.js","components/question-creator/question-content-creator/inner-question/inner-question.js","components/question-creator/question-content-creator/question-content-creator.js","components/question-creator/question-creator-footer/question-creator-footer.js","components/question-creator/question-creator-rightside-bar/question-creator-rightside-bar.js","components/question-creator/question-creator-landing/question-creator-landing.js","components/question-creator/question-editor/question-editor.js","routes/routes.js","utils/app-theme/app-theme.js","App.js","reportWebVitals.js","index.js"],"names":["useSnackbar","createContext","snackbarObject","setSnackbarOpen","useStyles","makeStyles","snackbarStyle","position","SimpleSnackbar","useContext","classes","setSnackbarObject","useEffect","snackbarOpen","snackbarText","setSnackbarText","useState","handleClose","event","reason","className","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","message","action","Fragment","Button","color","size","onClick","IconButton","aria-label","fontSize","useSplashScreen","loaderActive","setLoaderActive","theme","modal","display","alignItems","justifyContent","background","paper","outline","SplashScreen","appTheme","useTheme","React","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","CircularProgress","useUserContext","user","setUser","root","height","inputKey","width","KeyHome","history","useHistory","key","setKey","keyError","setKeyError","console","log","Cookies","get","validateAndProceed","keyFromCookie","a","formData","FormData","append","fetch","method","body","response","text","results","resultObj","JSON","parse","set","push","TextField","error","id","onChange","e","target","value","label","variant","flexDirection","formStyle","padding","selectStyle","ContinueBank","getAllDocuments","userKey","setUserKey","documentKey","setDocumentKey","documentList","setDocumentList","json","document","validateUserAndQuestions","status","user_hash_key","doc_hash_key","disabled","FormControl","formControl","InputLabel","Select","labelId","map","item","index","MenuItem","name","CreateNewForm","documentName","setDocumentName","QuestionCreator","tabState","setTabState","tabs_array","Paper","elevation","square","Tabs","indicatorColor","textColor","newValue","Tab","metaFieldStyle","progressArea","logoImage","RightSideBar","questionData","setQuestionData","setAttributes","marks","time","topic","subTopic","complexity","type","attributes","src","Logo","tempQuestionData","InputProps","inputProps","min","max","backwardStyle","button","backgroundColor","forwardStyle","saveButtonStyle","alignSelf","paddingBottom","questionStatus","saveButton","uncheckedIconButtonStyle","margin","checkedIconButtonStyle","savedForLaterIconButtonStyle","unrelatedIconButtonStyle","reportedIconButtonStyle","unchecked","checked","savedForLater","unrelated","undone","reported","FooterBar","setQuestionStatus","previousQuestionHandler","saveQuestionBankFunction","nextQuestionHandler","saveInstantQuestionFunction","statusHandlerBeforeSave","startIcon","Tooltip","title","endIcon","questionDataStyle","gridArea","marginLeft","marginRight","overflowY","questionAnswerStyle","minHeight","questionStyle","answerStyle","explanationStyle","paddingTop","metaDataArea","optionsStyle","instructionStyle","instructionsHead","marginTop","addOptionButton","optionIteratorStyle","optionActionStyle","correctCheckbox","QuestionContent","setOptions","options","updateParentQuestionData","tempOptions","stringify","dangerouslySetInnerHTML","__html","question","answer","explanation","optionsEditorStyle","data","Checkbox","isCorrect","checkboxHandler","splice","deleteOptionHandler","option","optionInputHandler","tags","tagsInputHandler","length","concat","remarks","rows","multiline","instructions","minWidth","cursor","borderStyle","border","gridContainer","QuestionMapView","totalQuestions","questionCategories","pages","onMapClick","setActiveIndex","indexController","activeIndex","questionDataArray","arrayForIteration","Array","from","keys","iteratorWeight","Math","ceil","Grid","container","justify","spacing","includes","onPaperClickHandler","Number","innerText","approvedQuestions","savedForLaterQuestions","reportedQuestions","unrelatedQuestions","join","paginationButtons","filterDropdown","LeftSideBar","questionIndex","filter","setIndexController","floor","setFilter","filterValue","getMapView","hashKey","flexWrap","listStyle","questionNavHelperGrid","gridTemplateColumns","overflowX","questionNavGrid","gridTemplateRows","sideBarStyle","gridRow","rightSideBar","gridColumn","navigationStyle","QuestionsLanding","setUserDataFromCookie","last_index","getQuestionByIndex","setQuestionIndex","setQuestionCategories","approved_questions","saved_for_later_questions","userObj","current_object","question_status","saved_for_later","total_questions","paddingLeft","InnerQuestion","optionIndex","questionOptions","setQuestionFocus","setOptionFocusedKey","setContents","mode","katex","buttonList","checkBoxActionStyle","questionRichTextBoxWrapper","questionRichTextBox","explanationCheckboxStyle","hasExplanation","explanationCheckboxHandler","style","editorStyle","explanationInputHandler","transition","marginLeftStyle","marginRightStyle","rootContent","collapsibleButton","fontWeight","optionActionStyleQuestion","QuestionContentCreator","leftCollapsed","rightCollapsed","setRightCollapsed","setLeftCollapsed","addOptionHandler","updateParentQuestionDataOptions","plugins","complex","isPassageType","questionRichTextBoxOuter","prevState","questionInfo","actionButton","QuestionCreatorFooter","uploadQuestionBank","addNewQuestion","saveQuestionData","QuestionCreatorRightsideBar","zIndex","navigationWidthSmall","navigationWidthLarge","navigationWidthLeftCollapsed","navigationWidthRightCollapsed","hideDiv","QuestionsCreatorLanding","keyBinder","window","addEventListener","saveKeyStrokeHandler","removeEventListener","charCode","String","fromCharCode","which","toLowerCase","ctrlKey","preventDefault","statusText","createNewQuestion","tempData","blankQuestionData","QuestionEditor","Routes","exact","path","component","mainTheme","createMuiTheme","palette","primary","main","secondary","textGrey","textBlack","textWhite","success","warning","info","active","danger","savedGreen","textPureWhite","mainAppTheme","svgFillMainBg","fill","App","userObject","snackbarValue","loaderValue","Provider","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c67aef9b.chunk.js","sourcesContent":["import React, { createContext } from 'react';\r\n\r\nconst useSnackbar = createContext({\r\n    snackbarObject: {},\r\n    setSnackbarOpen: ()=>{ }\r\n})\r\n\r\nexport default useSnackbar;","import React, { useContext, useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport useSnackbar from './hooks/use-snack-bar';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    snackbarStyle: {\r\n        position: 'absolute'\r\n    }\r\n})\r\nexport default function SimpleSnackbar() {\r\n    const { snackbarObject, setSnackbarObject } = useContext(useSnackbar);\r\n    const classes = useStyles();\r\n    useEffect(() => {\r\n        if (snackbarObject.snackbarOpen && snackbarObject.snackbarText) {\r\n            setSnackbarOpen(snackbarObject.snackbarOpen)\r\n            setSnackbarText(snackbarObject.snackbarText)\r\n        }\r\n    }, [snackbarObject])\r\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n    const [snackbarText, setSnackbarText] = useState('');\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setSnackbarOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.snackbarStyle}>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={snackbarOpen || false}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n                message={snackbarText || ''}\r\n                action={\r\n                    <React.Fragment>\r\n                        <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\r\n                        </Button>\r\n                        <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n                            <CloseIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </React.Fragment>\r\n                }\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { createContext } from 'react';\r\n\r\nconst useSplashScreen = createContext({\r\n    loaderActive: false,\r\n    setLoaderActive: ()=>{}\r\n})\r\n\r\nexport default useSplashScreen;","import React, {useContext} from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport useSplashScreen from './hooks/use-splash-screen'\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        background: 'rgb(0 0 0 / 0%)'\r\n    },\r\n    paper: {\r\n        outline: 'none',\r\n        color: '#87a7ff'\r\n    },\r\n}));\r\n\r\nconst SplashScreen = () => {\r\n    const appTheme = useTheme;\r\n    const classes = useStyles(appTheme);\r\n    const [open, setOpen] = React.useState(true);\r\n    const {loaderActive, setLoaderActive} = useContext(useSplashScreen)\r\n    return (\r\n        <>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={loaderActive}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                    <CircularProgress className={classes.paper} />\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SplashScreen;","import React from 'react';\r\n\r\nconst useUserContext = React.createContext({\r\n    user: {},\r\n    setUser: () => { }\r\n})\r\nexport default useUserContext;","import { Button, makeStyles } from '@material-ui/core';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useSnackbar from '../snack-bar/hooks/use-snack-bar';\r\nimport SimpleSnackbar from '../snack-bar/snack-bar';\r\nimport useUserContext from '../../utils/user-context/user-context';\r\nimport useSplashScreen from '../splash-screen/hooks/use-splash-screen';\r\nimport Cookies from 'js-cookie'\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: '100%'\r\n    },\r\n    inputKey: {\r\n        display: 'flex',\r\n        width: '25em',\r\n        justifyContent: 'space-evenly'\r\n    }\r\n});\r\nconst KeyHome = () => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [key, setKey] = useState('');\r\n    const [keyError, setKeyError] = useState(false);\r\n    const {snackbarObject, setSnackbarObject} = useContext(useSnackbar);\r\n    const {user, setUser} = useContext(useUserContext);\r\n    const {loaderActive, setLoaderActive} = useContext(useSplashScreen)\r\n    useEffect(()=>{\r\n        console.log(Cookies.get('user_key'));\r\n        if (Cookies.get('user_key')) {\r\n            setKey(Cookies.get('user_key'));\r\n            validateAndProceed({\r\n                key: Cookies.get('user_key')\r\n            })\r\n        }\r\n    },[])\r\n    const validateAndProceed = async(keyFromCookie) => {\r\n        setLoaderActive(true)\r\n        const formData = new FormData();\r\n        if(keyFromCookie.key) {\r\n            formData.append('key', keyFromCookie.key);\r\n        } else {\r\n            formData.append('key', key);\r\n        }\r\n        var response = await fetch('http://127.0.0.1:5000/auth',{\r\n            method: 'post',\r\n            body: formData\r\n        });\r\n        var results = await response.text()\r\n        var resultObj = JSON.parse(results);\r\n        if (resultObj.response) {\r\n            resultObj.key = keyFromCookie.key || key;\r\n            setUser(resultObj);\r\n            Cookies.set('user_key', resultObj.key);\r\n            setLoaderActive(false)\r\n            history.push('/questions');\r\n        } else {\r\n            setKeyError(true);\r\n            setLoaderActive(false)\r\n            setSnackbarObject({\r\n                snackbarOpen: true,\r\n                snackbarText: 'Please enter a valid key'\r\n            })\r\n        }\r\n    }\r\n    const keyChangeHandler = (e) => {\r\n        setKeyError(false);\r\n        setKey(e.target.value);\r\n    }\r\n    return (<div><div className={classes.root}>\r\n        <div className={classes.inputKey}>\r\n            <TextField error={keyError} id=\"outlined-basic\" onChange={keyChangeHandler} label=\"Enter Key\" variant=\"outlined\" />\r\n            <Button onClick={validateAndProceed} variant=\"contained\" color=\"primary\">\r\n                Proceed\r\n      </Button>\r\n        </div>\r\n    </div>\r\n    {/* <SimpleSnackbar/> */}\r\n    </div>)\r\n}\r\n\r\nexport default KeyHome;","import { makeStyles } from '@material-ui/core';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Cookies from 'js-cookie'\r\nimport useUserContext from '../../../utils/user-context/user-context';\r\nimport useSnackbar from '../../snack-bar/hooks/use-snack-bar';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '15em',\r\n    },\r\n    formStyle: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        padding: '2em',\r\n        height: '100%'\r\n    },\r\n    selectStyle: {\r\n        width: '13em'\r\n    }\r\n})\r\n\r\nconst ContinueBank = () => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        getAllDocuments()\r\n    }, [])\r\n    const { snackbarObject, setSnackbarObject } = useContext(useSnackbar)\r\n    const [userKey, setUserKey] = useState('test2');\r\n    const [documentKey, setDocumentKey] = useState('');\r\n    const { user, setUser } = useContext(useUserContext);\r\n    const [documentList, setDocumentList] = useState([])\r\n    const getAllDocuments = async () => {\r\n        const formData = new FormData();\r\n        formData.append('userKey', userKey);\r\n        var response = await fetch('http://127.0.0.1:5000/getAllQuestionBanks', {\r\n            method: 'post',\r\n            body: formData\r\n        });\r\n        var results = await response.json();\r\n        setDocumentList(results.document);\r\n    }\r\n    const validateUserAndQuestions = async () => {\r\n        if (documentKey === '') {\r\n            setSnackbarObject({\r\n                snackbarOpen: true,\r\n                snackbarText: 'Check Fields'\r\n            })\r\n        } else {\r\n            const formData = new FormData();\r\n            formData.append('userKey', userKey);\r\n            formData.append('documentKey', documentKey);\r\n            var response = await fetch('http://127.0.0.1:5000/validateUserAndDocument', {\r\n                method: 'post',\r\n                body: formData\r\n            });\r\n            var results = await response.json();\r\n            if (results.status === 'ok') {\r\n                Cookies.set('user_key', results.user_hash_key);\r\n                Cookies.set('document_key', results.doc_hash_key);\r\n                setUser(results);\r\n                setSnackbarObject({\r\n                    snackbarOpen: false\r\n                })\r\n                history.push('/QuestionEditor')\r\n            } else {\r\n                setSnackbarObject({\r\n                    snackbarOpen: true,\r\n                    snackbarText: 'Credentials mismatch'\r\n                })\r\n            }\r\n\r\n        }\r\n    }\r\n    const userKeyHandler = (e) => {\r\n        setUserKey(e.target.value)\r\n    }\r\n    const handleKeyChange = (e) => {\r\n        setDocumentKey(e.target.value)\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.formStyle}>\r\n                <TextField disabled value={userKey} onChange={userKeyHandler} id=\"outlined-basic\" label=\"User Id\" variant=\"outlined\" />\r\n                <FormControl className={classes.formControl}>\r\n                    <InputLabel id=\"demo-simple-select-label\">Question Bank</InputLabel>\r\n                    <Select\r\n                        className={classes.selectStyle}\r\n\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={documentKey}\r\n                        onChange={handleKeyChange}\r\n                    >{documentList.map((item, index) => {\r\n                        return (\r\n                            <MenuItem value={item.id}>{item.name}</MenuItem>\r\n                        )\r\n                    })}\r\n                    </Select>\r\n                </FormControl>\r\n                <Button onClick={validateUserAndQuestions} variant=\"contained\" color=\"primary\">\r\n                    Continue\r\n        </Button>\r\n                {/* {snackbarVisible ? <SimpleSnackbar/>: ''} */}\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default ContinueBank;","import { makeStyles } from '@material-ui/core';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useSnackbar from '../../snack-bar/hooks/use-snack-bar';\r\nimport SimpleSnackbar from '../../snack-bar/snack-bar';\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '21em',\r\n    },\r\n    formStyle: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        padding: '2em',\r\n        height: '100%'\r\n    }\r\n})\r\nconst CreateNewForm = () => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [snackbarVisible, setSnackBarVisible] = useState(true);\r\n    const [userKey, setUserKey] = useState('test2');\r\n    const [documentKey, setDocumentKey] = useState('');\r\n    const [documentName, setDocumentName] = useState('')\r\n    const { snackbarObject, setSnackbarObject } = useContext(useSnackbar)\r\n    const validateUserAndQuestions = async()=>{\r\n        if(userKey === '' || documentName === '' ) {\r\n            setSnackbarObject({\r\n                snackbarOpen: true,\r\n                snackbarText: 'Please Check The Fields'\r\n            })\r\n            return\r\n        }\r\n        const formData = new FormData();\r\n        formData.append('documentKey', documentKey)\r\n        formData.append('userKey', userKey)\r\n        formData.append('documentName', documentName)\r\n        var response = await fetch('http://127.0.0.1:5000/addNewDocument', {\r\n            method: 'post',\r\n            body: formData\r\n        });\r\n        setSnackbarObject({\r\n            snackbarOpen: true,\r\n            snackbarText: 'Question Bank created Successfully'\r\n        })\r\n        // history.push('/QuestionEditor')\r\n    }\r\n    const userKeyHandler =(e)=>{\r\n        setUserKey(e.target.value);\r\n    }\r\n    const documentNameHandler =(e)=>{\r\n        setDocumentName(e.target.value);\r\n    } \r\n    // const documentKeyHandler =(e)=>{\r\n    //     setDocumentKey(e.target.value);\r\n    // }\r\n    return <div className={classes.root}>\r\n        <div className={classes.formStyle}>\r\n        <TextField disabled value={userKey || ''} onChange={userKeyHandler} id=\"outlined-basic\" label=\"User Id\" variant=\"outlined\" />\r\n            <TextField onChange={documentNameHandler} id=\"outlined-basic\" label=\"Enter a name\" variant=\"outlined\" />\r\n            {/* <TextField onChange={documentKeyHandler} id=\"outlined-basic\" label=\"Key\" variant=\"outlined\" /> */}\r\n            <Button onClick={validateUserAndQuestions} variant=\"contained\" color=\"primary\">\r\n                Create\r\n</Button>\r\n{/* {snackbarVisible ? <SimpleSnackbar/>: ''} */}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default CreateNewForm;","import React, { useContext, useEffect, useState } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport ContinueBank from './auth-forms/continue-bank';\r\nimport CreateNewForm from './auth-forms/create-new-bank';\r\nimport SimpleSnackbar from '../snack-bar/snack-bar';\r\nimport useSnackbar from '../snack-bar/hooks/use-snack-bar';\r\nconst useStyles = makeStyles({\r\n    root:{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: '100%'\r\n    },\r\n    paper:{\r\n        padding: '1em',\r\n    }\r\n})\r\nconst QuestionCreator = () => {\r\n    const classes = useStyles();\r\n    const [tabState, setTabState] = useState(0);\r\n    const handleChange = (event, newValue) => {\r\n        setTabState(newValue);\r\n    };\r\n    const tabs_array = [<ContinueBank/>, <CreateNewForm/>]\r\n    return <div className={classes.root}>    \r\n        <Paper className={classes.paper} elevation={3} square>\r\n        <Tabs\r\n            value={tabState}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            onChange={handleChange}\r\n            aria-label=\"disabled tabs example\"\r\n        >\r\n            <Tab label=\"Continue Editing\"/>\r\n            <Tab label=\"Create New\"/>\r\n        </Tabs>\r\n        {tabs_array[tabState]}\r\n    </Paper>\r\n    \r\n {/* <SimpleSnackbar/> */}\r\n    </div>\r\n}\r\n\r\nexport default QuestionCreator;","export default __webpack_public_path__ + \"static/media/logo.c7ac9b6d.PNG\";","import React, { useEffect, useState } from 'react';\r\nimport { Button, makeStyles, Paper, TextField, useTheme } from '@material-ui/core';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Logo from './../../../assets/images/logo.PNG'\r\nconst useStyles = makeStyles({\r\n\r\n  metaFieldStyle: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: '15em',\r\n    justifyContent: 'space-around',\r\n    padding: '0em 1em 0em 1em',\r\n  },\r\n  progressArea: {\r\n\r\n  },\r\n  logoImage:{\r\n    height: '95px',\r\n    width: '228px'\r\n  }\r\n})\r\nconst RightSideBar = ({ questionData, setQuestionData }) => {\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    setAttributes({\r\n      marks: questionData.marks || '',\r\n      time: questionData.time || '',\r\n      topic: questionData.topic || '',\r\n      subTopic: questionData.subTopic || '',\r\n      complexity: questionData.complexity || '',\r\n      type: questionData.type || ''\r\n    })\r\n  }, [questionData])\r\n  const [attributes, setAttributes] = useState({\r\n    marks: '',\r\n    time: '',\r\n    topic: 0,\r\n    subTopic: 0,\r\n    complexity: '',\r\n    type: 0\r\n  })\r\n  const markHandler = (e) => {\r\n    let tempQuestionData = questionData;\r\n    tempQuestionData.marks = e.target.value;\r\n    setAttributes({ ...attributes, 'marks': e.target.value })\r\n    setQuestionData(tempQuestionData);\r\n  }\r\n  const timeHandler = (e) => {\r\n    if (e.target.value < 601) {\r\n      let tempQuestionData = questionData;\r\n      tempQuestionData.time = e.target.value;\r\n      setAttributes({ ...attributes, 'time': e.target.value })\r\n      setQuestionData(tempQuestionData);\r\n    }\r\n  }\r\n  const topicHandler = (e) => {\r\n    let tempQuestionData = questionData;\r\n    tempQuestionData.topic = e.target.value;\r\n    setAttributes({ ...attributes, 'topic': e.target.value })\r\n    setQuestionData(tempQuestionData);\r\n  }\r\n  const subTopicHandler = (e) => {\r\n    let tempQuestionData = questionData;\r\n    tempQuestionData.subTopic = e.target.value;\r\n    setAttributes({ ...attributes, 'subTopic': e.target.value })\r\n    setQuestionData(tempQuestionData);\r\n  }\r\n  const complexityHandler = (e) => {\r\n    if (e.target.value < 11) {\r\n      let tempQuestionData = questionData;\r\n      tempQuestionData.complexity = e.target.value;\r\n      setAttributes({ ...attributes, 'complexity': e.target.value })\r\n      setQuestionData(tempQuestionData);\r\n    }\r\n  }\r\n  const typeHandler = (e) => {\r\n    let tempQuestionData = questionData;\r\n    tempQuestionData.type = e.target.value;\r\n    setAttributes({ ...attributes, 'type': e.target.value })\r\n    setQuestionData(tempQuestionData);\r\n  }\r\n  return (<>\r\n   <img className={classes.logoImage} src={Logo}/>\r\n    <div className={classes.metaFieldStyle}>\r\n      <TextField\r\n        value={attributes.marks} type=\"number\" onChange={markHandler} id=\"standard-basic\" label=\"Mark\" />\r\n      <TextField\r\n        value={attributes.time} type=\"number\" InputProps={{\r\n          inputProps:{\r\n            min: 1, max: 600\r\n          }\r\n        }} onChange={timeHandler} id=\"standard-basic\" label=\"Time\" />\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-label\">Topic</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          onChange={topicHandler}\r\n          value={attributes.topic}\r\n        >\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-label\">Sub Topic</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          onChange={subTopicHandler}\r\n          value={attributes.subTopic}\r\n        >\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <TextField\r\n        value={attributes.complexity} type=\"number\" InputProps={{\r\n          inputProps: {\r\n            max: 10, min: 1\r\n          }\r\n        }} onChange={complexityHandler} id=\"standard-basic\" label=\"Complexity\" />\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\r\n        <Select\r\n          value={attributes.type}\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          onChange={typeHandler}\r\n        >\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n    <div className={classes.progressArea}>\r\n\r\n        </div>\r\n  </>)\r\n}\r\n\r\nexport default RightSideBar;","import { Button, makeStyles, Paper, TextField, useTheme } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport WatchLaterIcon from '@material-ui/icons/WatchLater';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport ReportIcon from '@material-ui/icons/Report';\r\nconst useStyles = makeStyles(theme => ({\r\n    backwardStyle: {\r\n        display: 'flex'\r\n    },\r\n    button: {\r\n        background: 'darkslategrey',\r\n        color: 'aliceblue',\r\n        \"&:hover\": {\r\n            backgroundColor: \"#3e8888\"\r\n          }\r\n    },\r\n\r\n    forwardStyle: {\r\n        display: 'flex',\r\n    },\r\n\r\n    saveButtonStyle: {\r\n        alignSelf: 'center',\r\n        paddingBottom: '1em',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        width: '19em',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n    formControl: {\r\n        width: '9em'\r\n    },\r\n    questionStatus: {\r\n    },\r\n    saveButton: {\r\n        height: 'fit-content'\r\n    },\r\n    uncheckedIconButtonStyle: {\r\n        margin: 1,\r\n        '&:hover':{\r\n            color: 'ghostwhite',\r\n        }\r\n    },\r\n    checkedIconButtonStyle: {\r\n        margin: 1,\r\n        '&:hover':{\r\n            color: 'limegreen',\r\n        }\r\n    },\r\n    savedForLaterIconButtonStyle: {\r\n        margin: 1,\r\n                '&:hover':{\r\n            color: 'deepskyblue',\r\n        }\r\n    },\r\n    unrelatedIconButtonStyle: {\r\n        margin: 1,\r\n                '&:hover':{\r\n            color: 'tomato',\r\n        }\r\n    },\r\n    reportedIconButtonStyle: {\r\n        margin: 1,\r\n                '&:hover':{\r\n            color: 'red',\r\n        }\r\n    },\r\n    unchecked: {\r\n        color: 'ghostwhite',\r\n    },\r\n    checked: {\r\n        color: 'limegreen'\r\n    },\r\n    savedForLater: {\r\n        color: 'deepskyblue'\r\n    },\r\n    unrelated: {\r\n        color: 'tomato'\r\n    },\r\n    undone:{\r\n        color: 'lightseagreen'\r\n    },\r\n    reported:{\r\n        color: 'red'\r\n    }\r\n}))\r\nconst FooterBar = ({ questionStatus, setQuestionStatus, saveQuestionBankFunction, previousQuestionHandler, nextQuestionHandler, saveInstantQuestionFunction }) => {\r\n    const appTheme = useTheme();\r\n    const classes = useStyles(appTheme);\r\n    const statusHandlerBeforeSave = (status) => {\r\n        setQuestionStatus(status);\r\n        saveInstantQuestionFunction(status)\r\n    }\r\n    return (\r\n        <>\r\n            <div className={classes.backwardStyle}>\r\n                <Button\r\n                    onClick={previousQuestionHandler}\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    startIcon={<ArrowBackIosIcon />}\r\n                >\r\n                    Back\r\n                            </Button>\r\n            </div>\r\n            <div className={classes.saveButtonStyle}>\r\n                <Tooltip title=\"To do\">\r\n                    <IconButton onClick={() => statusHandlerBeforeSave('undone')} aria-label=\"delete\" className={[classes.uncheckedIconButtonStyle, questionStatus === 'undone' ? classes.undone : '']}>\r\n                        <RadioButtonUncheckedIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Approve\">\r\n                <IconButton onClick={() => statusHandlerBeforeSave('approved')} aria-label=\"delete\" className={[classes.checkedIconButtonStyle, questionStatus === 'approved' ? classes.checked : '']}>\r\n                    <CheckCircleIcon />\r\n                </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Save for Later\">\r\n                <IconButton onClick={() => statusHandlerBeforeSave('flag_for_later')} aria-label=\"delete\" className={[classes.savedForLaterIconButtonStyle, questionStatus === 'flag_for_later' ? classes.savedForLater : '']}>\r\n                    <WatchLaterIcon />\r\n                </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Unrelated\">\r\n                <IconButton onClick={() => statusHandlerBeforeSave('unrelated')} aria-label=\"delete\" className={[classes.unrelatedIconButtonStyle, questionStatus === 'unrelated' ? classes.unrelated : '']}>\r\n                    <CancelIcon />\r\n                </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Report\">\r\n                <IconButton onClick={() => statusHandlerBeforeSave('reported')} aria-label=\"delete\" className={[classes.reportedIconButtonStyle, questionStatus === 'reported' ? classes.reported : '']}>\r\n                    <ReportIcon />\r\n                </IconButton>\r\n                </Tooltip>\r\n            </div>\r\n            <div className={classes.forwardStyle}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    onClick={nextQuestionHandler}\r\n                    endIcon={<ArrowForwardIosIcon />}\r\n                >\r\n                    Next\r\n                            </Button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FooterBar;","import { makeStyles, TextField, Button, Paper } from '@material-ui/core';\r\nimport React, { useEffect,useContext,useState } from 'react';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport './question-content.css';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SimpleSnackbar from '../../snack-bar/snack-bar';\r\nimport useSnackbar from '../../snack-bar/hooks/use-snack-bar';\r\nconst useStyles = makeStyles({\r\n\r\n    questionDataStyle: {\r\n        gridArea: '1/1',\r\n        marginLeft: '250px',\r\n        marginRight: '250px',\r\n        padding: '4em 5em 2em 5em',\r\n        height: 'calc(100% - 163px)',\r\n        overflowY: 'scroll'\r\n    },\r\n\r\n    questionAnswerStyle: {\r\n        minHeight: '8em',\r\n        padding: '1em',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n    },\r\n\r\n    questionStyle: {\r\n        alignSelf: 'center'\r\n    },\r\n\r\n    answerStyle: {\r\n        alignSelf: 'center',\r\n        display: 'flex'\r\n    },\r\n\r\n    explanationStyle: {\r\n        paddingTop: '2em'\r\n    },\r\n    metaDataArea: {\r\n        paddingTop: '2em'\r\n\r\n    },\r\n    optionsStyle: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignSelf: 'center',\r\n        padding: '3em'\r\n    },\r\n    instructionStyle: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignSelf: 'center',\r\n        padding: '3em'\r\n    },\r\n    instructionsHead: {\r\n\r\n    },\r\n    saveButtonStyle: {\r\n        alignSelf: 'flex-end',\r\n        paddingBottom: '1em',\r\n        paddingTop: '1em'\r\n    },\r\n    paper: {\r\n        marginTop: '2em'\r\n    },\r\n    addOptionButton: {\r\n\r\n    },\r\n    optionIteratorStyle: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        marginTop: '1em',\r\n        padding: '2em',\r\n    },\r\n    optionActionStyle: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    correctCheckbox: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    }\r\n});\r\n\r\nconst QuestionContent = ({ questionData,setQuestionData }) => {\r\n    const classes = useStyles();\r\n    useEffect(()=>{\r\n        setOptions(JSON.parse(questionData.options || '[]') || [])\r\n    },[questionData])\r\n    const [options, setOptions] = useState([]);\r\n    const {snackbarObject, setSnackbarObject} = useContext(useSnackbar)\r\n    const addOptionHandler = () => {\r\n        if (options.length < 4) {            \r\n        let option = {\r\n            option: '', tags: '', remarks: '', isCorrect: false\r\n        }\r\n        setOptions(options.concat(option))\r\n        } else {\r\n            setSnackbarObject({\r\n                snackbarOpen: true,\r\n                snackbarText: 'Only 4 options allowed'\r\n            })\r\n        }\r\n    }\r\n    const updateParentQuestionData = (tempOptions)=>{\r\n        setQuestionData({...questionData, 'options': JSON.stringify(tempOptions)})\r\n    }\r\n    const optionInputHandler =(e, key)=>{\r\n        let tempOptions = [...options];\r\n        tempOptions[key].option = e.target.value;\r\n        setOptions(tempOptions);\r\n        updateParentQuestionData(tempOptions);\r\n    }\r\n    const tagsInputHandler = (e, key)=>{\r\n        let tempOptions = [...options];\r\n        tempOptions[key].tags = e.target.value;\r\n        setOptions(tempOptions);\r\n        updateParentQuestionData(tempOptions)\r\n    }\r\n    const checkboxHandler = (e, key)=>{\r\n        let tempOptions = [...options];\r\n        tempOptions[key].isCorrect = e.target.checked;\r\n        setOptions(tempOptions);\r\n        updateParentQuestionData(tempOptions)\r\n    }\r\n    const deleteOptionHandler =(e, key)=>{\r\n        let tempOptions = [...options];\r\n        tempOptions.splice(key, 1)\r\n        setOptions(tempOptions)\r\n        updateParentQuestionData(tempOptions)\r\n    }\r\n    const instructionHandler = (e)=>{\r\n        setQuestionData({...questionData, 'instructions': e.target.value});\r\n    }\r\n    const remarksHandler = (e)=>{\r\n        setQuestionData({...questionData, 'remarks': e.target.value});\r\n    }\r\n    const tagsHandler = (e)=>{\r\n        setQuestionData({...questionData, 'tags': e.target.value});\r\n    }\r\n    return (<>\r\n        <div className={classes.questionDataStyle}>\r\n            <Paper elevation={3} className={classes.questionAnswerStyle}>\r\n                <div className={classes.questionStyle} dangerouslySetInnerHTML={{ __html: questionData.question }}></div>\r\n                <div className={classes.answerStyle}>Answer: <div dangerouslySetInnerHTML={{ __html: questionData.answer }}></div></div>\r\n            </Paper>\r\n            <div className={classes.explanationStyle} dangerouslySetInnerHTML={{ __html: questionData.explanation }}></div>\r\n            <div className={classes.metaDataArea}>\r\n                <Paper className={classes.paper} variant=\"outlined\">\r\n                    <div className={classes.optionsStyle}>\r\n                        <div className={classes.instructionsHead}>\r\n                            Options\r\n                        </div>\r\n                        <div className={classes.optionsEditorStyle}>\r\n                            {options.map((data,index) => {\r\n                                return (\r\n                                    <Paper key={index} className={classes.optionIteratorStyle}>\r\n                                        <div className={classes.optionActionStyle}>\r\n                                            <div className={classes.correctCheckbox}>\r\n                                                is correct ?<Checkbox\r\n                                                    onChange={(e) => checkboxHandler(e, index)}\r\n                                                    checked={data.isCorrect}\r\n                                                    inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                                                />\r\n                                            </div>\r\n                                            <IconButton onClick={(e) => deleteOptionHandler(e, index)} aria-label=\"delete\" className={classes.margin}>\r\n                                                <DeleteIcon />\r\n                                            </IconButton>\r\n                                        </div>\r\n                                        <TextField onChange={(e) => optionInputHandler(e, index)} id=\"standard-basic\"\r\n                                            value={data.option}\r\n                                            label=\"Option\" />\r\n                                        <TextField onChange={(e) => tagsInputHandler(e, index)} id=\"standard-basic\"\r\n                                            value={data.tags}\r\n                                            label=\"tags\" />\r\n                                    </Paper>\r\n                                );\r\n                            })}</div>\r\n                        <div className={classes.addOptionButton}>\r\n                            <IconButton onClick={addOptionHandler} aria-label=\"Add\" className={classes.margin}>\r\n                                <AddIcon />\r\n                            </IconButton>\r\n                        </div>\r\n                    </div>\r\n                </Paper>\r\n                <Paper className={classes.paper} variant=\"outlined\">\r\n                    <div className={classes.instructionStyle}>\r\n                        <div className={classes.instructionsHead}>\r\n                            Instructions And Remarks\r\n                        </div>\r\n                        <TextField id=\"standard-basic\"\r\n                            rows={4} multiline label=\"Instructions\" \r\n                            value={questionData.instructions || ''}\r\n                            onChange={instructionHandler}\r\n                            />\r\n                        <TextField id=\"standard-basic\"\r\n                            rows={4} multiline label=\"Remarks\" \r\n                            value={questionData.remarks || ''}\r\n                            onChange={remarksHandler}\r\n                            />\r\n                        <TextField id=\"standard-basic\"\r\n                            onChange={tagsHandler}\r\n                            value={questionData.tags || ''}\r\n                            label=\"tags\" />\r\n                    </div>\r\n                </Paper>\r\n            </div>\r\n        </div>\r\n    </>)\r\n}\r\n\r\n\r\nexport default QuestionContent;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nconst useStyles = makeStyles({\r\n    paper: {\r\n        minHeight: 25,\r\n        minWidth: 25,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        cursor: 'pointer'\r\n    },\r\n    unchecked: {\r\n        background: 'ghostwhite'\r\n    },\r\n    checked: {\r\n        background: 'greenyellow'\r\n    },\r\n    savedForLater: {\r\n        background: 'deepskyblue'\r\n    },\r\n    borderStyle: {\r\n        border: '0.5px solid blue'\r\n    },\r\n    unrelated: {\r\n        background: 'tomato'\r\n    },\r\n    reported: {\r\n        background: 'red'\r\n    },\r\n    margin: {\r\n        margin: 1\r\n    },\r\n    formControl: {\r\n        paddingBottom: '1em'\r\n    },\r\n    gridContainer: {\r\n        height: '500px',\r\n        overflowY: 'auto'\r\n    }\r\n})\r\nconst QuestionMapView = ({totalQuestions, pages, questionCategories,onMapClick, setActiveIndex, indexController,activeIndex,  questionDataArray})=>{\r\n    const classes = useStyles();\r\n    const arrayForIteration = Array.from(Array(100).keys());\r\n    let iteratorWeight = 0;\r\n    var pages = Math.ceil((([...questionDataArray,\r\n    ].length) / 100));\r\n    const onPaperClickHandler = (index) => {\r\n        setActiveIndex(index)\r\n        onMapClick(index);\r\n    }\r\n    return(<Grid item>\r\n        <Grid className={classes.gridContainer} container justify=\"center\" spacing={1}>\r\n            {arrayForIteration.map((value, index) => {\r\n                while (((index + (indexController * 100) + iteratorWeight) < totalQuestions) && !([...questionDataArray\r\n                ].includes(index + (indexController * 100) + iteratorWeight))) {\r\n                    iteratorWeight++;\r\n                }\r\n                return (\r\n                    (index + (indexController * 100) + iteratorWeight) < totalQuestions ? <Grid key={index} item>\r\n                        <Paper onClick={(e) => onPaperClickHandler(Number(e.target.innerText) - 1)} className={[classes.paper,\r\n                        questionCategories.approvedQuestions.includes(index + (indexController * 100) + iteratorWeight) ? classes.checked :\r\n                            questionCategories.savedForLaterQuestions.includes(index + (indexController * 100) + iteratorWeight) ? classes.savedForLater :\r\n                                questionCategories.reportedQuestions.includes(index + (indexController * 100) + iteratorWeight) ? classes.reported :\r\n                                    questionCategories.unrelatedQuestions.includes(index + (indexController * 100) + iteratorWeight) ? classes.unrelated :\r\n                                        classes.unchecked\r\n\r\n                            , activeIndex === (index + (indexController * 100) + iteratorWeight) ? classes.borderStyle : ''].join(' ')}>{index + (indexController * 100) + iteratorWeight + 1}</Paper>\r\n                    </Grid> : ''\r\n                )\r\n            })}\r\n        </Grid>\r\n    </Grid>)\r\n}\r\n\r\nexport default QuestionMapView;","import { makeStyles, useTheme } from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport QuestionMapView from './question-map-view';\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        paddingTop: '0.5em',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        height: '100%'\r\n    },\r\n    paper: {\r\n        minHeight: 25,\r\n        minWidth: 25,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        cursor: 'pointer'\r\n    },\r\n    unchecked: {\r\n        background: 'ghostwhite'\r\n    },\r\n    checked: {\r\n        background: 'greenyellow'\r\n    },\r\n    savedForLater: {\r\n        background: 'deepskyblue'\r\n    },\r\n    borderStyle: {\r\n        border: '0.5px solid blue'\r\n    },\r\n    unrelated: {\r\n        background: 'tomato'\r\n    },\r\n    reported: {\r\n        background: 'red'\r\n    },\r\n    paginationButtons: {\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        marginTop: 'auto'\r\n    },\r\n    margin: {\r\n        margin: 1\r\n    },\r\n    filterDropdown: {\r\n        width: '8em'\r\n    },\r\n    formControl: {\r\n        paddingBottom: '1em'\r\n    },\r\n    gridContainer: {\r\n        height: '500px',\r\n        overflowY: 'auto'\r\n    }\r\n}))\r\nconst LeftSideBar = ({ questionCategories, onMapClick, totalQuestions, questionIndex }) => {\r\n    const appTheme = useTheme()\r\n    const classes = useStyles(appTheme);\r\n    useEffect(() => {\r\n        setActiveIndex(questionIndex || [])\r\n        if (filter === 'all') {\r\n            setIndexController(Math.floor(questionIndex / 100))\r\n        }\r\n    }, [questionIndex])\r\n    const [activeIndex, setActiveIndex] = useState(0)\r\n    const [indexController, setIndexController] = useState(0)\r\n    const [filter, setFilter] = useState('all')\r\n\r\n    var pages = Math.ceil(totalQuestions / 100);\r\n    const forwardHandler = () => {\r\n        if (indexController < pages - 1) {\r\n            setIndexController(indexController + 1)\r\n        }\r\n    }\r\n    const backwardHandler = () => {\r\n        if (indexController > 0) {\r\n            setIndexController(indexController - 1)\r\n        }\r\n    }\r\n    const onPaperClickHandler = (index) => {\r\n        setActiveIndex(index)\r\n        onMapClick(index);\r\n    }\r\n    const handleFilterChange = (e) => {\r\n        setIndexController(0);\r\n        setFilter(e.target.value);\r\n    }\r\n    const getMapView = (filterValue) => {\r\n        let arrayForIteration;\r\n        let iteratorWeight;\r\n        switch (filterValue) {\r\n            case 'all':\r\n                arrayForIteration = Array.from(Array(100).keys());\r\n                return (<Grid item>\r\n                    <Grid className={classes.gridContainer} container justify=\"center\" spacing={1}>\r\n                        {arrayForIteration.map((value, index) => (\r\n                            (index + (indexController * 100)) < totalQuestions ? <Grid key={index} item>\r\n                                <Paper onClick={(e) => onPaperClickHandler(Number(e.target.innerText) - 1)} className={[classes.paper,\r\n                                questionCategories.approvedQuestions.includes(index + (indexController * 100)) ? classes.checked :\r\n                                    questionCategories.savedForLaterQuestions.includes(index + (indexController * 100)) ? classes.savedForLater :\r\n                                        questionCategories.reportedQuestions.includes(index + (indexController * 100)) ? classes.reported :\r\n                                            questionCategories.unrelatedQuestions.includes(index + (indexController * 100)) ? classes.unrelated :\r\n                                                classes.unchecked\r\n\r\n                                    , activeIndex === (index + (indexController * 100)) ? classes.borderStyle : ''].join(' ')}>{index + (indexController * 100) + 1}</Paper>\r\n                            </Grid> : ''\r\n                        ))}\r\n                    </Grid>\r\n                </Grid>);\r\n            case 'undone':\r\n                arrayForIteration = Array.from(Array(100).keys());\r\n                iteratorWeight = 0;\r\n                pages = Math.ceil((totalQuestions - ([...questionCategories.approvedQuestions,\r\n                ...questionCategories.savedForLaterQuestions,\r\n                ...questionCategories.unrelatedQuestions,\r\n                ...questionCategories.reportedQuestions\r\n                ].length)) / 100);\r\n                return (<Grid item>\r\n                    <Grid container className={classes.gridContainer} justify=\"center\" spacing={1}>\r\n                        {arrayForIteration.map((value, index) => {\r\n                            while (((index + (indexController * 100) + iteratorWeight) < totalQuestions) && [...questionCategories.approvedQuestions,\r\n                            ...questionCategories.savedForLaterQuestions,\r\n                            ...questionCategories.unrelatedQuestions,\r\n                            ...questionCategories.reportedQuestions\r\n                            ].includes(index + (indexController * 100) + iteratorWeight)) {\r\n                                iteratorWeight++;\r\n                            }\r\n                            return (\r\n                                (index + (indexController * 100) + iteratorWeight) < totalQuestions ? <Grid key={index} item>\r\n                                    <Paper onClick={(e) => {\r\n                                        onPaperClickHandler(Number(e.target.innerText) - 1)\r\n                                    }} className={[classes.paper,\r\n                                    questionCategories.approvedQuestions.includes(index + (indexController * 100) + iteratorWeight) ? classes.checked :\r\n                                        questionCategories.savedForLaterQuestions.includes(index + (indexController * 100) + iteratorWeight) ? classes.savedForLater :\r\n                                            questionCategories.reportedQuestions.includes(index + (indexController * 100) + iteratorWeight) ? classes.reported :\r\n                                                questionCategories.unrelatedQuestions.includes(index + (indexController * 100) + iteratorWeight) ? classes.unrelated :\r\n                                                    classes.unchecked\r\n\r\n                                        , activeIndex === (index + (indexController * 100) + iteratorWeight) ? classes.borderStyle : ''].join(' ')}>{index + (indexController * 100) + iteratorWeight + 1}</Paper>\r\n                                </Grid> : ''\r\n                            )\r\n                        })}\r\n                    </Grid>\r\n                </Grid>);\r\n\r\n            case 'approved':\r\n                return (<QuestionMapView totalQuestions={totalQuestions} onMapClick={onMapClick} setActiveIndex={setActiveIndex}\r\n                    indexController={indexController} activeIndex={activeIndex} questionCategories={questionCategories}\r\n                    questionDataArray={questionCategories.approvedQuestions} />);\r\n            case 'flag_for_later':\r\n                return (<QuestionMapView totalQuestions={totalQuestions} onMapClick={onMapClick} setActiveIndex={setActiveIndex}\r\n                    indexController={indexController} activeIndex={activeIndex} questionCategories={questionCategories}\r\n                    questionDataArray={questionCategories.savedForLaterQuestions} />);\r\n            case 'unrelated':\r\n                return (<QuestionMapView totalQuestions={totalQuestions} onMapClick={onMapClick} setActiveIndex={setActiveIndex}\r\n                    indexController={indexController} activeIndex={activeIndex} questionCategories={questionCategories}\r\n                    questionDataArray={questionCategories.unrelatedQuestions} />);\r\n            case 'reported':\r\n                return (\r\n                    <QuestionMapView totalQuestions={totalQuestions} onMapClick={onMapClick} setActiveIndex={setActiveIndex}\r\n                        indexController={indexController} activeIndex={activeIndex} questionCategories={questionCategories}\r\n                        questionDataArray={questionCategories.reportedQuestions} />\r\n                );\r\n        }\r\n    }\r\n    return (<div className={classes.root}>\r\n        <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-label\">Filter</InputLabel>\r\n            <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                className={classes.filterDropdown}\r\n                value={filter}\r\n                onChange={handleFilterChange}\r\n            >\r\n                <MenuItem value={'all'}>All</MenuItem>\r\n                <MenuItem value={'undone'}>To do</MenuItem>\r\n                <MenuItem value={'approved'}>Approved</MenuItem>\r\n                <MenuItem value={'flag_for_later'}>Saved for later</MenuItem>\r\n                <MenuItem value={'unrelated'}>Unrelated</MenuItem>\r\n                <MenuItem value={'reported'}>Reported</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n        {\r\n            getMapView(filter)\r\n        }\r\n        <div className={classes.paginationButtons}>\r\n            <IconButton onClick={backwardHandler} aria-label=\"delete\" className={classes.margin}>\r\n                <ArrowBackIosIcon />\r\n            </IconButton>\r\n            <IconButton onClick={forwardHandler} aria-label=\"delete\" className={classes.margin}>\r\n                <ArrowForwardIosIcon />\r\n            </IconButton>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default LeftSideBar;","\r\nexport const validateAndProceed = async (hashKey) => {\r\n    const formData = new FormData();\r\n    formData.append('key', hashKey)\r\n    var response = await fetch('http://127.0.0.1:5000/auth', {\r\n        method: 'post',\r\n        body: formData\r\n    });\r\n    var results = await response.text()\r\n    var resultObj = JSON.parse(results);\r\n    if (resultObj.response) {\r\n        resultObj.key = hashKey;\r\n        return resultObj;\r\n    } else {\r\n        return {};\r\n    }\r\n}\r\nexport const validateAndProceedUserAndDoc = async (userHashKey, documentHashKey) => {\r\n    const formData = new FormData();\r\n    formData.append('userKey', userHashKey);\r\n    formData.append('documentKey', documentHashKey);\r\n    var response = await fetch('http://127.0.0.1:5000/validateUserAndDocument', {\r\n        method: 'post',\r\n        body: formData\r\n    });\r\n    var results = await response.json()\r\n    if (results.status === 'ok') {\r\n        return results;\r\n    } else {\r\n        return {};\r\n    }\r\n}","import { makeStyles, Paper, Snackbar, useTheme } from '@material-ui/core';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport RightSideBar from './side-bar/right-side-bar';\r\nimport FooterBar from './footer-bar/footer-bar';\r\nimport QuestionContent from './question-content/question-content';\r\nimport useUserContext from '../../utils/user-context/user-context';\r\nimport LeftSideBar from './side-bar/left-side-bar';\r\nimport SimpleSnackbar from '../snack-bar/snack-bar';\r\nimport useSnackbar from '../snack-bar/hooks/use-snack-bar';\r\nimport { getUserData, validateAndProceed } from '../../utils/auth-functions/auth-functions';\r\nimport Cookies from 'js-cookie'\r\nimport useSplashScreen from '../splash-screen/hooks/use-splash-screen';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flexWrap: 'wrap',\r\n        listStyle: 'none',\r\n    },\r\n    questionNavHelperGrid: {\r\n        display: 'grid',\r\n        gridTemplateColumns: '1fr',\r\n        height: '100%',\r\n        overflowX: 'hidden',\r\n        overflowY: 'hidden'\r\n    },\r\n    questionNavGrid: {\r\n        display: 'grid',\r\n        gridTemplateColumns: '250px 1fr 250px',\r\n        gridTemplateRows: '1fr 100px',\r\n        gridArea: '1/1'\r\n    },\r\n    sideBarStyle: {\r\n        gridRow: '1/3',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between'\r\n    },\r\n    rightSideBar: {\r\n        gridRow: '1/3',\r\n        gridColumn: '3/4'\r\n    },\r\n    navigationStyle: {\r\n        background: 'aliceblue',\r\n        width: '100%',\r\n        gridColumn: '2/3',\r\n        gridRow: '2/3',\r\n        display: 'flex',\r\n        height: '4em',\r\n        alignSelf: 'flex-end',\r\n        justifyContent: 'space-between'\r\n\r\n    },\r\n}))\r\nconst QuestionsLanding = () => {\r\n    const appTheme = useTheme();\r\n    const classes = useStyles(appTheme);\r\n    const { user, setUser } = useContext(useUserContext);\r\n    const {loaderActive, setLoaderActive} = useContext(useSplashScreen)\r\n    const {snackbarObject, setSnackbarObject} = useContext(useSnackbar)\r\n    useEffect(() => {\r\n        if(JSON.stringify(user) == '{}'){\r\n            setUserDataFromCookie(Cookies.get('user_key'))\r\n        }\r\n        if (typeof user.last_index !== 'undefined') {\r\n            getQuestionByIndex(user.last_index)\r\n        }\r\n        setQuestionIndex(user.last_index);\r\n        setQuestionCategories({\r\n            approvedQuestions: user.approved_questions || [],\r\n            savedForLaterQuestions: user.saved_for_later_questions || [],\r\n            unrelatedQuestions: user.unrelated || [],\r\n            reportedQuestions: user.reported || []\r\n        })\r\n    }, [user])\r\n    const setUserDataFromCookie = async(hashKey)=>{\r\n        var userObj = await validateAndProceed(hashKey);\r\n        setUser(userObj);\r\n    }\r\n    const [questionStatus, setQuestionStatus] = useState('')\r\n    const [questionCategories, setQuestionCategories] = useState({\r\n        approvedQuestions: [],\r\n        savedForLaterQuestions: [],\r\n        unrelatedQuestions: [],\r\n        reportedQuestions: []\r\n    })\r\n    const [questionData, setQuestionData] = useState({\r\n        options: '[]',\r\n        marks: '',\r\n        time: '',\r\n        topic: '',\r\n        subTopic: '',\r\n        complexity: '',\r\n        type: '',\r\n        instructions:'',\r\n        remarks: '',\r\n        tags: ''\r\n    })\r\n    const [questionIndex, setQuestionIndex] = useState(0);\r\n    const nextQuestionHandler = () => {\r\n        getQuestionByIndex(questionIndex + 1)\r\n        setQuestionIndex(questionIndex + 1);\r\n    }\r\n    const previousQuestionHandler = () => {\r\n        if (questionIndex - 1 > -1) {\r\n            getQuestionByIndex(questionIndex - 1)\r\n            setQuestionIndex(questionIndex - 1);\r\n        }\r\n    }\r\n    const getQuestionByIndex = async (index) => {\r\n        setLoaderActive(true);\r\n        const formData = new FormData();\r\n        formData.append('index', index)\r\n        formData.append('key', user.key)\r\n        var response = await fetch('http://127.0.0.1:5000/question/getQuestionByIndex', {\r\n            method: 'post',\r\n            body: formData\r\n        });\r\n        var resultObj = await response.json();\r\n        setLoaderActive(false)\r\n        setQuestionData(resultObj.current_object);\r\n        setQuestionStatus(resultObj.question_status);\r\n    }\r\n    const saveInstantQuestionFunction = async (status) => {\r\n        const formData = new FormData();\r\n        setLoaderActive(true)\r\n        formData.append('questionData', JSON.stringify(questionData));\r\n        formData.append('questionIndex', questionIndex);\r\n        formData.append('questionStatus', status);\r\n        formData.append('key', user.key);\r\n        var response = await fetch('http://127.0.0.1:5000/question/saveQuestionInstance', {\r\n            method: 'post',\r\n            body: formData\r\n        });\r\n        var results = await response.json();\r\n        setLoaderActive(false)\r\n        setSnackbarObject({\r\n            snackbarOpen: true,\r\n            snackbarText: 'Saved Successfully'\r\n        })\r\n        setQuestionCategories({\r\n            approvedQuestions: results.approved_questions,\r\n            savedForLaterQuestions: results.saved_for_later,\r\n            unrelatedQuestions: results.unrelated,\r\n            reportedQuestions: results.reported\r\n        })\r\n    }\r\n    const saveQuestionBankFunction = async () => {\r\n        const formData = new FormData();\r\n        formData.append('key', user.key)\r\n        var response = await fetch('http://127.0.0.1:5000/question/saveQuestionBankGRE', {\r\n            method: 'post',\r\n            body: formData\r\n        });\r\n        var results = await response.json();\r\n        console.log(results)\r\n    }\r\n    const onMapClick = (index) => {\r\n        setQuestionIndex(index);\r\n        getQuestionByIndex(index);\r\n    }\r\n    return (<>\r\n        <div className={classes.root}>\r\n            <div className={classes.questionNavHelperGrid}>\r\n                <QuestionContent setQuestionData={setQuestionData} questionData={questionData} />\r\n                <div className={classes.questionNavGrid}>\r\n                    <Paper className={classes.sideBarStyle}>\r\n                        <RightSideBar questionData={questionData} setQuestionData={setQuestionData} />\r\n                    </Paper>\r\n                    <Paper elevation={3} className={classes.navigationStyle}>\r\n                        <FooterBar questionStatus={questionStatus} setQuestionStatus={setQuestionStatus} saveQuestionBankFunction={saveQuestionBankFunction} saveInstantQuestionFunction={saveInstantQuestionFunction} previousQuestionHandler={previousQuestionHandler} nextQuestionHandler={nextQuestionHandler} />\r\n                    </Paper>\r\n                    <Paper className={classes.rightSideBar}>\r\n                        <LeftSideBar totalQuestions={user.total_questions} questionIndex={questionIndex} questionCategories={questionCategories} onMapClick={onMapClick} />\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n            {/* <SimpleSnackbar/> */}\r\n        </div>\r\n    </>)\r\n}\r\n\r\n\r\nexport default QuestionsLanding;","import { makeStyles, TextField, Paper } from '@material-ui/core';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport useSnackbar from '../../../snack-bar/hooks/use-snack-bar';\r\n\r\n\r\n// Import katex\r\nimport katex from 'katex'\r\nimport 'katex/dist/katex.min.css'\r\n\r\nimport SunEditor, { buttonList } from \"suneditor-react\";\r\nimport 'suneditor/dist/css/suneditor.min.css'; // Import Sun Editor's CSS File\r\nimport plugins from 'suneditor/src/plugins'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        padding: '2em 0.5em 0.5em 0.5em',\r\n        height: '100%',\r\n        overflowY: 'auto'\r\n    },\r\n    questionAnswerStyle: {\r\n        minHeight: '8em',\r\n        padding: '1em',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n    },\r\n    metaDataArea: {\r\n        paddingTop: '2em'\r\n\r\n    },\r\n    optionsStyle: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignSelf: 'center',\r\n        padding: '0.5em'\r\n    },\r\n    instructionStyle: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignSelf: 'center',\r\n        padding: '3em'\r\n    },\r\n    instructionsHead: {\r\n\r\n    },\r\n    saveButtonStyle: {\r\n        alignSelf: 'flex-end',\r\n        paddingBottom: '1em',\r\n        paddingTop: '1em'\r\n    },\r\n    paper: {\r\n        marginTop: '2em'\r\n    },\r\n    addOptionButton: {\r\n\r\n    },\r\n    optionIteratorStyle: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        marginTop: '1em',\r\n        padding: '0.5em',\r\n    },\r\n    optionActionStyle: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    correctCheckbox: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n\r\n    questionAnswerStyle: {\r\n        minHeight: '8em',\r\n        padding: '1em',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n    },\r\n\r\n    questionStyle: {\r\n        alignSelf: 'center'\r\n    },\r\n\r\n    answerStyle: {\r\n        alignSelf: 'center',\r\n        display: 'flex'\r\n    },\r\n\r\n    explanationStyle: {\r\n        paddingTop: '2em'\r\n    },\r\n    checkBoxActionStyle:{\r\n        display: 'flex'\r\n    },\r\n    questionRichTextBoxWrapper:{\r\n        width: '100%'\r\n    },\r\n    explanationCheckboxStyle:{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        paddingLeft: '1em'\r\n    },\r\n})\r\nconst InnerQuestion = ({ questionData, setQuestionData, optionIndex, questionOptions }) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState('');\r\n    const [options, setOptions] = useState([]);\r\n    const [questionText, setQuestionText] = useState('');\r\n    const [questionFocus, setQuestionFocus] = useState(null);\r\n    const [optionFocusedKey, setOptionFocusedKey] = useState(null);\r\n    const { snackbarObject, setSnackbarObject } = useContext(useSnackbar)\r\n    useEffect(()=>{\r\n        setOptions(questionOptions[optionIndex].options || [])\r\n    },[questionOptions])\r\n    useEffect(()=>{\r\nconsole.log('hello')\r\n    },[questionData])\r\n    const Editor = {\r\n        modules: {\r\n            toolbar: [\r\n                ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n                [{ 'list': 'ordered' }, { 'list': 'bullet' }],\r\n                ['image', ''],\r\n                ['clean']\r\n            ],\r\n            clipboard: {\r\n                // toggle to add extra line breaks when pasting HTML:\r\n                matchVisual: false,\r\n            }\r\n        },\r\n        formats: [\r\n            'bold', 'italic', 'underline',\r\n            'list', 'bullet', 'indent',\r\n            'image',\r\n        ]\r\n    }\r\n    const hideToolbar = {\r\n        modules: {\r\n            toolbar: false,\r\n            clipboard: {\r\n                // toggle to add extra line breaks when pasting HTML:\r\n                matchVisual: false,\r\n            }\r\n        },\r\n        formats: [\r\n            'bold', 'italic', 'underline',\r\n            'list', 'bullet', 'indent',\r\n            'image',\r\n        ]\r\n    }\r\n    const addOptionHandler = () => {\r\n        if (options.length < 4) {\r\n            let option = {\r\n                option: '', isCorrect: false\r\n            }\r\n            let tempOptions = [...questionOptions];\r\n            tempOptions[optionIndex].options = options.concat(option);\r\n            updateParentQuestionData(tempOptions);\r\n            setOptions(options.concat(option))\r\n        } else {\r\n            setSnackbarObject({\r\n                snackbarOpen: true,\r\n                snackbarText: 'Only 4 options allowed'\r\n            })\r\n        }\r\n    }\r\n    const checkboxHandler = (e, key) => {\r\n        let tempOptions = [...questionOptions];\r\n        tempOptions[optionIndex].options[key].isCorrect = e.target.checked;\r\n        setOptions(tempOptions[optionIndex].options.map((item, index)=>{\r\n            if(index === key){\r\n                item.isCorrect = e.target.checked;\r\n                return item\r\n            } else{\r\n                return item\r\n            }\r\n        }))\r\n        updateParentQuestionData(tempOptions)\r\n    }\r\n    const explanationCheckboxHandler = (e, key) => {\r\n        let tempOptions = [...questionOptions];\r\n        tempOptions[optionIndex].options[key].hasExplanation = e.target.checked;\r\n        tempOptions[optionIndex].options[key].explanation = '';\r\n        setOptions(tempOptions[optionIndex].options.map((item, index)=>{\r\n            if(index === key){\r\n                item.hasExplanation = e.target.checked;\r\n                return item\r\n            } else{\r\n                return item\r\n            }\r\n        }))\r\n        updateParentQuestionData(tempOptions)\r\n    }\r\n    const deleteOptionHandler = (e, key) => {\r\n        let tempOptions = [...options];\r\n        tempOptions.splice(key, 1)\r\n        setOptions(tempOptions)\r\n        updateParentQuestionData(tempOptions)\r\n    }\r\n    const optionInputHandler =(data, key)=>{\r\n        let tempOptions = [...questionOptions];\r\n        tempOptions[optionIndex].options[key].option = data;\r\n        setOptions(tempOptions[optionIndex].options)\r\n        updateParentQuestionData(tempOptions);\r\n    }\r\n    const explanationInputHandler = (data, key)=>{\r\n        let tempOptions = [...questionOptions];\r\n        tempOptions[optionIndex].options[key].explanation = data;\r\n        setOptions(tempOptions[optionIndex].options)\r\n        updateParentQuestionData(tempOptions);\r\n    }\r\n    const updateParentQuestionData = (tempOptions)=>{\r\n        let tempQuestionData = questionData;\r\n        tempQuestionData.options = tempOptions\r\n        setQuestionData(tempQuestionData)\r\n    }\r\n    const questionInputHandler =(data)=>{\r\n        let tempOptions = [...questionOptions];\r\n        tempOptions[optionIndex].question = data;\r\n        updateParentQuestionData(tempOptions);\r\n    }\r\n    const questionEditorClickHandler =()=>{\r\n        setOptionFocusedKey(null);\r\n        setQuestionFocus(true);\r\n    }\r\n\r\n    const onOptionTextFieldFocus = (key)=>{\r\n        setOptionFocusedKey(key)\r\n        setQuestionFocus(false);\r\n    }\r\n    return <><div className={classes.root}>\r\n        <Paper elevation={3} className={classes.questionAnswerStyle}>\r\n            Question\r\n<div onClick={questionEditorClickHandler}>\r\n<SunEditor\r\n                            onChange={questionInputHandler}\r\n                            setContents={questionOptions[optionIndex].question || ''}\r\n                            setOptions={{\r\n                                mode: 'balloon-always',\r\n                                katex: katex,\r\n                                buttonList: [\r\n                                    ['undo', 'redo'],\r\n                                    ['font', 'fontSize', 'formatBlock'],\r\n                                    ['paragraphStyle', 'blockquote'],\r\n                                    ['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript'],\r\n                                    ['fontColor', 'hiliteColor', 'textStyle'],\r\n                                    ['removeFormat'],\r\n                                    '/', // Line break\r\n                                    ['outdent', 'indent'],\r\n                                    ['align', 'horizontalRule', 'list', 'lineHeight'],\r\n                                    ['table', 'link', 'image'/*, 'video', 'audio'*/, 'math'], // You must add the 'katex' library at options to use the 'math' plugin.\r\n                                    /** ['imageGallery'] */ // You must add the \"imageGalleryUrl\".\r\n                                    ['fullScreen', 'showBlocks', 'codeView'],\r\n                                    ['preview'/*, 'print'*/],\r\n                                    // ['save', 'template']\r\n                                ] // Or Array of button list, eg. [['font', 'align'], ['image']]\r\n                                // Other option\r\n                            }} />\r\n\r\n{/* <ReactQuill theme=\"snow\"\r\nmodules={questionFocus ? Editor.modules : hideToolbar.modules}\r\nformats={questionFocus ? Editor.formats : hideToolbar.formats}\r\n                value={questionOptions[optionIndex].question || ''} onChange={questionInputHandler} /> */}\r\n</div>\r\n        </Paper>\r\n        <div className={classes.metaDataArea}>\r\n            <Paper className={classes.paper} variant=\"outlined\">\r\n                <div className={classes.optionsStyle}>\r\n                    <div className={classes.instructionsHead}>\r\n                        Options\r\n        </div>\r\n                    <div className={classes.optionsEditorStyle}>\r\n                        {options.map((data, index) => {\r\n                            return (\r\n                                <Paper key={index} className={classes.optionIteratorStyle}>\r\n                                    <div className={classes.optionActionStyle}>\r\n                                        <div className={classes.correctCheckbox}>\r\n                                        </div>\r\n                                        <IconButton onClick={(e) => deleteOptionHandler(e, index)} aria-label=\"delete\" className={classes.margin}>\r\n                                            <DeleteIcon />\r\n                                        </IconButton>\r\n                                    </div>\r\n                                    <div className={classes.checkBoxActionStyle}>\r\n                                    <Checkbox\r\n                                                onChange={(e) => checkboxHandler(e, index)}\r\n                                                checked={data.isCorrect}\r\n                                                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                                            />\r\n                                                                                \r\n                                                                                \r\n                                                                                <div className={classes.questionRichTextBoxWrapper} onClick={() => onOptionTextFieldFocus(index)}>\r\n                                    <SunEditor\r\n                                    className={classes.questionRichTextBox}\r\n                            onChange={(data)=> optionInputHandler(data,index)}\r\n                            setContents={data.option || ''}\r\n                            setOptions={{\r\n                                mode: 'balloon-always',\r\n                                katex: katex,\r\n                                buttonList: [\r\n                                    ['undo', 'redo'],\r\n                                    ['font', 'fontSize', 'formatBlock'],\r\n                                    ['paragraphStyle', 'blockquote'],\r\n                                    ['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript'],\r\n                                    ['fontColor', 'hiliteColor', 'textStyle'],\r\n                                    ['removeFormat'],\r\n                                    '/', // Line break\r\n                                    ['outdent', 'indent'],\r\n                                    ['align', 'horizontalRule', 'list', 'lineHeight'],\r\n                                    ['table', 'link', 'image'/*, 'video', 'audio'*/, 'math'], // You must add the 'katex' library at options to use the 'math' plugin.\r\n                                    /** ['imageGallery'] */ // You must add the \"imageGalleryUrl\".\r\n                                    ['fullScreen', 'showBlocks', 'codeView'],\r\n                                    ['preview'/*, 'print'*/],\r\n                                    // ['save', 'template']\r\n                                ] // Or Array of button list, eg. [['font', 'align'], ['image']]\r\n                                // Other option\r\n                            }} />\r\n                                    {/* <ReactQuill className={classes.questionRichTextBox} theme=\"snow\"\r\n                                                                modules={(index === optionFocusedKey) ? Editor.modules : hideToolbar.modules}\r\n                                                                formats={(index === optionFocusedKey) ? Editor.formats : hideToolbar.formats}\r\n                                        value={data.option || ''} onChange={(data)=> optionInputHandler(data,index)} /> */}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                        {\r\n                                                        data.isCorrect ?\r\n                                                        <>\r\n                                                        <div className={classes.explanationCheckboxStyle}>\r\n                                                            <Checkbox\r\n                                                                onChange={(e) => explanationCheckboxHandler(e, index)}\r\n                                                                checked={data.hasExplanation}\r\n                                                                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                                                            />explanation\r\n                                                </div> {data.hasExplanation ?\r\n                                                            <div style={{padding:8}}>\r\n                                                                <p style={{fontSize:12}}></p>\r\n                                                                <div className={classes.editorStyle} >\r\n                                                                    <SunEditor\r\n                                                                        onChange={(data) => explanationInputHandler(data, index)}\r\n                                                                        setContents={data.explanation}\r\n                                                                        setOptions={{\r\n                                                                            mode: 'balloon-always',\r\n                                                                            katex: katex,\r\n                                                                            buttonList: [\r\n                                                                                ['undo', 'redo'],\r\n                                                                                ['font', 'fontSize', 'formatBlock'],\r\n                                                                                ['paragraphStyle', 'blockquote'],\r\n                                                                                ['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript'],\r\n                                                                                ['fontColor', 'hiliteColor', 'textStyle'],\r\n                                                                                ['removeFormat'],\r\n                                                                                '/', // Line break\r\n                                                                                ['outdent', 'indent'],\r\n                                                                                ['align', 'horizontalRule', 'list', 'lineHeight'],\r\n                                                                                ['table', 'link', 'image'/*, 'video', 'audio'*/, 'math'], // You must add the 'katex' library at options to use the 'math' plugin.\r\n                                                                                /** ['imageGallery'] */ // You must add the \"imageGalleryUrl\".\r\n                                                                                ['fullScreen', 'showBlocks', 'codeView'],\r\n                                                                                ['preview'/*, 'print'*/],\r\n                                                                                // ['save', 'template']\r\n                                                                            ] // Or Array of button list, eg. [['font', 'align'], ['image']]\r\n                                                                            // Other option\r\n                                                                        }} />\r\n                                                                </div>\r\n                                                            </div> : ''}</>\r\n                                                            : <></>\r\n                                                    }\r\n                                </Paper>\r\n                            );\r\n                        })}</div>\r\n                    <div className={classes.addOptionButton}>\r\n                        <IconButton onClick={addOptionHandler} aria-label=\"Add\" className={classes.margin}>\r\n                            <AddIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    </div>\r\n\r\n    </>\r\n}\r\n\r\nexport default InnerQuestion;","import { makeStyles, Button, TextField, Paper } from '@material-ui/core';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport useSnackbar from '../../snack-bar/hooks/use-snack-bar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport InnerQuestion from './inner-question/inner-question';\r\n// Import katex\r\nimport katex from 'katex'\r\nimport 'katex/dist/katex.min.css'\r\n\r\nimport SunEditor, { buttonList } from \"suneditor-react\";\r\nimport 'suneditor/dist/css/suneditor.min.css'; // Import Sun Editor's CSS File\r\nimport plugins from 'suneditor/src/plugins'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        gridArea: '1/1',\r\n        overflowY: 'auto',\r\n        transition: 'all 0.3s ease'\r\n    },\r\n    marginLeftStyle: {\r\n        marginLeft: '250px',\r\n    },\r\n    marginRightStyle: {\r\n        marginRight: '250px',\r\n    },\r\n    rootContent: {\r\n        padding: '0em 5em 2em 5em',\r\n    },\r\n    collapsibleButton: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    questionAnswerStyle: {\r\n        minHeight: '8em',\r\n        padding: '1em',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n    },\r\n    metaDataArea: {\r\n        // paddingTop: '2em'\r\n\r\n    },\r\n    optionsStyle: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignSelf: 'center',\r\n        padding: '1em'\r\n    },\r\n    instructionStyle: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignSelf: 'center',\r\n        padding: '1em'\r\n    },\r\n    instructionsHead: {\r\n        fontWeight: 'bold'\r\n    },\r\n    saveButtonStyle: {\r\n        alignSelf: 'flex-end',\r\n        paddingBottom: '1em',\r\n        paddingTop: '1em'\r\n    },\r\n    paper: {\r\n        marginTop: '2em'\r\n    },\r\n    addOptionButton: {\r\n\r\n    },\r\n    optionIteratorStyle: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        marginTop: '1em',\r\n        border: '1px solid #0000ff69'\r\n    },\r\n    optionActionStyle: {\r\n        display: 'grid',\r\n        gridTemplateColumns: '40px 1fr 56px',\r\n        height: '100%'\r\n    },\r\n    optionActionStyleQuestion: {\r\n        display: 'grid',\r\n        gridTemplateColumns: '1fr 50px',\r\n        height: '100%'\r\n    },\r\n    correctCheckbox: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    explanationCheckboxStyle:{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        paddingLeft: '1em'\r\n    },\r\n    questionAnswerStyle: {\r\n        minHeight: '8em',\r\n        padding: '1em',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n    },\r\n\r\n    questionStyle: {\r\n        alignSelf: 'center'\r\n    },\r\n\r\n    answerStyle: {\r\n        alignSelf: 'center',\r\n        display: 'flex'\r\n    },\r\n\r\n    explanationStyle: {\r\n        paddingTop: '2em'\r\n    },\r\n    questionRichTextBoxOuter: {\r\n        // minHeight: '11em',\r\n    },\r\n    questionRichTextBox: {\r\n        // minHeight: '9em'\r\n    },\r\n    expandedPaperHeight: {\r\n        minHeight: '8em'\r\n    },\r\n    editorStyle: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    }\r\n})\r\nconst QuestionContentCreator = ({ questionIndex, questionData, setQuestionData, leftCollapsed, rightCollapsed, setRightCollapsed, setLeftCollapsed }) => {\r\n    const classes = useStyles();\r\n    const { snackbarObject, setSnackbarObject } = useContext(useSnackbar)\r\n    const [options, setOptions] = useState(questionData.options || []);\r\n    useEffect(() => {\r\n        if (questionData.options) {\r\n            setOptions(questionData.options)\r\n        }\r\n    }, [questionData])\r\n    useEffect(() => {\r\n    }, [questionIndex])\r\n    const addOptionHandler = () => {\r\n        if (options.length < 4) {\r\n            let option = {\r\n                option: '', options: [], question: '', isCorrect: false\r\n            }\r\n            setOptions(options.concat(option))\r\n        } else {\r\n            setSnackbarObject({\r\n                snackbarOpen: true,\r\n                snackbarText: 'Only 4 options allowed'\r\n            })\r\n        }\r\n    }\r\n    const checkboxHandler = (e, key) => {\r\n        let tempOptions = [...options];\r\n        tempOptions[key].isCorrect = e.target.checked;\r\n        setOptions(tempOptions);\r\n        updateParentQuestionDataOptions(tempOptions);\r\n    }\r\n    const explanationCheckboxHandler = (e, key) => {\r\n        let tempOptions = [...options];\r\n        tempOptions[key].hasExplanation = e.target.checked;\r\n        tempOptions[key].explanation = '';\r\n        setOptions(tempOptions);\r\n        updateParentQuestionDataOptions(tempOptions);\r\n    }\r\n    const deleteOptionHandler = (e, key) => {\r\n        let tempOptions = [...options];\r\n        tempOptions.splice(key, 1)\r\n        setOptions(tempOptions)\r\n        updateParentQuestionDataOptions(tempOptions);\r\n    }\r\n    const passageTypeCheckboxHandler = (e) => {\r\n        let tempOptions = [];\r\n        setOptions(tempOptions)\r\n        setQuestionData({ ...questionData, 'isPassageType': e.target.checked, options: tempOptions })\r\n    }\r\n    const leftNavigationHandler = () => {\r\n        setLeftCollapsed(!leftCollapsed)\r\n    }\r\n    const rightNavigationHandler = () => {\r\n        setRightCollapsed(!rightCollapsed)\r\n    }\r\n    const questionInputHandler = (data) => {\r\n        // setQuestion(data)\r\n        // if(focusKey) {\r\n        setQuestionData((prevState) => ({ ...prevState, 'question': data }));\r\n        // }\r\n    }\r\n    const optionInputHandler = (data, key) => {\r\n        let tempOptions = [...options];\r\n        tempOptions[key].option = data;\r\n        setOptions(tempOptions)\r\n        updateParentQuestionDataOptions(tempOptions);\r\n\r\n    }\r\n    const explanationInputHandler = (data, key) => {\r\n        let tempOptions = [...options];\r\n        tempOptions[key].explanation = data;\r\n        setOptions(tempOptions)\r\n        updateParentQuestionDataOptions(tempOptions);\r\n\r\n    }\r\n    const updateParentQuestionDataOptions = (tempOptions) => {\r\n        let tempQuestionData = questionData;\r\n        tempQuestionData.options = tempOptions\r\n        setQuestionData(tempQuestionData)\r\n    }\r\n    const updateParentQuestionData = (tempQuestionData) => {\r\n        setQuestionData(tempQuestionData)\r\n    }\r\n    const editorConfig = {\r\n        plugins: plugins,\r\n        height: 200,\r\n        buttonList: buttonList.complex\r\n    };\r\n    return <>\r\n        <div className={[classes.root, rightCollapsed ? '' : classes.marginRightStyle, leftCollapsed ? '' : classes.marginLeftStyle].join(' ')}>\r\n            <div className={classes.collapsibleButton}>\r\n                {/* <IconButton onClick={leftNavigationHandler} aria-label=\"delete\" className={classes.margin}>\r\n                    {leftCollapsed ? <ArrowForwardIosIcon /> : <ArrowBackIosIcon />}\r\n                </IconButton> */}\r\n                <div></div>\r\n                <IconButton onClick={rightNavigationHandler} aria-label=\"delete\" className={classes.margin}>\r\n                    {rightCollapsed ? <ArrowBackIosIcon /> : <ArrowForwardIosIcon />}\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.rootContent}>\r\n                <Paper elevation={3} className={classes.questionAnswerStyle}>\r\n                    <div className={classes.instructionsHead}>\r\n                        {questionData.isPassageType ? 'Passage:' : 'Question:'}\r\n                    </div>\r\n                    <div className={classes.questionRichTextBoxOuter}>\r\n                        <SunEditor\r\n                            onChange={questionInputHandler}\r\n                            setContents={questionData.question || ''}\r\n                            setOptions={{\r\n                                mode: 'balloon-always',\r\n                                katex: katex,\r\n                                buttonList: [\r\n                                    ['undo', 'redo'],\r\n                                    ['font', 'fontSize', 'formatBlock'],\r\n                                    ['paragraphStyle', 'blockquote'],\r\n                                    ['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript'],\r\n                                    ['fontColor', 'hiliteColor', 'textStyle'],\r\n                                    ['removeFormat'],\r\n                                    '/', // Line break\r\n                                    ['outdent', 'indent'],\r\n                                    ['align', 'horizontalRule', 'list', 'lineHeight'],\r\n                                    ['table', 'link', 'image'/*, 'video', 'audio'*/, 'math'], // You must add the 'katex' library at options to use the 'math' plugin.\r\n                                    /** ['imageGallery'] */ // You must add the \"imageGalleryUrl\".\r\n                                    ['fullScreen', 'showBlocks', 'codeView'],\r\n                                    ['preview'/*, 'print'*/],\r\n                                    // ['save', 'template']\r\n                                ] // Or Array of button list, eg. [['font', 'align'], ['image']]\r\n                                // Other option\r\n                            }} />\r\n                    </div>\r\n                    <div className={classes.correctCheckbox}>\r\n                        <div className={classes.instructionsHead}>\r\n                            is Passage type ?</div>\r\n                        <Checkbox\r\n                            checked={questionData.isPassageType}\r\n                            onClick={passageTypeCheckboxHandler}\r\n                            inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                        />\r\n                    </div>\r\n                </Paper>\r\n                <div className={classes.metaDataArea}>\r\n                    <Paper className={classes.paper} variant=\"outlined\">\r\n                        {\r\n                            questionData.isPassageType ? <div className={classes.optionsStyle}>\r\n                                <div className={classes.instructionsHead}>\r\n                                    Questions\r\n</div>\r\n                                <div className={classes.optionsEditorStyle}>\r\n                                    {options.map((data, index) => {\r\n                                        return (\r\n                                            <Paper key={index} className={classes.optionIteratorStyle}>\r\n                                                <div className={classes.optionActionStyleQuestion}>\r\n\r\n                                                    <InnerQuestion questionData={questionData} questionOptions={options} optionIndex={index} setQuestionData={setQuestionData} />\r\n                                                    <IconButton onClick={(e) => deleteOptionHandler(e, index)} aria-label=\"delete\" className={classes.margin}>\r\n                                                        <DeleteIcon />\r\n                                                    </IconButton>\r\n                                                </div>\r\n                                            </Paper>\r\n                                        );\r\n                                    })}</div>\r\n                                <div className={classes.addOptionButton}>\r\n                                    <IconButton onClick={addOptionHandler} aria-label=\"Add\" className={classes.margin}>\r\n                                        <AddIcon />\r\n                                    </IconButton>\r\n                                </div>\r\n                            </div> :\r\n                                <div className={classes.optionsStyle}>\r\n                                    <div className={classes.instructionsHead}>\r\n                                        Options\r\n        </div>\r\n                                    <div className={classes.optionsEditorStyle}>\r\n                                        {options.map((data, index) => {\r\n                                            return (\r\n                                                <Paper\r\n                                                    elevation={3} key={index} className={[classes.optionIteratorStyle].join(' ')}>\r\n                                                    <div className={classes.optionActionStyle}>\r\n                                                        <div className={classes.correctCheckbox}>\r\n                                                            <Checkbox\r\n                                                                onChange={(e) => checkboxHandler(e, index)}\r\n                                                                checked={data.isCorrect}\r\n                                                                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                                                            />\r\n                                                        </div>\r\n                                                        <div className={classes.editorStyle} >\r\n                                                            <SunEditor\r\n                                                                onChange={(e) => optionInputHandler(e, index)}\r\n                                                                setContents={data.option}\r\n                                                                setOptions={{\r\n                                                                    mode: 'balloon-always',\r\n                                                                    katex: katex,\r\n                                                                    buttonList: [\r\n                                                                        ['undo', 'redo'],\r\n                                                                        ['font', 'fontSize', 'formatBlock'],\r\n                                                                        ['paragraphStyle', 'blockquote'],\r\n                                                                        ['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript'],\r\n                                                                        ['fontColor', 'hiliteColor', 'textStyle'],\r\n                                                                        ['removeFormat'],\r\n                                                                        '/', // Line break\r\n                                                                        ['outdent', 'indent'],\r\n                                                                        ['align', 'horizontalRule', 'list', 'lineHeight'],\r\n                                                                        ['table', 'link', 'image'/*, 'video', 'audio'*/, 'math'], // You must add the 'katex' library at options to use the 'math' plugin.\r\n                                                                        /** ['imageGallery'] */ // You must add the \"imageGalleryUrl\".\r\n                                                                        ['fullScreen', 'showBlocks', 'codeView'],\r\n                                                                        ['preview'/*, 'print'*/],\r\n                                                                        // ['save', 'template']\r\n                                                                    ] // Or Array of button list, eg. [['font', 'align'], ['image']]\r\n                                                                    // Other option\r\n                                                                }} />\r\n                                                        </div>\r\n                                                        <IconButton onClick={(e) => deleteOptionHandler(e, index)} aria-label=\"delete\" className={classes.margin}>\r\n                                                            <DeleteIcon />\r\n                                                        </IconButton>\r\n\r\n                                                    </div>\r\n\r\n                                                    {\r\n                                                        data.isCorrect ?\r\n                                                            <>\r\n                                                                <div className={classes.explanationCheckboxStyle}>\r\n                                                                    <Checkbox\r\n                                                                        onChange={(e) => explanationCheckboxHandler(e, index)}\r\n                                                                        checked={data.hasExplanation}\r\n                                                                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                                                                    />explanation\r\n                                                        </div>\r\n                                                                {\r\n                                                                    data.hasExplanation ?\r\n                                                                        <div style={{ padding: 8 }}>\r\n                                                                            <p style={{ fontSize: 12 }}>{\"Instructions\"}</p>\r\n                                                                            <div className={classes.editorStyle} >\r\n                                                                                <SunEditor\r\n                                                                                    onChange={(e) => explanationInputHandler(e, index)}\r\n                                                                                    setContents={data.explanation}\r\n                                                                                    setOptions={{\r\n                                                                                        mode: 'balloon-always',\r\n                                                                                        katex: katex,\r\n                                                                                        buttonList: [\r\n                                                                                            ['undo', 'redo'],\r\n                                                                                            ['font', 'fontSize', 'formatBlock'],\r\n                                                                                            ['paragraphStyle', 'blockquote'],\r\n                                                                                            ['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript'],\r\n                                                                                            ['fontColor', 'hiliteColor', 'textStyle'],\r\n                                                                                            ['removeFormat'],\r\n                                                                                            '/', // Line break\r\n                                                                                            ['outdent', 'indent'],\r\n                                                                                            ['align', 'horizontalRule', 'list', 'lineHeight'],\r\n                                                                                            ['table', 'link', 'image'/*, 'video', 'audio'*/, 'math'], // You must add the 'katex' library at options to use the 'math' plugin.\r\n                                                                                            /** ['imageGallery'] */ // You must add the \"imageGalleryUrl\".\r\n                                                                                            ['fullScreen', 'showBlocks', 'codeView'],\r\n                                                                                            ['preview'/*, 'print'*/],\r\n                                                                                            // ['save', 'template']\r\n                                                                                        ] // Or Array of button list, eg. [['font', 'align'], ['image']]\r\n                                                                                        // Other option\r\n                                                                                    }} />\r\n                                                                            </div>\r\n                                                                        </div> : ''\r\n                                                                }\r\n\r\n                                                            </>\r\n                                                            : <></>\r\n                                                    }\r\n\r\n                                                </Paper>\r\n                                            );\r\n                                        })}</div>\r\n                                    <div className={classes.addOptionButton}>\r\n                                        <IconButton onClick={addOptionHandler} aria-label=\"Add\" className={classes.margin}>\r\n                                            <AddIcon />\r\n                                        </IconButton>\r\n                                    </div>\r\n                                </div>\r\n                        }\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </>\r\n}\r\n\r\nexport default QuestionContentCreator;","import { Button, makeStyles, Paper, TextField, useTheme } from '@material-ui/core';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport useSnackbar from '../../snack-bar/hooks/use-snack-bar';\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nconst useStyles = makeStyles(theme => ({\r\n    backwardStyle: {\r\n        display: 'flex'\r\n    },\r\n    button: {\r\n        background: 'darkslategrey',\r\n        color: 'aliceblue',\r\n        \"&:hover\": {\r\n            backgroundColor: \"#3e8888\"\r\n        }\r\n    },\r\n\r\n    forwardStyle: {\r\n        display: 'flex',\r\n    },\r\n\r\n    saveButtonStyle: {\r\n        alignSelf: 'center',\r\n        paddingBottom: '1em',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n    formControl: {\r\n        width: '9em'\r\n    },\r\n    questionStatus: {\r\n    },\r\n    saveButton: {\r\n        height: 'fit-content'\r\n    },\r\n    uncheckedIconButtonStyle: {\r\n        margin: 1,\r\n        '&:hover': {\r\n            color: 'ghostwhite',\r\n        }\r\n    },\r\n    checkedIconButtonStyle: {\r\n        margin: 1,\r\n        '&:hover': {\r\n            color: 'limegreen',\r\n        }\r\n    },\r\n    savedForLaterIconButtonStyle: {\r\n        margin: 1,\r\n        '&:hover': {\r\n            color: 'deepskyblue',\r\n        }\r\n    },\r\n    unrelatedIconButtonStyle: {\r\n        margin: 1,\r\n        '&:hover': {\r\n            color: 'tomato',\r\n        }\r\n    },\r\n    reportedIconButtonStyle: {\r\n        margin: 1,\r\n        '&:hover': {\r\n            color: 'red',\r\n        }\r\n    },\r\n    unchecked: {\r\n        color: 'ghostwhite',\r\n    },\r\n    checked: {\r\n        color: 'limegreen'\r\n    },\r\n    savedForLater: {\r\n        color: 'deepskyblue'\r\n    },\r\n    unrelated: {\r\n        color: 'tomato'\r\n    },\r\n    undone: {\r\n        color: 'lightseagreen'\r\n    },\r\n    reported: {\r\n        color: 'red'\r\n    },\r\n    questionInfo: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        paddingLeft: '1em',\r\n    },\r\n    actionButton:{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: '0em 1em 0em 1em'\r\n    }\r\n}))\r\nconst QuestionCreatorFooter = ({ uploadQuestionBank, addNewQuestion, saveQuestionData, previousQuestionHandler, nextQuestionHandler, questionIndex, totalQuestions }) => {\r\n    const appTheme = useTheme();\r\n    const classes = useStyles(appTheme);\r\n    const { snackbarObject, setSnackbarObject } = useContext(useSnackbar)\r\n    const saveQuestionHandler=()=>{\r\n        saveQuestionData()\r\n        setSnackbarObject({\r\n            snackbarOpen: true,\r\n            snackbarText: 'Saved Successfully'\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            <div className={classes.backwardStyle}>\r\n                <Button\r\n                    onClick={previousQuestionHandler}\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    startIcon={<ArrowBackIosIcon />}\r\n                >\r\n                    Back\r\n                            </Button>\r\n                <div className={classes.questionInfo}>\r\n                    Question: <b>{questionIndex + 1}</b>\r\n                </div>\r\n            </div>\r\n            <div className={classes.saveButtonStyle}>\r\n            <div className={classes.actionButton}>\r\n                <Tooltip title=\"Save\">\r\n            <IconButton onClick={saveQuestionHandler} aria-label=\"delete\" className={classes.margin}>\r\n                <SaveIcon />\r\n            </IconButton>\r\n            </Tooltip>\r\n            Save\r\n            </div>\r\n            <div className={classes.actionButton}>\r\n            <Tooltip title=\"Add Question\">\r\n            <IconButton onClick={addNewQuestion} aria-label=\"delete\" className={classes.margin}>\r\n                <AddCircleOutlineIcon />\r\n            </IconButton>\r\n            </Tooltip>\r\n            Add Question\r\n            </div>\r\n            <div className={classes.actionButton}>\r\n            <Tooltip title=\"Upload Question Bank\">\r\n            <IconButton onClick={uploadQuestionBank} aria-label=\"delete\" className={classes.margin}>\r\n                <BackupIcon />\r\n            </IconButton>\r\n            </Tooltip>\r\n            Upload to Cloud\r\n            </div>\r\n                {/* <Button variant=\"contained\" color=\"primary\" onClick={saveQuestionData}>Save</Button> */}\r\n                {/* <Button variant=\"contained\" color=\"primary\" onClick={addNewQuestion}>Add new Question</Button> */}\r\n            </div>\r\n            <div className={classes.forwardStyle}>{\r\n                questionIndex === totalQuestions - 1 ?\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        className={classes.button}\r\n                        onClick={addNewQuestion}\r\n                        endIcon={<ArrowForwardIosIcon />}\r\n                    >\r\n                        Add Next\r\n                            </Button> :\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        className={classes.button}\r\n                        onClick={nextQuestionHandler}\r\n                        endIcon={<ArrowForwardIosIcon />}\r\n                    >\r\n                        Next\r\n                                                    </Button>\r\n            }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QuestionCreatorFooter;","import { makeStyles, useTheme } from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        paddingTop: '0.5em',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        height: '100%'\r\n    },\r\n    paper: {\r\n        minHeight: 25,\r\n        minWidth: 25,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        cursor: 'pointer'\r\n    },\r\n    unchecked: {\r\n        background: 'ghostwhite'\r\n    },\r\n    checked: {\r\n        background: 'greenyellow'\r\n    },\r\n    savedForLater: {\r\n        background: 'deepskyblue'\r\n    },\r\n    borderStyle: {\r\n        border: '0.5px solid blue'\r\n    },\r\n    unrelated: {\r\n        background: 'tomato'\r\n    },\r\n    reported: {\r\n        background: 'red'\r\n    },\r\n    paginationButtons: {\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        marginTop: 'auto'\r\n    },\r\n    margin: {\r\n        margin: 1\r\n    },\r\n    filterDropdown: {\r\n        width: '8em'\r\n    },\r\n    formControl: {\r\n        paddingBottom: '1em'\r\n    },\r\n    gridContainer: {\r\n        overflowY: 'auto'\r\n    }\r\n}))\r\nconst QuestionCreatorRightsideBar = ({onMapClick, questionIndex,totalQuestions})=>{\r\n    const appTheme = useTheme()\r\n    const classes = useStyles(appTheme);\r\n    useEffect(()=>{\r\n        setActiveIndex(questionIndex)\r\n        setIndexController(Math.floor(questionIndex / 100))\r\n    }, [questionIndex])\r\n    const [activeIndex, setActiveIndex] = useState(0)\r\n    const [indexController, setIndexController] = useState(0)\r\n    const arrayForIteration = Array.from(Array(100).keys());\r\n\r\n    var pages = Math.ceil(totalQuestions / 100);\r\n    const forwardHandler = () => {\r\n        if (indexController < pages - 1) {\r\n            setIndexController(indexController + 1)\r\n        }\r\n    }\r\n    const backwardHandler = () => {\r\n        if (indexController > 0) {\r\n            setIndexController(indexController - 1)\r\n        }\r\n    }\r\n    const onPaperClickHandler = (index) => {\r\n        setActiveIndex(index);\r\n        onMapClick(index)\r\n    }\r\n    return <div className={classes.root}>\r\n\r\n        <Grid item>\r\n        <Grid className={classes.gridContainer} container justify=\"center\" spacing={1}>\r\n            {arrayForIteration.map((value, index) => (\r\n                (index + (indexController * 100)) < totalQuestions ? <Grid key={index} item>\r\n                    <Paper onClick={(e) => onPaperClickHandler(Number(e.target.innerText) - 1)} className={[classes.paper\r\n                        , activeIndex === (index + (indexController * 100)) ? classes.borderStyle : ''].join(' ')}>{index + (indexController * 100) + 1}</Paper>\r\n                </Grid> : ''\r\n            ))}\r\n        </Grid>\r\n    </Grid>\r\n    <div className={classes.paginationButtons}>\r\n            <IconButton onClick={backwardHandler} aria-label=\"delete\" className={classes.margin}>\r\n                <ArrowBackIosIcon />\r\n            </IconButton>\r\n            <IconButton onClick={forwardHandler} aria-label=\"delete\" className={classes.margin}>\r\n                <ArrowForwardIosIcon />\r\n            </IconButton>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default QuestionCreatorRightsideBar;","import { makeStyles, Paper, Snackbar, useTheme } from '@material-ui/core';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport useUserContext from '../../../utils/user-context/user-context';\r\nimport useSnackbar from '../../snack-bar/hooks/use-snack-bar';\r\nimport SimpleSnackbar from '../../snack-bar/snack-bar';\r\nimport QuestionContentCreator from '../question-content-creator/question-content-creator';\r\nimport QuestionCreatorFooter from '../question-creator-footer/question-creator-footer';\r\nimport QuestionCreatorRightsideBar from '../question-creator-rightside-bar/question-creator-rightside-bar';\r\nimport Cookies from 'js-cookie'\r\nimport { validateAndProceedUserAndDoc } from '../../../utils/auth-functions/auth-functions';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useSplashScreen from '../../splash-screen/hooks/use-splash-screen';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flexWrap: 'wrap',\r\n        listStyle: 'none',\r\n    },\r\n    questionNavHelperGrid: {\r\n        display: 'grid',\r\n        gridTemplateColumns: '1fr',\r\n        height: '100%',\r\n        overflowX: 'hidden',\r\n        overflowY: 'hidden'\r\n    },\r\n    questionNavGrid: {\r\n        display: 'grid',\r\n        gridTemplateColumns: '250px 1fr 250px',\r\n        gridTemplateRows: '1fr 100px',\r\n        gridArea: '1/1'\r\n    },\r\n    sideBarStyle: {\r\n        gridRow: '1/3',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between'\r\n    },\r\n    rightSideBar: {\r\n        gridRow: '1/3',\r\n        gridColumn: '3/4',\r\n        transition: 'all 1s ease',\r\n    },\r\n    navigationStyle: {\r\n        background: 'aliceblue',\r\n        width: '100%',\r\n        gridRow: '2/3',\r\n        zIndex: 1,\r\n        display: 'flex',\r\n        height: '4em',\r\n        alignSelf: 'flex-end',\r\n        justifyContent: 'space-between'\r\n\r\n    },\r\n    navigationWidthSmall: {\r\n        gridColumn: '2/3',\r\n    },\r\n    navigationWidthLarge: {\r\n        gridColumn: '1/4'\r\n    },\r\n    navigationWidthLeftCollapsed: {\r\n        gridColumn: '1/3'\r\n    },\r\n    navigationWidthRightCollapsed: {\r\n        gridColumn: '2/4'\r\n    },\r\n    hideDiv: {\r\n        display: 'none'\r\n    }\r\n}))\r\nconst QuestionsCreatorLanding = () => {\r\n    const appTheme = useTheme();\r\n    const classes = useStyles(appTheme);\r\n    const history = useHistory()\r\n    const { user, setUser } = useContext(useUserContext);\r\n    const [leftCollapsed, setLeftCollapsed] = useState(true);\r\n    const [rightCollapsed, setRightCollapsed] = useState(true);\r\n    const [questionIndex, setQuestionIndex] = useState(0);\r\n    const { snackbarObject, setSnackbarObject } = useContext(useSnackbar)\r\n    const {loaderActive, setLoaderActive} = useContext(useSplashScreen)\r\n    const LEFT = 37;\r\n    const UP = 38;\r\n    const RIGHT = 39;\r\n    const DOWN = 40;\r\n    const [questionData, setQuestionData] = useState({\r\n        isPassageType: false,\r\n        options: []\r\n    });\r\n    var keyBinder = 0;\r\n    useEffect(() => {\r\n        if (!user.total_questions) {\r\n            history.push('/addQuestions')\r\n        } else{\r\n            getQuestionByIndex(0)\r\n        }\r\n\r\n    }, []);\r\n    useEffect(() => {\r\n        if (!keyBinder) {\r\n            window.addEventListener('keydown', saveKeyStrokeHandler);\r\n            keyBinder++;\r\n        }\r\n        return () => {\r\n            while (keyBinder > 0) {\r\n                window.removeEventListener('keydown', saveKeyStrokeHandler);\r\n                keyBinder--;\r\n            }\r\n        }\r\n    }, [questionData]);\r\n    const setUserDataFromCookie = async (userHashKey, documentHashKey) => {\r\n        var userObj = await validateAndProceedUserAndDoc(userHashKey, documentHashKey);\r\n        setUser(userObj);\r\n    }\r\n    const saveKeyStrokeHandler = (e) => {\r\n        let charCode = String.fromCharCode(e.which).toLowerCase();\r\n        if (e.ctrlKey && charCode === 's') {\r\n            saveQuestionData()\r\n            e.preventDefault()\r\n            setSnackbarObject({\r\n                snackbarOpen: true,\r\n                snackbarText: 'Saved Successfully'\r\n            })\r\n        }\r\n        if (e.ctrlKey && charCode === 'q') {\r\n            addNewQuestion();\r\n            e.preventDefault()\r\n        }\r\n        if (e.ctrlKey && (e.which === LEFT)) {\r\n            previousQuestionHandler();\r\n            e.preventDefault()\r\n        }\r\n        if (e.ctrlKey && (e.which === RIGHT)) {\r\n            nextQuestionHandler();\r\n            e.preventDefault()\r\n        }\r\n    }\r\n    const onMapClick = (index) => {\r\n        // updateUserData(index)\r\n        saveQuestionData();\r\n        setQuestionIndex(index);\r\n        getQuestionByIndex(index);\r\n    }\r\n    const nextQuestionHandler = () => {\r\n        if(user.total_questions - 1 > questionIndex) {\r\n            getQuestionByIndex(questionIndex + 1)\r\n            setQuestionIndex(questionIndex + 1);\r\n        }\r\n    }\r\n    const previousQuestionHandler = () => {\r\n        if (questionIndex - 1 > -1) {\r\n            getQuestionByIndex(questionIndex - 1)\r\n            setQuestionIndex(questionIndex - 1);\r\n        }\r\n    }\r\n    const getQuestionByIndex = async (index) => {\r\n        const formData = new FormData();\r\n        formData.append('index', index)\r\n        formData.append('userKey', user.user_hash_key || Cookies.get('user_key'))\r\n        formData.append('documentKey', user.doc_hash_key || Cookies.get('document_key'))\r\n        \r\n        let blankQuestionData = {\r\n            options: [],\r\n            question: '',\r\n            isPassageType: false,\r\n        };\r\n        setQuestionData(blankQuestionData);\r\n        var response = await fetch('http://127.0.0.1:5000/getQuestionByIndex', {\r\n            method: 'post',\r\n            body: formData\r\n        });\r\n        var resultObj = await response.json();\r\n        if (JSON.parse(resultObj.current_object)) {\r\n            setQuestionData(JSON.parse(resultObj.current_object))\r\n        }\r\n    }\r\n    const saveQuestionData = async () => {\r\n        setLoaderActive(true)\r\n        const formData = new FormData();\r\n        formData.append('index', questionIndex)\r\n        formData.append('questionData', JSON.stringify(questionData));\r\n        formData.append('userKey', user.user_hash_key || Cookies.get('user_key'))\r\n        formData.append('documentKey', user.doc_hash_key || Cookies.get('document_key'))\r\n        var response = await fetch('http://127.0.0.1:5000/saveQuestionByIndex', {\r\n            method: 'post',\r\n            body: formData\r\n        });\r\n        setLoaderActive(false)\r\n    }\r\n    const updateUserData = async (index) => {\r\n        const formData = new FormData();\r\n        formData.append('userKey', user.user_hash_key)\r\n        formData.append('last_index', index)\r\n        formData.append('documentKey', user.doc_hash_key)\r\n        var response = await fetch('http://127.0.0.1:5000/updateCreaorData', {\r\n            method: 'post',\r\n            body: formData\r\n        });\r\n        setQuestionIndex(index)\r\n    }\r\n    const uploadQuestionBank = async()=>{\r\n        setLoaderActive(true)\r\n        const formData = new FormData();\r\n        formData.append('userKey', user.user_hash_key)\r\n        formData.append('documentKey', user.doc_hash_key)\r\n        var response = await fetch('http://127.0.0.1:5000/uploadQuestionBank', {\r\n            method: 'post',\r\n            body: formData\r\n        });   \r\n        console.log('success')\r\n        if(response.statusText ==='OK'){\r\n            setSnackbarObject({\r\n                snackbarOpen: true,\r\n                snackbarText: 'Cloud updated Successfully'\r\n            })\r\n        } else {\r\n            setSnackbarObject({\r\n                snackbarOpen: true,\r\n                snackbarText: 'Cloud updation failed'\r\n            }) \r\n        }\r\n        setLoaderActive(false)\r\n    }\r\n    const createNewQuestion = async (tempData, index) => {\r\n        const formData = new FormData();\r\n        formData.append('questionData', JSON.stringify(tempData));\r\n        formData.append('userKey', user.user_hash_key)\r\n        formData.append('index', index)\r\n        formData.append('documentKey', user.doc_hash_key)\r\n        var response = await fetch('http://127.0.0.1:5000/createNewQuestion', {\r\n            method: 'post',\r\n            body: formData\r\n        });\r\n        setQuestionIndex(index)\r\n        // updateUserData(index)\r\n    }\r\n    const addNewQuestion = () => {\r\n        saveQuestionData();\r\n        let blankQuestionData = {\r\n            options: [],\r\n            isPassageType: false,\r\n        };\r\n        setQuestionData(blankQuestionData);\r\n        createNewQuestion(blankQuestionData, user.total_questions);\r\n        setUser({ ...user, 'total_questions': user.total_questions + 1, 'last_index': questionIndex + 1 })\r\n    }\r\n    return (<>\r\n        <div className={classes.root}>\r\n            <div className={classes.questionNavHelperGrid}>\r\n                <QuestionContentCreator questionIndex={questionIndex} leftCollapsed={leftCollapsed} setLeftCollapsed={setLeftCollapsed}\r\n                    rightCollapsed={rightCollapsed} setRightCollapsed={setRightCollapsed} questionData={questionData}\r\n                    setQuestionData={setQuestionData} />\r\n                <div className={classes.questionNavGrid}>\r\n                    {leftCollapsed ? '' : <Paper className={classes.sideBarStyle}>\r\n                        ashdgsj\r\n                    </Paper>}\r\n                    <Paper elevation={3} className={[classes.navigationStyle,\r\n                    leftCollapsed && rightCollapsed ? classes.navigationWidthLarge : leftCollapsed ? classes.navigationWidthLeftCollapsed : rightCollapsed ? classes.navigationWidthRightCollapsed : ''\r\n                    ].join(' ')}>\r\n                        <QuestionCreatorFooter uploadQuestionBank={uploadQuestionBank} questionIndex={questionIndex} totalQuestions={user.total_questions} addNewQuestion={addNewQuestion} saveQuestionData={saveQuestionData} previousQuestionHandler={previousQuestionHandler}\r\n                            nextQuestionHandler={nextQuestionHandler} />\r\n                    </Paper>\r\n                    <Paper className={[classes.rightSideBar, rightCollapsed ? classes.hideDiv : ''].join(' ')}>\r\n                        <QuestionCreatorRightsideBar questionIndex={questionIndex} onMapClick={onMapClick} totalQuestions={user.total_questions} />\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n            {/* <SimpleSnackbar /> */}\r\n        </div>\r\n    </>)\r\n}\r\n\r\n\r\nexport default QuestionsCreatorLanding;","import React from 'react';\r\nimport QuestionsLanding from '../../questions-landing/questions-landing';\r\nimport QuestionsCreatorLanding from '../question-creator-landing/question-creator-landing';\r\n\r\nconst QuestionEditor = ()=>{\r\n    return <QuestionsCreatorLanding/>;\r\n}\r\n\r\nexport default QuestionEditor;","import React from 'react';\r\nimport { Route } from \"react-router-dom\";\r\nimport KeyHome from '../components/key-home/key-home';\r\nimport QuestionCreator from '../components/question-creator/question-creator';\r\nimport QuestionEditor from '../components/question-creator/question-editor/question-editor';\r\nimport QuestionsLanding from '../components/questions-landing/questions-landing';\r\n\r\n\r\nconst Routes =()=> (\r\n    <>\r\n        <Route exact path=\"/\" component={KeyHome}></Route>\r\n        <Route exact path=\"/questions\" component={QuestionsLanding}></Route>\r\n        <Route exact path=\"/addQuestions\" component={QuestionCreator}></Route>\r\n        <Route exact path=\"/QuestionEditor\" component={QuestionEditor}></Route>\r\n    </>\r\n)\r\n\r\nexport default Routes;","\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nconst mainTheme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#182445'\r\n        },\r\n        secondary: {\r\n            main: '#00517C'\r\n        },\r\n        textGrey:{\r\n            main: '#989A9C'\r\n        },\r\n        textBlack:{\r\n            main: '#2F2F2F'\r\n        },\r\n        textWhite:{\r\n            main: '#EBEEF1'\r\n        },\r\n        success:{\r\n            main: '#398715'\r\n        },\r\n        warning:{\r\n            main: '#F4A700'\r\n        },\r\n        info:{\r\n            main: '#0276D6'\r\n        },\r\n        active:{\r\n            main: '#58B72B'\r\n        },\r\n        disabled:{\r\n            main:'#CDCECF'\r\n        },\r\n        danger:{\r\n            main:'#F1543F'\r\n        },\r\n        savedGreen:{\r\n            main: '#87E55A'\r\n        },\r\n        textPureWhite:{\r\n            main: '#FFFFFF'\r\n        }\r\n    },\r\n    mainAppTheme: {\r\n        background: '#182445'\r\n    },\r\n    svgFillMainBg:{\r\n        fill: '#182445'\r\n    }\r\n});\r\n\r\nexport { mainTheme };","import { ThemeProvider } from '@material-ui/core';\nimport { useState } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport useSnackbar from './components/snack-bar/hooks/use-snack-bar';\nimport SimpleSnackbar from './components/snack-bar/snack-bar';\nimport useSplashScreen from './components/splash-screen/hooks/use-splash-screen';\nimport SplashScreen from './components/splash-screen/splash-screen';\nimport Routes from './routes/routes';\nimport { mainTheme } from './utils/app-theme/app-theme';\nimport useUserContext from './utils/user-context/user-context';\nfunction App() {\n  const [user, setUser] = useState({});\n  const userObject = { user, setUser };\n  const [snackbarObject, setSnackbarObject] = useState({});\n  const snackbarValue = { snackbarObject, setSnackbarObject };\n  const [loaderActive, setLoaderActive] = useState(false);\n  const loaderValue = { loaderActive, setLoaderActive };\n  return (\n    <div className=\"App\">\n      <useUserContext.Provider value={userObject}>\n        <ThemeProvider theme={mainTheme}>\n          <useSnackbar.Provider value={snackbarValue}>\n            <useSplashScreen.Provider value={loaderValue}>\n              <BrowserRouter>\n                <Routes />\n                <SplashScreen />\n                <SimpleSnackbar/>\n              </BrowserRouter>\n            </useSplashScreen.Provider>\n          </useSnackbar.Provider>\n        </ThemeProvider>\n      </useUserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}