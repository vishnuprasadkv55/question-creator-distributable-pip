{"version":3,"sources":["components/snack-bar/hooks/use-snack-bar.js","components/snack-bar/snack-bar.js","components/splash-screen/hooks/use-splash-screen.js","components/splash-screen/splash-screen.js","utils/user-context/user-context.js","components/key-home/key-home.js","components/question-creator/auth-forms/sign-user-forms/sign-in-form.js","components/question-creator/auth-forms/sign-user-forms/sign-up-form.js","components/question-creator/auth-forms/sign-user-forms/sign-user-landing.js","components/question-creator/auth-forms/continue-bank.js","components/question-creator/auth-forms/create-new-bank.js","components/question-creator/question-creator.js","utils/question-context/question-context.js","assets/images/logo.PNG","components/questions-landing/side-bar/right-side-bar.js","components/questions-landing/footer-bar/footer-bar.js","components/questions-landing/question-content/question-content.js","components/questions-landing/side-bar/question-map-view.js","components/questions-landing/side-bar/left-side-bar.js","utils/auth-functions/auth-functions.js","components/questions-landing/questions-landing.js","components/question-creator/question-content-creator/inner-question/inner-question.js","components/question-creator/question-content-creator/question-content-creator.js","components/question-creator/question-creator-footer/question-creator-footer.js","components/question-creator/question-creator-rightside-bar/question-creator-rightside-bar.js","components/question-creator/question-creator-landing/question-creator-landing.js","components/question-creator/question-editor/question-editor.js","routes/routes.js","utils/app-theme/app-theme.js","App.js","reportWebVitals.js","index.js"],"names":["useSnackbar","createContext","snackbarObject","setSnackbarOpen","useStyles","makeStyles","snackbarStyle","position","SimpleSnackbar","useContext","classes","setSnackbarObject","useEffect","snackbarOpen","snackbarText","setSnackbarText","useState","handleClose","event","reason","className","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","message","action","Fragment","Button","color","size","onClick","IconButton","aria-label","fontSize","useSplashScreen","loaderActive","setLoaderActive","theme","modal","display","alignItems","justifyContent","background","paper","outline","SplashScreen","appTheme","useTheme","React","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","CircularProgress","useUserContext","user","setUser","root","height","inputKey","width","KeyHome","history","useHistory","key","setKey","keyError","setKeyError","console","log","Cookies","get","validateAndProceed","keyFromCookie","a","formData","FormData","append","fetch","method","body","response","text","results","resultObj","JSON","parse","set","push","TextField","error","id","onChange","e","target","value","label","variant","flexDirection","formStyle","padding","SignInForm","password","setPassword","email","setEmail","authUserHandler","json","responseData","status","type","SignUpForm","name","setName","phone","setPhone","signUpUser","SignUserLanding","tabState","setTabState","tabs_array","Paper","elevation","square","Tabs","indicatorColor","textColor","newValue","Tab","selectStyle","ContinueBank","username","getAllDocuments","userKey","setUserKey","documentKey","setDocumentKey","documentList","setDocumentList","document","validateUserAndQuestions","user_hash_key","doc_hash_key","disabled","FormControl","formControl","InputLabel","Select","labelId","map","item","index","MenuItem","CreateNewForm","documentName","setDocumentName","QuestionCreator","useQuestionContext","questionContext","questionCode","setQustionContext","metaFieldStyle","progressArea","logoImage","RightSideBar","questionData","setQuestionData","setAttributes","marks","time","topic","subTopic","complexity","attributes","src","Logo","tempQuestionData","InputProps","inputProps","min","max","backwardStyle","button","backgroundColor","forwardStyle","saveButtonStyle","alignSelf","paddingBottom","questionStatus","saveButton","uncheckedIconButtonStyle","margin","checkedIconButtonStyle","savedForLaterIconButtonStyle","unrelatedIconButtonStyle","reportedIconButtonStyle","unchecked","checked","savedForLater","unrelated","undone","reported","FooterBar","setQuestionStatus","previousQuestionHandler","saveQuestionBankFunction","nextQuestionHandler","saveInstantQuestionFunction","statusHandlerBeforeSave","startIcon","Tooltip","title","endIcon","questionDataStyle","gridArea","marginLeft","marginRight","overflowY","questionAnswerStyle","minHeight","questionStyle","answerStyle","explanationStyle","paddingTop","metaDataArea","optionsStyle","instructionStyle","instructionsHead","marginTop","addOptionButton","optionIteratorStyle","optionActionStyle","correctCheckbox","QuestionContent","setOptions","options","updateParentQuestionData","tempOptions","stringify","dangerouslySetInnerHTML","__html","question","answer","explanation","optionsEditorStyle","data","Checkbox","isCorrect","checkboxHandler","splice","deleteOptionHandler","option","optionInputHandler","tags","tagsInputHandler","length","concat","remarks","rows","multiline","instructions","minWidth","cursor","borderStyle","border","gridContainer","QuestionMapView","totalQuestions","questionCategories","pages","onMapClick","setActiveIndex","indexController","activeIndex","questionDataArray","arrayForIteration","Array","from","keys","iteratorWeight","Math","ceil","Grid","container","justify","spacing","includes","onPaperClickHandler","Number","innerText","approvedQuestions","savedForLaterQuestions","reportedQuestions","unrelatedQuestions","join","paginationButtons","filterDropdown","LeftSideBar","questionIndex","filter","setIndexController","floor","setFilter","filterValue","getMapView","hashKey","flexWrap","listStyle","questionNavHelperGrid","gridTemplateColumns","overflowX","questionNavGrid","gridTemplateRows","sideBarStyle","gridRow","rightSideBar","gridColumn","navigationStyle","QuestionsLanding","setUserDataFromCookie","last_index","getQuestionByIndex","setQuestionIndex","setQuestionCategories","approved_questions","saved_for_later_questions","userObj","current_object","question_status","saved_for_later","total_questions","paddingLeft","InnerQuestion","optionIndex","questionOptions","setQuestionFocus","setOptionFocusedKey","setContents","mode","katex","buttonList","checkBoxActionStyle","questionRichTextBoxWrapper","questionRichTextBox","explanationCheckboxStyle","hasExplanation","explanationCheckboxHandler","style","editorStyle","explanationInputHandler","transition","marginLeftStyle","marginRightStyle","rootContent","collapsibleButton","fontWeight","optionActionStyleQuestion","QuestionContentCreator","leftCollapsed","rightCollapsed","setRightCollapsed","setLeftCollapsed","setQuestionContext","useRef","addOptionHandler","updateParentQuestionDataOptions","plugins","complex","prevData","questionCodeInput","autoComplete","isPassageType","questionRichTextBoxOuter","prevState","dataOption","questionInfo","actionButton","QuestionCreatorFooter","uploadQuestionBank","addNewQuestion","saveQuestionData","QuestionCreatorRightsideBar","zIndex","navigationWidthSmall","navigationWidthLarge","navigationWidthLeftCollapsed","navigationWidthRightCollapsed","hideDiv","QuestionsCreatorLanding","keyBinder","window","addEventListener","saveKeyStrokeHandler","removeEventListener","charCode","String","fromCharCode","which","toLowerCase","ctrlKey","preventDefault","questionDataObject","statusText","createNewQuestion","tempData","blankQuestionData","QuestionEditor","questionContextObject","Provider","Routes","exact","path","component","mainTheme","createMuiTheme","palette","primary","main","secondary","textGrey","textBlack","textWhite","success","warning","info","active","danger","savedGreen","textPureWhite","mainAppTheme","svgFillMainBg","fill","App","userObject","snackbarValue","loaderValue","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4cadf675.chunk.js","sourcesContent":["import React, { createContext } from 'react';\r\n\r\nconst useSnackbar = createContext({\r\n    snackbarObject: {},\r\n    setSnackbarOpen: ()=>{ }\r\n})\r\n\r\nexport default useSnackbar;","import React, { useContext, useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport useSnackbar from './hooks/use-snack-bar';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    snackbarStyle: {\r\n        position: 'absolute'\r\n    }\r\n})\r\nexport default function SimpleSnackbar() {\r\n    const { snackbarObject, setSnackbarObject } = useContext(useSnackbar);\r\n    const classes = useStyles();\r\n    useEffect(() => {\r\n        if (snackbarObject.snackbarOpen && snackbarObject.snackbarText) {\r\n            setSnackbarOpen(snackbarObject.snackbarOpen)\r\n            setSnackbarText(snackbarObject.snackbarText)\r\n        }\r\n    }, [snackbarObject])\r\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n    const [snackbarText, setSnackbarText] = useState('');\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setSnackbarOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.snackbarStyle}>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={snackbarOpen || false}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n                message={snackbarText || ''}\r\n                action={\r\n                    <React.Fragment>\r\n                        <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\r\n                        </Button>\r\n                        <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n                            <CloseIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </React.Fragment>\r\n                }\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { createContext } from 'react';\r\n\r\nconst useSplashScreen = createContext({\r\n    loaderActive: false,\r\n    setLoaderActive: ()=>{}\r\n})\r\n\r\nexport default useSplashScreen;","import React, {useContext} from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport useSplashScreen from './hooks/use-splash-screen'\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        background: 'rgb(0 0 0 / 0%)'\r\n    },\r\n    paper: {\r\n        outline: 'none',\r\n        color: '#87a7ff'\r\n    },\r\n}));\r\n\r\nconst SplashScreen = () => {\r\n    const appTheme = useTheme;\r\n    const classes = useStyles(appTheme);\r\n    const [open, setOpen] = React.useState(true);\r\n    const {loaderActive, setLoaderActive} = useContext(useSplashScreen)\r\n    return (\r\n        <>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={loaderActive}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                    <CircularProgress className={classes.paper} />\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SplashScreen;","import React from 'react';\r\n\r\nconst useUserContext = React.createContext({\r\n    user: {},\r\n    setUser: () => { }\r\n})\r\nexport default useUserContext;","import { Button, makeStyles } from '@material-ui/core';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useSnackbar from '../snack-bar/hooks/use-snack-bar';\r\nimport SimpleSnackbar from '../snack-bar/snack-bar';\r\nimport useUserContext from '../../utils/user-context/user-context';\r\nimport useSplashScreen from '../splash-screen/hooks/use-splash-screen';\r\nimport Cookies from 'js-cookie'\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: '100%'\r\n    },\r\n    inputKey: {\r\n        display: 'flex',\r\n        width: '25em',\r\n        justifyContent: 'space-evenly'\r\n    }\r\n});\r\nconst KeyHome = () => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [key, setKey] = useState('');\r\n    const [keyError, setKeyError] = useState(false);\r\n    const {snackbarObject, setSnackbarObject} = useContext(useSnackbar);\r\n    const {user, setUser} = useContext(useUserContext);\r\n    const {loaderActive, setLoaderActive} = useContext(useSplashScreen)\r\n    useEffect(()=>{\r\n        console.log(Cookies.get('user_key'));\r\n        if (Cookies.get('user_key')) {\r\n            setKey(Cookies.get('user_key'));\r\n            validateAndProceed({\r\n                key: Cookies.get('user_key')\r\n            })\r\n        }\r\n    },[])\r\n    const validateAndProceed = async(keyFromCookie) => {\r\n        setLoaderActive(true)\r\n        const formData = new FormData();\r\n        if(keyFromCookie.key) {\r\n            formData.append('key', keyFromCookie.key);\r\n        } else {\r\n            formData.append('key', key);\r\n        }\r\n        var response = await fetch('http://127.0.0.1:5000/auth',{\r\n            method: 'post',\r\n            body: formData\r\n        });\r\n        var results = await response.text()\r\n        var resultObj = JSON.parse(results);\r\n        if (resultObj.response) {\r\n            resultObj.key = keyFromCookie.key || key;\r\n            setUser(resultObj);\r\n            Cookies.set('user_key', resultObj.key);\r\n            setLoaderActive(false)\r\n            history.push('/questions');\r\n        } else {\r\n            setKeyError(true);\r\n            setLoaderActive(false)\r\n            setSnackbarObject({\r\n                snackbarOpen: true,\r\n                snackbarText: 'Please enter a valid key'\r\n            })\r\n        }\r\n    }\r\n    const keyChangeHandler = (e) => {\r\n        setKeyError(false);\r\n        setKey(e.target.value);\r\n    }\r\n    return (<div><div className={classes.root}>\r\n        <div className={classes.inputKey}>\r\n            <TextField error={keyError} id=\"outlined-basic\" onChange={keyChangeHandler} label=\"Enter Key\" variant=\"outlined\" />\r\n            <Button onClick={validateAndProceed} variant=\"contained\" color=\"primary\">\r\n                Proceed\r\n      </Button>\r\n        </div>\r\n    </div>\r\n    {/* <SimpleSnackbar/> */}\r\n    </div>)\r\n}\r\n\r\nexport default KeyHome;","import { makeStyles } from '@material-ui/core';\r\nimport React, { useContext, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Cookies from 'js-cookie'\r\nimport { useHistory } from 'react-router-dom';\r\nimport useSnackbar from '../../../snack-bar/hooks/use-snack-bar';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '21em',\r\n    },\r\n    formStyle: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        padding: '2em',\r\n        height: '100%'\r\n    }\r\n})\r\nconst SignInForm = () => {\r\n    const classes = useStyles()\r\n    const [password, setPassword] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const history = useHistory();\r\n    const { snackbarObject, setSnackbarObject } = useContext(useSnackbar)\r\n    const passwordHandler = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n    const emailHandler = (e) => {\r\n        setEmail(e.target.value)\r\n    }\r\n    const authUserHandler = async () => {\r\n        if (!email || !password) {\r\n            return false\r\n        }\r\n        const formData = new FormData()\r\n        formData.append('email', email)\r\n        formData.append('password', password)\r\n        var response = await fetch('http://127.0.0.1:5000/authUserInCloud', {\r\n            method: 'post',\r\n            body: formData\r\n        })\r\n        const responseData = await response.json()\r\n        if (responseData.status == 'approved') {\r\n            setSnackbarObject({\r\n                snackbarOpen: true,\r\n                snackbarText: responseData.status\r\n            })\r\n            Cookies.set('user_key', responseData.email);\r\n            history.push('/addQuestions')\r\n        } else {\r\n            setSnackbarObject({\r\n                snackbarOpen: true,\r\n                snackbarText: responseData.status\r\n            })\r\n        }\r\n        console.log(response);\r\n    }\r\n    return <div className={classes.root}>\r\n        <div className={classes.formStyle}>\r\n            <TextField id=\"outlined-basic\" onChange={emailHandler} label=\"Email\" variant=\"outlined\" />\r\n            <TextField id=\"outlined-basic\" onChange={passwordHandler} label=\"Password\" type=\"password\" variant=\"outlined\" />\r\n            <Button onClick={authUserHandler} variant=\"contained\" color=\"primary\">\r\n                Sign In\r\n</Button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default SignInForm","import { makeStyles } from '@material-ui/core';\r\nimport React, { useContext, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport useSnackbar from '../../../snack-bar/hooks/use-snack-bar';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '25em',\r\n    },\r\n    formStyle: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        padding: '2em',\r\n        height: '100%'\r\n    }\r\n})\r\nconst SignUpForm = () => {\r\n    const classes = useStyles()\r\n    const [name, setName] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const { snackbarObject, setSnackbarObject } = useContext(useSnackbar)\r\n    const nameHandler = (e) => {\r\n        setName(e.target.value)\r\n    }\r\n    const phoneHandler = (e) => {\r\n        setPhone(e.target.value)\r\n    }\r\n    const passwordHandler = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n    const emailHandler = (e) => {\r\n        setEmail(e.target.value)\r\n    }\r\n    const signUpUser = async() => {\r\n        if (!name || !password || !email || !phone) {\r\n            return false\r\n        }\r\n        const formData = new FormData()\r\n        formData.append('username', name)\r\n        formData.append('email', email)\r\n        formData.append('phone', phone)\r\n        formData.append('password', password)\r\n        var response = await fetch('https://question-creator-signup-update.herokuapp.com/signUserUp',{\r\n            method: 'post',\r\n            body: formData\r\n        })\r\n        var results = await response.json();\r\n        setSnackbarObject({\r\n            snackbarOpen: true,\r\n            snackbarText: results.status\r\n        })\r\n        console.log(results);\r\n    }\r\n    return <div className={classes.root}>\r\n        <div className={classes.formStyle}>\r\n            <TextField id=\"outlined-basic\" label=\"Name\" onChange={nameHandler} variant=\"outlined\" />\r\n            <TextField id=\"outlined-basic\" label=\"Phone number\" onChange={phoneHandler} variant=\"outlined\" />\r\n            <TextField id=\"outlined-basic\" label=\"Email\" onChange={emailHandler} variant=\"outlined\" />\r\n            <TextField id=\"outlined-basic\" type=\"password\" label=\"Password\" onChange={passwordHandler} variant=\"outlined\" />\r\n            <Button onClick={signUpUser} variant=\"contained\" color=\"primary\">\r\n                Sign Up\r\n</Button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default SignUpForm","import React, { useContext, useEffect, useState } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport SignInForm from './sign-in-form';\r\nimport SignUpForm from './sign-up-form';\r\nconst useStyles = makeStyles({\r\n    root:{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: '100%'\r\n    },\r\n    paper:{\r\n        padding: '1em',\r\n    }\r\n})\r\nconst SignUserLanding = () => {\r\n    const classes = useStyles();\r\n    const [tabState, setTabState] = useState(0);\r\n    const handleChange = (event, newValue) => {\r\n        setTabState(newValue);\r\n    };\r\n    const tabs_array = [<SignInForm/>, <SignUpForm/>]\r\n    return <div className={classes.root}>    \r\n        <Paper className={classes.paper} elevation={3} square>\r\n        <Tabs\r\n            value={tabState}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            onChange={handleChange}\r\n            aria-label=\"disabled tabs example\"\r\n        >\r\n            <Tab label=\"Sign In\"/>\r\n            <Tab label=\"Sign Up\"/>\r\n        </Tabs>\r\n        {tabs_array[tabState]}\r\n    </Paper>\r\n    \r\n {/* <SimpleSnackbar/> */}\r\n    </div>\r\n}\r\n\r\nexport default SignUserLanding;","import { makeStyles } from '@material-ui/core';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Cookies from 'js-cookie'\r\nimport useUserContext from '../../../utils/user-context/user-context';\r\nimport useSnackbar from '../../snack-bar/hooks/use-snack-bar';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '15em',\r\n    },\r\n    formStyle: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        padding: '2em',\r\n        height: '100%'\r\n    },\r\n    selectStyle: {\r\n        width: '13em'\r\n    }\r\n})\r\n\r\nconst ContinueBank = ({username}) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        getAllDocuments()\r\n    }, [])\r\n    const { snackbarObject, setSnackbarObject } = useContext(useSnackbar)\r\n    const [userKey, setUserKey] = useState(Cookies.get('user_key'));\r\n    const [documentKey, setDocumentKey] = useState('');\r\n    const { user, setUser } = useContext(useUserContext);\r\n    const [documentList, setDocumentList] = useState([])\r\n    useEffect(()=>{\r\n        setUserKey(Cookies.get('user_key'))\r\n    },[])\r\n    const getAllDocuments = async () => {\r\n        const formData = new FormData();\r\n        formData.append('userKey', userKey);\r\n        var response = await fetch('http://127.0.0.1:5000/getAllQuestionBanks', {\r\n            method: 'post',\r\n            body: formData\r\n        });\r\n        var results = await response.json();\r\n        setDocumentList(results.document);\r\n    }\r\n    const validateUserAndQuestions = async () => {\r\n        if (documentKey === '') {\r\n            setSnackbarObject({\r\n                snackbarOpen: true,\r\n                snackbarText: 'Check Fields'\r\n            })\r\n        } else {\r\n            const formData = new FormData();\r\n            formData.append('userKey', userKey);\r\n            formData.append('documentKey', documentKey);\r\n            var response = await fetch('http://127.0.0.1:5000/validateUserAndDocument', {\r\n                method: 'post',\r\n                body: formData\r\n            });\r\n            var results = await response.json();\r\n            if (results.status === 'ok') {\r\n                Cookies.set('user_key', results.user_hash_key);\r\n                Cookies.set('document_key', results.doc_hash_key);\r\n                setUser(results);\r\n                setSnackbarObject({\r\n                    snackbarOpen: false\r\n                })\r\n                history.push('/QuestionEditor')\r\n            } else {\r\n                setSnackbarObject({\r\n                    snackbarOpen: true,\r\n                    snackbarText: 'Credentials mismatch'\r\n                })\r\n            }\r\n\r\n        }\r\n    }\r\n    const userKeyHandler = (e) => {\r\n        setUserKey(e.target.value)\r\n    }\r\n    const handleKeyChange = (e) => {\r\n        setDocumentKey(e.target.value)\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.formStyle}>\r\n                <TextField disabled value={userKey} onChange={userKeyHandler} id=\"outlined-basic\" label=\"User Id\" variant=\"outlined\" />\r\n                <FormControl className={classes.formControl}>\r\n                    <InputLabel id=\"demo-simple-select-label\">Question Bank</InputLabel>\r\n                    <Select\r\n                        className={classes.selectStyle}\r\n\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={documentKey}\r\n                        onChange={handleKeyChange}\r\n                    >{documentList.map((item, index) => {\r\n                        return (\r\n                            <MenuItem value={item.id}>{item.name}</MenuItem>\r\n                        )\r\n                    })}\r\n                    </Select>\r\n                </FormControl>\r\n                <Button onClick={validateUserAndQuestions} variant=\"contained\" color=\"primary\">\r\n                    Continue\r\n        </Button>\r\n                {/* {snackbarVisible ? <SimpleSnackbar/>: ''} */}\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default ContinueBank;","import { makeStyles } from '@material-ui/core';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useSnackbar from '../../snack-bar/hooks/use-snack-bar';\r\nimport SimpleSnackbar from '../../snack-bar/snack-bar';\r\nimport Cookies from 'js-cookie'\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '21em',\r\n    },\r\n    formStyle: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        padding: '2em',\r\n        height: '100%'\r\n    }\r\n})\r\nconst CreateNewForm = ({username}) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [snackbarVisible, setSnackBarVisible] = useState(true);\r\n    const [userKey, setUserKey] = useState(Cookies.get('user_key'));\r\n    const [documentKey, setDocumentKey] = useState('');\r\n    const [documentName, setDocumentName] = useState('')\r\n    const { snackbarObject, setSnackbarObject } = useContext(useSnackbar)\r\n    useEffect(()=>{\r\n        setUserKey(Cookies.get('user_key'))\r\n    },[])\r\n    const validateUserAndQuestions = async()=>{\r\n        if(userKey === '' || documentName === '' ) {\r\n            setSnackbarObject({\r\n                snackbarOpen: true,\r\n                snackbarText: 'Please Check The Fields'\r\n            })\r\n            return\r\n        }\r\n        const formData = new FormData();\r\n        formData.append('documentKey', documentKey)\r\n        formData.append('userKey', userKey)\r\n        formData.append('documentName', documentName)\r\n        var response = await fetch('http://127.0.0.1:5000/addNewDocument', {\r\n            method: 'post',\r\n            body: formData\r\n        });\r\n        setSnackbarObject({\r\n            snackbarOpen: true,\r\n            snackbarText: 'Question Bank created Successfully'\r\n        })\r\n        // history.push('/QuestionEditor')\r\n    }\r\n    const userKeyHandler =(e)=>{\r\n        setUserKey(e.target.value);\r\n    }\r\n    const documentNameHandler =(e)=>{\r\n        setDocumentName(e.target.value);\r\n    } \r\n    // const documentKeyHandler =(e)=>{\r\n    //     setDocumentKey(e.target.value);\r\n    // }\r\n    return <div className={classes.root}>\r\n        <div className={classes.formStyle}>\r\n        <TextField disabled value={userKey || ''} onChange={userKeyHandler} id=\"outlined-basic\" label=\"User Id\" variant=\"outlined\" />\r\n            <TextField onChange={documentNameHandler} id=\"outlined-basic\" label=\"Enter a name\" variant=\"outlined\" />\r\n            {/* <TextField onChange={documentKeyHandler} id=\"outlined-basic\" label=\"Key\" variant=\"outlined\" /> */}\r\n            <Button onClick={validateUserAndQuestions} variant=\"contained\" color=\"primary\">\r\n                Create\r\n</Button>\r\n{/* {snackbarVisible ? <SimpleSnackbar/>: ''} */}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default CreateNewForm;","import React, { useContext, useEffect, useState } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport ContinueBank from './auth-forms/continue-bank';\r\nimport CreateNewForm from './auth-forms/create-new-bank';\r\nimport SimpleSnackbar from '../snack-bar/snack-bar';\r\nimport useSnackbar from '../snack-bar/hooks/use-snack-bar';\r\nimport Cookies from 'js-cookie'\r\nimport { useHistory } from 'react-router-dom';\r\nconst useStyles = makeStyles({\r\n    root:{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: '100%'\r\n    },\r\n    paper:{\r\n        padding: '1em',\r\n    }\r\n})\r\nconst QuestionCreator = () => {\r\n    const classes = useStyles();\r\n    const [tabState, setTabState] = useState(0);\r\n    const [userKey, setUserKey] = useState('')\r\n    const handleChange = (event, newValue) => {\r\n        setTabState(newValue);\r\n    };\r\n    const history = useHistory();\r\n    useEffect(()=>{\r\n        if (!Cookies.get('user_key')) {\r\n            history.push('/SignUserLanding')\r\n        } else{\r\n            setUserKey(Cookies.get('user_key'))\r\n        }\r\n    },[])\r\n    const tabs_array = [<ContinueBank username={userKey}/>, <CreateNewForm username={userKey}/>]\r\n    return <div className={classes.root}>    \r\n        <Paper className={classes.paper} elevation={3} square>\r\n        <Tabs\r\n            value={tabState}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            onChange={handleChange}\r\n            aria-label=\"disabled tabs example\"\r\n        >\r\n            <Tab label=\"Continue Editing\"/>\r\n            <Tab label=\"Create New\"/>\r\n        </Tabs>\r\n        {tabs_array[tabState]}\r\n    </Paper>\r\n    \r\n {/* <SimpleSnackbar/> */}\r\n    </div>\r\n}\r\n\r\nexport default QuestionCreator;","import React, { createContext } from 'react';\r\n\r\nconst useQuestionContext = createContext({\r\n    questionContext: {\r\n        questionCode: ''\r\n    },\r\n    setQustionContext: ()=> { }\r\n})\r\nexport default useQuestionContext;","export default __webpack_public_path__ + \"static/media/logo.c7ac9b6d.PNG\";","import React, { useEffect, useState } from 'react';\r\nimport { Button, makeStyles, Paper, TextField, useTheme } from '@material-ui/core';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Logo from './../../../assets/images/logo.PNG'\r\nconst useStyles = makeStyles({\r\n\r\n  metaFieldStyle: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: '15em',\r\n    justifyContent: 'space-around',\r\n    padding: '0em 1em 0em 1em',\r\n  },\r\n  progressArea: {\r\n\r\n  },\r\n  logoImage:{\r\n    height: '95px',\r\n    width: '228px'\r\n  }\r\n})\r\nconst RightSideBar = ({ questionData, setQuestionData }) => {\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    setAttributes({\r\n      marks: questionData.marks || '',\r\n      time: questionData.time || '',\r\n      topic: questionData.topic || '',\r\n      subTopic: questionData.subTopic || '',\r\n      complexity: questionData.complexity || '',\r\n      type: questionData.type || ''\r\n    })\r\n  }, [questionData])\r\n  const [attributes, setAttributes] = useState({\r\n    marks: '',\r\n    time: '',\r\n    topic: 0,\r\n    subTopic: 0,\r\n    complexity: '',\r\n    type: 0\r\n  })\r\n  const markHandler = (e) => {\r\n    let tempQuestionData = questionData;\r\n    tempQuestionData.marks = e.target.value;\r\n    setAttributes({ ...attributes, 'marks': e.target.value })\r\n    setQuestionData(tempQuestionData);\r\n  }\r\n  const timeHandler = (e) => {\r\n    if (e.target.value < 601) {\r\n      let tempQuestionData = questionData;\r\n      tempQuestionData.time = e.target.value;\r\n      setAttributes({ ...attributes, 'time': e.target.value })\r\n      setQuestionData(tempQuestionData);\r\n    }\r\n  }\r\n  const topicHandler = (e) => {\r\n    let tempQuestionData = questionData;\r\n    tempQuestionData.topic = e.target.value;\r\n    setAttributes({ ...attributes, 'topic': e.target.value })\r\n    setQuestionData(tempQuestionData);\r\n  }\r\n  const subTopicHandler = (e) => {\r\n    let tempQuestionData = questionData;\r\n    tempQuestionData.subTopic = e.target.value;\r\n    setAttributes({ ...attributes, 'subTopic': e.target.value })\r\n    setQuestionData(tempQuestionData);\r\n  }\r\n  const complexityHandler = (e) => {\r\n    if (e.target.value < 11) {\r\n      let tempQuestionData = questionData;\r\n      tempQuestionData.complexity = e.target.value;\r\n      setAttributes({ ...attributes, 'complexity': e.target.value })\r\n      setQuestionData(tempQuestionData);\r\n    }\r\n  }\r\n  const typeHandler = (e) => {\r\n    let tempQuestionData = questionData;\r\n    tempQuestionData.type = e.target.value;\r\n    setAttributes({ ...attributes, 'type': e.target.value })\r\n    setQuestionData(tempQuestionData);\r\n  }\r\n  return (<>\r\n   <img className={classes.logoImage} src={Logo}/>\r\n    <div className={classes.metaFieldStyle}>\r\n      <TextField\r\n        value={attributes.marks} type=\"number\" onChange={markHandler} id=\"standard-basic\" label=\"Mark\" />\r\n      <TextField\r\n        value={attributes.time} type=\"number\" InputProps={{\r\n          inputProps:{\r\n            min: 1, max: 600\r\n          }\r\n        }} onChange={timeHandler} id=\"standard-basic\" label=\"Time\" />\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-label\">Topic</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          onChange={topicHandler}\r\n          value={attributes.topic}\r\n        >\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-label\">Sub Topic</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          onChange={subTopicHandler}\r\n          value={attributes.subTopic}\r\n        >\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <TextField\r\n        value={attributes.complexity} type=\"number\" InputProps={{\r\n          inputProps: {\r\n            max: 10, min: 1\r\n          }\r\n        }} onChange={complexityHandler} id=\"standard-basic\" label=\"Complexity\" />\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\r\n        <Select\r\n          value={attributes.type}\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          onChange={typeHandler}\r\n        >\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n    <div className={classes.progressArea}>\r\n\r\n        </div>\r\n  </>)\r\n}\r\n\r\nexport default RightSideBar;","import { Button, makeStyles, Paper, TextField, useTheme } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport WatchLaterIcon from '@material-ui/icons/WatchLater';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport ReportIcon from '@material-ui/icons/Report';\r\nconst useStyles = makeStyles(theme => ({\r\n    backwardStyle: {\r\n        display: 'flex'\r\n    },\r\n    button: {\r\n        background: 'darkslategrey',\r\n        color: 'aliceblue',\r\n        \"&:hover\": {\r\n            backgroundColor: \"#3e8888\"\r\n          }\r\n    },\r\n\r\n    forwardStyle: {\r\n        display: 'flex',\r\n    },\r\n\r\n    saveButtonStyle: {\r\n        alignSelf: 'center',\r\n        paddingBottom: '1em',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        width: '19em',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n    formControl: {\r\n        width: '9em'\r\n    },\r\n    questionStatus: {\r\n    },\r\n    saveButton: {\r\n        height: 'fit-content'\r\n    },\r\n    uncheckedIconButtonStyle: {\r\n        margin: 1,\r\n        '&:hover':{\r\n            color: 'ghostwhite',\r\n        }\r\n    },\r\n    checkedIconButtonStyle: {\r\n        margin: 1,\r\n        '&:hover':{\r\n            color: 'limegreen',\r\n        }\r\n    },\r\n    savedForLaterIconButtonStyle: {\r\n        margin: 1,\r\n                '&:hover':{\r\n            color: 'deepskyblue',\r\n        }\r\n    },\r\n    unrelatedIconButtonStyle: {\r\n        margin: 1,\r\n                '&:hover':{\r\n            color: 'tomato',\r\n        }\r\n    },\r\n    reportedIconButtonStyle: {\r\n        margin: 1,\r\n                '&:hover':{\r\n            color: 'red',\r\n        }\r\n    },\r\n    unchecked: {\r\n        color: 'ghostwhite',\r\n    },\r\n    checked: {\r\n        color: 'limegreen'\r\n    },\r\n    savedForLater: {\r\n        color: 'deepskyblue'\r\n    },\r\n    unrelated: {\r\n        color: 'tomato'\r\n    },\r\n    undone:{\r\n        color: 'lightseagreen'\r\n    },\r\n    reported:{\r\n        color: 'red'\r\n    }\r\n}))\r\nconst FooterBar = ({ questionStatus, setQuestionStatus, saveQuestionBankFunction, previousQuestionHandler, nextQuestionHandler, saveInstantQuestionFunction }) => {\r\n    const appTheme = useTheme();\r\n    const classes = useStyles(appTheme);\r\n    const statusHandlerBeforeSave = (status) => {\r\n        setQuestionStatus(status);\r\n        saveInstantQuestionFunction(status)\r\n    }\r\n    return (\r\n        <>\r\n            <div className={classes.backwardStyle}>\r\n                <Button\r\n                    onClick={previousQuestionHandler}\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    startIcon={<ArrowBackIosIcon />}\r\n                >\r\n                    Back\r\n                            </Button>\r\n            </div>\r\n            <div className={classes.saveButtonStyle}>\r\n                <Tooltip title=\"To do\">\r\n                    <IconButton onClick={() => statusHandlerBeforeSave('undone')} aria-label=\"delete\" className={[classes.uncheckedIconButtonStyle, questionStatus === 'undone' ? classes.undone : '']}>\r\n                        <RadioButtonUncheckedIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Approve\">\r\n                <IconButton onClick={() => statusHandlerBeforeSave('approved')} aria-label=\"delete\" className={[classes.checkedIconButtonStyle, questionStatus === 'approved' ? classes.checked : '']}>\r\n                    <CheckCircleIcon />\r\n                </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Save for Later\">\r\n                <IconButton onClick={() => statusHandlerBeforeSave('flag_for_later')} aria-label=\"delete\" className={[classes.savedForLaterIconButtonStyle, questionStatus === 'flag_for_later' ? classes.savedForLater : '']}>\r\n                    <WatchLaterIcon />\r\n                </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Unrelated\">\r\n                <IconButton onClick={() => statusHandlerBeforeSave('unrelated')} aria-label=\"delete\" className={[classes.unrelatedIconButtonStyle, questionStatus === 'unrelated' ? classes.unrelated : '']}>\r\n                    <CancelIcon />\r\n                </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Report\">\r\n                <IconButton onClick={() => statusHandlerBeforeSave('reported')} aria-label=\"delete\" className={[classes.reportedIconButtonStyle, questionStatus === 'reported' ? classes.reported : '']}>\r\n                    <ReportIcon />\r\n                </IconButton>\r\n                </Tooltip>\r\n            </div>\r\n            <div className={classes.forwardStyle}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    onClick={nextQuestionHandler}\r\n                    endIcon={<ArrowForwardIosIcon />}\r\n                >\r\n                    Next\r\n                            </Button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FooterBar;","import { makeStyles, TextField, Button, Paper } from '@material-ui/core';\r\nimport React, { useEffect,useContext,useState } from 'react';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport './question-content.css';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SimpleSnackbar from '../../snack-bar/snack-bar';\r\nimport useSnackbar from '../../snack-bar/hooks/use-snack-bar';\r\nconst useStyles = makeStyles({\r\n\r\n    questionDataStyle: {\r\n        gridArea: '1/1',\r\n        marginLeft: '250px',\r\n        marginRight: '250px',\r\n        padding: '4em 5em 2em 5em',\r\n        height: 'calc(100% - 163px)',\r\n        overflowY: 'scroll'\r\n    },\r\n\r\n    questionAnswerStyle: {\r\n        minHeight: '8em',\r\n        padding: '1em',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n    },\r\n\r\n    questionStyle: {\r\n        alignSelf: 'center'\r\n    },\r\n\r\n    answerStyle: {\r\n        alignSelf: 'center',\r\n        display: 'flex'\r\n    },\r\n\r\n    explanationStyle: {\r\n        paddingTop: '2em'\r\n    },\r\n    metaDataArea: {\r\n        paddingTop: '2em'\r\n\r\n    },\r\n    optionsStyle: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignSelf: 'center',\r\n        padding: '3em'\r\n    },\r\n    instructionStyle: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignSelf: 'center',\r\n        padding: '3em'\r\n    },\r\n    instructionsHead: {\r\n\r\n    },\r\n    saveButtonStyle: {\r\n        alignSelf: 'flex-end',\r\n        paddingBottom: '1em',\r\n        paddingTop: '1em'\r\n    },\r\n    paper: {\r\n        marginTop: '2em'\r\n    },\r\n    addOptionButton: {\r\n\r\n    },\r\n    optionIteratorStyle: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        marginTop: '1em',\r\n        padding: '2em',\r\n    },\r\n    optionActionStyle: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    correctCheckbox: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    }\r\n});\r\n\r\nconst QuestionContent = ({ questionData,setQuestionData }) => {\r\n    const classes = useStyles();\r\n    useEffect(()=>{\r\n        setOptions(JSON.parse(questionData.options || '[]') || [])\r\n    },[questionData])\r\n    const [options, setOptions] = useState([]);\r\n    const {snackbarObject, setSnackbarObject} = useContext(useSnackbar)\r\n    const addOptionHandler = () => {\r\n        if (options.length < 6) {            \r\n        let option = {\r\n            option: '', tags: '', remarks: '', isCorrect: false\r\n        }\r\n        setOptions(options.concat(option))\r\n        } else {\r\n            setSnackbarObject({\r\n                snackbarOpen: true,\r\n                snackbarText: 'Only 6 options allowed'\r\n            })\r\n        }\r\n    }\r\n    const updateParentQuestionData = (tempOptions)=>{\r\n        setQuestionData({...questionData, 'options': JSON.stringify(tempOptions)})\r\n    }\r\n    const optionInputHandler =(e, key)=>{\r\n        let tempOptions = [...options];\r\n        tempOptions[key].option = e.target.value;\r\n        setOptions(tempOptions);\r\n        updateParentQuestionData(tempOptions);\r\n    }\r\n    const tagsInputHandler = (e, key)=>{\r\n        let tempOptions = [...options];\r\n        tempOptions[key].tags = e.target.value;\r\n        setOptions(tempOptions);\r\n        updateParentQuestionData(tempOptions)\r\n    }\r\n    const checkboxHandler = (e, key)=>{\r\n        let tempOptions = [...options];\r\n        tempOptions[key].isCorrect = e.target.checked;\r\n        setOptions(tempOptions);\r\n        updateParentQuestionData(tempOptions)\r\n    }\r\n    const deleteOptionHandler =(e, key)=>{\r\n        let tempOptions = [...options];\r\n        tempOptions.splice(key, 1)\r\n        setOptions(tempOptions)\r\n        updateParentQuestionData(tempOptions)\r\n    }\r\n    const instructionHandler = (e)=>{\r\n        setQuestionData({...questionData, 'instructions': e.target.value});\r\n    }\r\n    const remarksHandler = (e)=>{\r\n        setQuestionData({...questionData, 'remarks': e.target.value});\r\n    }\r\n    const tagsHandler = (e)=>{\r\n        setQuestionData({...questionData, 'tags': e.target.value});\r\n    }\r\n    return (<>\r\n        <div className={classes.questionDataStyle}>\r\n            <Paper elevation={3} className={classes.questionAnswerStyle}>\r\n                <div className={classes.questionStyle} dangerouslySetInnerHTML={{ __html: questionData.question }}></div>\r\n                <div className={classes.answerStyle}>Answer: <div dangerouslySetInnerHTML={{ __html: questionData.answer }}></div></div>\r\n            </Paper>\r\n            <div className={classes.explanationStyle} dangerouslySetInnerHTML={{ __html: questionData.explanation }}></div>\r\n            <div className={classes.metaDataArea}>\r\n                <Paper className={classes.paper} variant=\"outlined\">\r\n                    <div className={classes.optionsStyle}>\r\n                        <div className={classes.instructionsHead}>\r\n                            Options\r\n                        </div>\r\n                        <div className={classes.optionsEditorStyle}>\r\n                            {options.map((data,index) => {\r\n                                return (\r\n                                    <Paper key={index} className={classes.optionIteratorStyle}>\r\n                                        <div className={classes.optionActionStyle}>\r\n                                            <div className={classes.correctCheckbox}>\r\n                                                is correct ?<Checkbox\r\n                                                    onChange={(e) => checkboxHandler(e, index)}\r\n                                                    checked={data.isCorrect}\r\n                                                    inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                                                />\r\n                                            </div>\r\n                                            <IconButton onClick={(e) => deleteOptionHandler(e, index)} aria-label=\"delete\" className={classes.margin}>\r\n                                                <DeleteIcon />\r\n                                            </IconButton>\r\n                                        </div>\r\n                                        <TextField onChange={(e) => optionInputHandler(e, index)} id=\"standard-basic\"\r\n                                            value={data.option}\r\n                                            label=\"Option\" />\r\n                                        <TextField onChange={(e) => tagsInputHandler(e, index)} id=\"standard-basic\"\r\n                                            value={data.tags}\r\n                                            label=\"tags\" />\r\n                                    </Paper>\r\n                                );\r\n                            })}</div>\r\n                        <div className={classes.addOptionButton}>\r\n                            <IconButton onClick={addOptionHandler} aria-label=\"Add\" className={classes.margin}>\r\n                                <AddIcon />\r\n                            </IconButton>\r\n                        </div>\r\n                    </div>\r\n                </Paper>\r\n                <Paper className={classes.paper} variant=\"outlined\">\r\n                    <div className={classes.instructionStyle}>\r\n                        <div className={classes.instructionsHead}>\r\n                            Instructions And Remarks\r\n                        </div>\r\n                        <TextField id=\"standard-basic\"\r\n                            rows={4} multiline label=\"Instructions\" \r\n                            value={questionData.instructions || ''}\r\n                            onChange={instructionHandler}\r\n                            />\r\n                        <TextField id=\"standard-basic\"\r\n                            rows={4} multiline label=\"Remarks\" \r\n                            value={questionData.remarks || ''}\r\n                            onChange={remarksHandler}\r\n                            />\r\n                        <TextField id=\"standard-basic\"\r\n                            onChange={tagsHandler}\r\n                            value={questionData.tags || ''}\r\n                            label=\"tags\" />\r\n                    </div>\r\n                </Paper>\r\n            </div>\r\n        </div>\r\n    </>)\r\n}\r\n\r\n\r\nexport default QuestionContent;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nconst useStyles = makeStyles({\r\n    paper: {\r\n        minHeight: 25,\r\n        minWidth: 25,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        cursor: 'pointer'\r\n    },\r\n    unchecked: {\r\n        background: 'ghostwhite'\r\n    },\r\n    checked: {\r\n        background: 'greenyellow'\r\n    },\r\n    savedForLater: {\r\n        background: 'deepskyblue'\r\n    },\r\n    borderStyle: {\r\n        border: '0.5px solid blue'\r\n    },\r\n    unrelated: {\r\n        background: 'tomato'\r\n    },\r\n    reported: {\r\n        background: 'red'\r\n    },\r\n    margin: {\r\n        margin: 1\r\n    },\r\n    formControl: {\r\n        paddingBottom: '1em'\r\n    },\r\n    gridContainer: {\r\n        height: '500px',\r\n        overflowY: 'auto'\r\n    }\r\n})\r\nconst QuestionMapView = ({totalQuestions, pages, questionCategories,onMapClick, setActiveIndex, indexController,activeIndex,  questionDataArray})=>{\r\n    const classes = useStyles();\r\n    const arrayForIteration = Array.from(Array(100).keys());\r\n    let iteratorWeight = 0;\r\n    var pages = Math.ceil((([...questionDataArray,\r\n    ].length) / 100));\r\n    const onPaperClickHandler = (index) => {\r\n        setActiveIndex(index)\r\n        onMapClick(index);\r\n    }\r\n    return(<Grid item>\r\n        <Grid className={classes.gridContainer} container justify=\"center\" spacing={1}>\r\n            {arrayForIteration.map((value, index) => {\r\n                while (((index + (indexController * 100) + iteratorWeight) < totalQuestions) && !([...questionDataArray\r\n                ].includes(index + (indexController * 100) + iteratorWeight))) {\r\n                    iteratorWeight++;\r\n                }\r\n                return (\r\n                    (index + (indexController * 100) + iteratorWeight) < totalQuestions ? <Grid key={index} item>\r\n                        <Paper onClick={(e) => onPaperClickHandler(Number(e.target.innerText) - 1)} className={[classes.paper,\r\n                        questionCategories.approvedQuestions.includes(index + (indexController * 100) + iteratorWeight) ? classes.checked :\r\n                            questionCategories.savedForLaterQuestions.includes(index + (indexController * 100) + iteratorWeight) ? classes.savedForLater :\r\n                                questionCategories.reportedQuestions.includes(index + (indexController * 100) + iteratorWeight) ? classes.reported :\r\n                                    questionCategories.unrelatedQuestions.includes(index + (indexController * 100) + iteratorWeight) ? classes.unrelated :\r\n                                        classes.unchecked\r\n\r\n                            , activeIndex === (index + (indexController * 100) + iteratorWeight) ? classes.borderStyle : ''].join(' ')}>{index + (indexController * 100) + iteratorWeight + 1}</Paper>\r\n                    </Grid> : ''\r\n                )\r\n            })}\r\n        </Grid>\r\n    </Grid>)\r\n}\r\n\r\nexport default QuestionMapView;","import { makeStyles, useTheme } from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport QuestionMapView from './question-map-view';\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        paddingTop: '0.5em',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        height: '100%'\r\n    },\r\n    paper: {\r\n        minHeight: 25,\r\n        minWidth: 25,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        cursor: 'pointer'\r\n    },\r\n    unchecked: {\r\n        background: 'ghostwhite'\r\n    },\r\n    checked: {\r\n        background: 'greenyellow'\r\n    },\r\n    savedForLater: {\r\n        background: 'deepskyblue'\r\n    },\r\n    borderStyle: {\r\n        border: '0.5px solid blue'\r\n    },\r\n    unrelated: {\r\n        background: 'tomato'\r\n    },\r\n    reported: {\r\n        background: 'red'\r\n    },\r\n    paginationButtons: {\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        marginTop: 'auto'\r\n    },\r\n    margin: {\r\n        margin: 1\r\n    },\r\n    filterDropdown: {\r\n        width: '8em'\r\n    },\r\n    formControl: {\r\n        paddingBottom: '1em'\r\n    },\r\n    gridContainer: {\r\n        height: '500px',\r\n        overflowY: 'auto'\r\n    }\r\n}))\r\nconst LeftSideBar = ({ questionCategories, onMapClick, totalQuestions, questionIndex }) => {\r\n    const appTheme = useTheme()\r\n    const classes = useStyles(appTheme);\r\n    useEffect(() => {\r\n        setActiveIndex(questionIndex || [])\r\n        if (filter === 'all') {\r\n            setIndexController(Math.floor(questionIndex / 100))\r\n        }\r\n    }, [questionIndex])\r\n    const [activeIndex, setActiveIndex] = useState(0)\r\n    const [indexController, setIndexController] = useState(0)\r\n    const [filter, setFilter] = useState('all')\r\n\r\n    var pages = Math.ceil(totalQuestions / 100);\r\n    const forwardHandler = () => {\r\n        if (indexController < pages - 1) {\r\n            setIndexController(indexController + 1)\r\n        }\r\n    }\r\n    const backwardHandler = () => {\r\n        if (indexController > 0) {\r\n            setIndexController(indexController - 1)\r\n        }\r\n    }\r\n    const onPaperClickHandler = (index) => {\r\n        setActiveIndex(index)\r\n        onMapClick(index);\r\n    }\r\n    const handleFilterChange = (e) => {\r\n        setIndexController(0);\r\n        setFilter(e.target.value);\r\n    }\r\n    const getMapView = (filterValue) => {\r\n        let arrayForIteration;\r\n        let iteratorWeight;\r\n        switch (filterValue) {\r\n            case 'all':\r\n                arrayForIteration = Array.from(Array(100).keys());\r\n                return (<Grid item>\r\n                    <Grid className={classes.gridContainer} container justify=\"center\" spacing={1}>\r\n                        {arrayForIteration.map((value, index) => (\r\n                            (index + (indexController * 100)) < totalQuestions ? <Grid key={index} item>\r\n                                <Paper onClick={(e) => onPaperClickHandler(Number(e.target.innerText) - 1)} className={[classes.paper,\r\n                                questionCategories.approvedQuestions.includes(index + (indexController * 100)) ? classes.checked :\r\n                                    questionCategories.savedForLaterQuestions.includes(index + (indexController * 100)) ? classes.savedForLater :\r\n                                        questionCategories.reportedQuestions.includes(index + (indexController * 100)) ? classes.reported :\r\n                                            questionCategories.unrelatedQuestions.includes(index + (indexController * 100)) ? classes.unrelated :\r\n                                                classes.unchecked\r\n\r\n                                    , activeIndex === (index + (indexController * 100)) ? classes.borderStyle : ''].join(' ')}>{index + (indexController * 100) + 1}</Paper>\r\n                            </Grid> : ''\r\n                        ))}\r\n                    </Grid>\r\n                </Grid>);\r\n            case 'undone':\r\n                arrayForIteration = Array.from(Array(100).keys());\r\n                iteratorWeight = 0;\r\n                pages = Math.ceil((totalQuestions - ([...questionCategories.approvedQuestions,\r\n                ...questionCategories.savedForLaterQuestions,\r\n                ...questionCategories.unrelatedQuestions,\r\n                ...questionCategories.reportedQuestions\r\n                ].length)) / 100);\r\n                return (<Grid item>\r\n                    <Grid container className={classes.gridContainer} justify=\"center\" spacing={1}>\r\n                        {arrayForIteration.map((value, index) => {\r\n                            while (((index + (indexController * 100) + iteratorWeight) < totalQuestions) && [...questionCategories.approvedQuestions,\r\n                            ...questionCategories.savedForLaterQuestions,\r\n                            ...questionCategories.unrelatedQuestions,\r\n                            ...questionCategories.reportedQuestions\r\n                            ].includes(index + (indexController * 100) + iteratorWeight)) {\r\n                                iteratorWeight++;\r\n                            }\r\n                            return (\r\n                                (index + (indexController * 100) + iteratorWeight) < totalQuestions ? <Grid key={index} item>\r\n                                    <Paper onClick={(e) => {\r\n                                        onPaperClickHandler(Number(e.target.innerText) - 1)\r\n                                    }} className={[classes.paper,\r\n                                    questionCategories.approvedQuestions.includes(index + (indexController * 100) + iteratorWeight) ? classes.checked :\r\n                                        questionCategories.savedForLaterQuestions.includes(index + (indexController * 100) + iteratorWeight) ? classes.savedForLater :\r\n                                            questionCategories.reportedQuestions.includes(index + (indexController * 100) + iteratorWeight) ? classes.reported :\r\n                                                questionCategories.unrelatedQuestions.includes(index + (indexController * 100) + iteratorWeight) ? classes.unrelated :\r\n                                                    classes.unchecked\r\n\r\n                                        , activeIndex === (index + (indexController * 100) + iteratorWeight) ? classes.borderStyle : ''].join(' ')}>{index + (indexController * 100) + iteratorWeight + 1}</Paper>\r\n                                </Grid> : ''\r\n                            )\r\n                        })}\r\n                    </Grid>\r\n                </Grid>);\r\n\r\n            case 'approved':\r\n                return (<QuestionMapView totalQuestions={totalQuestions} onMapClick={onMapClick} setActiveIndex={setActiveIndex}\r\n                    indexController={indexController} activeIndex={activeIndex} questionCategories={questionCategories}\r\n                    questionDataArray={questionCategories.approvedQuestions} />);\r\n            case 'flag_for_later':\r\n                return (<QuestionMapView totalQuestions={totalQuestions} onMapClick={onMapClick} setActiveIndex={setActiveIndex}\r\n                    indexController={indexController} activeIndex={activeIndex} questionCategories={questionCategories}\r\n                    questionDataArray={questionCategories.savedForLaterQuestions} />);\r\n            case 'unrelated':\r\n                return (<QuestionMapView totalQuestions={totalQuestions} onMapClick={onMapClick} setActiveIndex={setActiveIndex}\r\n                    indexController={indexController} activeIndex={activeIndex} questionCategories={questionCategories}\r\n                    questionDataArray={questionCategories.unrelatedQuestions} />);\r\n            case 'reported':\r\n                return (\r\n                    <QuestionMapView totalQuestions={totalQuestions} onMapClick={onMapClick} setActiveIndex={setActiveIndex}\r\n                        indexController={indexController} activeIndex={activeIndex} questionCategories={questionCategories}\r\n                        questionDataArray={questionCategories.reportedQuestions} />\r\n                );\r\n        }\r\n    }\r\n    return (<div className={classes.root}>\r\n        <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-label\">Filter</InputLabel>\r\n            <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                className={classes.filterDropdown}\r\n                value={filter}\r\n                onChange={handleFilterChange}\r\n            >\r\n                <MenuItem value={'all'}>All</MenuItem>\r\n                <MenuItem value={'undone'}>To do</MenuItem>\r\n                <MenuItem value={'approved'}>Approved</MenuItem>\r\n                <MenuItem value={'flag_for_later'}>Saved for later</MenuItem>\r\n                <MenuItem value={'unrelated'}>Unrelated</MenuItem>\r\n                <MenuItem value={'reported'}>Reported</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n        {\r\n            getMapView(filter)\r\n        }\r\n        <div className={classes.paginationButtons}>\r\n            <IconButton onClick={backwardHandler} aria-label=\"delete\" className={classes.margin}>\r\n                <ArrowBackIosIcon />\r\n            </IconButton>\r\n            <IconButton onClick={forwardHandler} aria-label=\"delete\" className={classes.margin}>\r\n                <ArrowForwardIosIcon />\r\n            </IconButton>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default LeftSideBar;","\r\nexport const validateAndProceed = async (hashKey) => {\r\n    const formData = new FormData();\r\n    formData.append('key', hashKey)\r\n    var response = await fetch('http://127.0.0.1:5000/auth', {\r\n        method: 'post',\r\n        body: formData\r\n    });\r\n    var results = await response.text()\r\n    var resultObj = JSON.parse(results);\r\n    if (resultObj.response) {\r\n        resultObj.key = hashKey;\r\n        return resultObj;\r\n    } else {\r\n        return {};\r\n    }\r\n}\r\nexport const validateAndProceedUserAndDoc = async (userHashKey, documentHashKey) => {\r\n    const formData = new FormData();\r\n    formData.append('userKey', userHashKey);\r\n    formData.append('documentKey', documentHashKey);\r\n    var response = await fetch('http://127.0.0.1:5000/validateUserAndDocument', {\r\n        method: 'post',\r\n        body: formData\r\n    });\r\n    var results = await response.json()\r\n    if (results.status === 'ok') {\r\n        return results;\r\n    } else {\r\n        return {};\r\n    }\r\n}","import { makeStyles, Paper, Snackbar, useTheme } from '@material-ui/core';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport RightSideBar from './side-bar/right-side-bar';\r\nimport FooterBar from './footer-bar/footer-bar';\r\nimport QuestionContent from './question-content/question-content';\r\nimport useUserContext from '../../utils/user-context/user-context';\r\nimport LeftSideBar from './side-bar/left-side-bar';\r\nimport SimpleSnackbar from '../snack-bar/snack-bar';\r\nimport useSnackbar from '../snack-bar/hooks/use-snack-bar';\r\nimport { getUserData, validateAndProceed } from '../../utils/auth-functions/auth-functions';\r\nimport Cookies from 'js-cookie'\r\nimport useSplashScreen from '../splash-screen/hooks/use-splash-screen';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flexWrap: 'wrap',\r\n        listStyle: 'none',\r\n    },\r\n    questionNavHelperGrid: {\r\n        display: 'grid',\r\n        gridTemplateColumns: '1fr',\r\n        height: '100%',\r\n        overflowX: 'hidden',\r\n        overflowY: 'hidden'\r\n    },\r\n    questionNavGrid: {\r\n        display: 'grid',\r\n        gridTemplateColumns: '250px 1fr 250px',\r\n        gridTemplateRows: '1fr 100px',\r\n        gridArea: '1/1'\r\n    },\r\n    sideBarStyle: {\r\n        gridRow: '1/3',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between'\r\n    },\r\n    rightSideBar: {\r\n        gridRow: '1/3',\r\n        gridColumn: '3/4'\r\n    },\r\n    navigationStyle: {\r\n        background: 'aliceblue',\r\n        width: '100%',\r\n        gridColumn: '2/3',\r\n        gridRow: '2/3',\r\n        display: 'flex',\r\n        height: '4em',\r\n        alignSelf: 'flex-end',\r\n        justifyContent: 'space-between'\r\n\r\n    },\r\n}))\r\nconst QuestionsLanding = () => {\r\n    const appTheme = useTheme();\r\n    const classes = useStyles(appTheme);\r\n    const { user, setUser } = useContext(useUserContext);\r\n    const {loaderActive, setLoaderActive} = useContext(useSplashScreen)\r\n    const {snackbarObject, setSnackbarObject} = useContext(useSnackbar)\r\n    useEffect(() => {\r\n        if(JSON.stringify(user) == '{}'){\r\n            setUserDataFromCookie(Cookies.get('user_key'))\r\n        }\r\n        if (typeof user.last_index !== 'undefined') {\r\n            getQuestionByIndex(user.last_index)\r\n        }\r\n        setQuestionIndex(user.last_index);\r\n        setQuestionCategories({\r\n            approvedQuestions: user.approved_questions || [],\r\n            savedForLaterQuestions: user.saved_for_later_questions || [],\r\n            unrelatedQuestions: user.unrelated || [],\r\n            reportedQuestions: user.reported || []\r\n        })\r\n    }, [user])\r\n    const setUserDataFromCookie = async(hashKey)=>{\r\n        var userObj = await validateAndProceed(hashKey);\r\n        setUser(userObj);\r\n    }\r\n    const [questionStatus, setQuestionStatus] = useState('')\r\n    const [questionCategories, setQuestionCategories] = useState({\r\n        approvedQuestions: [],\r\n        savedForLaterQuestions: [],\r\n        unrelatedQuestions: [],\r\n        reportedQuestions: []\r\n    })\r\n    const [questionData, setQuestionData] = useState({\r\n        options: '[]',\r\n        marks: '',\r\n        time: '',\r\n        topic: '',\r\n        subTopic: '',\r\n        complexity: '',\r\n        type: '',\r\n        instructions:'',\r\n        remarks: '',\r\n        tags: ''\r\n    })\r\n    const [questionIndex, setQuestionIndex] = useState(0);\r\n    const nextQuestionHandler = () => {\r\n        getQuestionByIndex(questionIndex + 1)\r\n        setQuestionIndex(questionIndex + 1);\r\n    }\r\n    const previousQuestionHandler = () => {\r\n        if (questionIndex - 1 > -1) {\r\n            getQuestionByIndex(questionIndex - 1)\r\n            setQuestionIndex(questionIndex - 1);\r\n        }\r\n    }\r\n    const getQuestionByIndex = async (index) => {\r\n        setLoaderActive(true);\r\n        const formData = new FormData();\r\n        formData.append('index', index)\r\n        formData.append('key', user.key)\r\n        var response = await fetch('http://127.0.0.1:5000/question/getQuestionByIndex', {\r\n            method: 'post',\r\n            body: formData\r\n        });\r\n        var resultObj = await response.json();\r\n        setLoaderActive(false)\r\n        setQuestionData(resultObj.current_object);\r\n        setQuestionStatus(resultObj.question_status);\r\n    }\r\n    const saveInstantQuestionFunction = async (status) => {\r\n        const formData = new FormData();\r\n        setLoaderActive(true)\r\n        formData.append('questionData', JSON.stringify(questionData));\r\n        formData.append('questionIndex', questionIndex);\r\n        formData.append('questionStatus', status);\r\n        formData.append('key', user.key);\r\n        var response = await fetch('http://127.0.0.1:5000/question/saveQuestionInstance', {\r\n            method: 'post',\r\n            body: formData\r\n        });\r\n        var results = await response.json();\r\n        setLoaderActive(false)\r\n        setSnackbarObject({\r\n            snackbarOpen: true,\r\n            snackbarText: 'Saved Successfully'\r\n        })\r\n        setQuestionCategories({\r\n            approvedQuestions: results.approved_questions,\r\n            savedForLaterQuestions: results.saved_for_later,\r\n            unrelatedQuestions: results.unrelated,\r\n            reportedQuestions: results.reported\r\n        })\r\n    }\r\n    const saveQuestionBankFunction = async () => {\r\n        const formData = new FormData();\r\n        formData.append('key', user.key)\r\n        var response = await fetch('http://127.0.0.1:5000/question/saveQuestionBankGRE', {\r\n            method: 'post',\r\n            body: formData\r\n        });\r\n        var results = await response.json();\r\n        console.log(results)\r\n    }\r\n    const onMapClick = (index) => {\r\n        setQuestionIndex(index);\r\n        getQuestionByIndex(index);\r\n    }\r\n    return (<>\r\n        <div className={classes.root}>\r\n            <div className={classes.questionNavHelperGrid}>\r\n                <QuestionContent setQuestionData={setQuestionData} questionData={questionData} />\r\n                <div className={classes.questionNavGrid}>\r\n                    <Paper className={classes.sideBarStyle}>\r\n                        <RightSideBar questionData={questionData} setQuestionData={setQuestionData} />\r\n                    </Paper>\r\n                    <Paper elevation={3} className={classes.navigationStyle}>\r\n                        <FooterBar questionStatus={questionStatus} setQuestionStatus={setQuestionStatus} saveQuestionBankFunction={saveQuestionBankFunction} saveInstantQuestionFunction={saveInstantQuestionFunction} previousQuestionHandler={previousQuestionHandler} nextQuestionHandler={nextQuestionHandler} />\r\n                    </Paper>\r\n                    <Paper className={classes.rightSideBar}>\r\n                        <LeftSideBar totalQuestions={user.total_questions} questionIndex={questionIndex} questionCategories={questionCategories} onMapClick={onMapClick} />\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n            {/* <SimpleSnackbar/> */}\r\n        </div>\r\n    </>)\r\n}\r\n\r\n\r\nexport default QuestionsLanding;","import { makeStyles, TextField, Paper } from '@material-ui/core';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport useSnackbar from '../../../snack-bar/hooks/use-snack-bar';\r\n\r\n\r\n// Import katex\r\nimport katex from 'katex'\r\nimport 'katex/dist/katex.min.css'\r\n\r\nimport SunEditor, { buttonList } from \"suneditor-react\";\r\nimport 'suneditor/dist/css/suneditor.min.css'; // Import Sun Editor's CSS File\r\nimport plugins from 'suneditor/src/plugins'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        padding: '2em 0.5em 0.5em 0.5em',\r\n        height: '100%',\r\n        overflowY: 'auto'\r\n    },\r\n    questionAnswerStyle: {\r\n        minHeight: '8em',\r\n        padding: '1em',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n    },\r\n    metaDataArea: {\r\n        paddingTop: '2em'\r\n\r\n    },\r\n    optionsStyle: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignSelf: 'center',\r\n        padding: '0.5em'\r\n    },\r\n    instructionStyle: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignSelf: 'center',\r\n        padding: '3em'\r\n    },\r\n    instructionsHead: {\r\n\r\n    },\r\n    saveButtonStyle: {\r\n        alignSelf: 'flex-end',\r\n        paddingBottom: '1em',\r\n        paddingTop: '1em'\r\n    },\r\n    paper: {\r\n        marginTop: '2em'\r\n    },\r\n    addOptionButton: {\r\n\r\n    },\r\n    optionIteratorStyle: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        marginTop: '1em',\r\n        padding: '0.5em',\r\n    },\r\n    optionActionStyle: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    correctCheckbox: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n\r\n    questionAnswerStyle: {\r\n        minHeight: '8em',\r\n        padding: '1em',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n    },\r\n\r\n    questionStyle: {\r\n        alignSelf: 'center'\r\n    },\r\n\r\n    answerStyle: {\r\n        alignSelf: 'center',\r\n        display: 'flex'\r\n    },\r\n\r\n    explanationStyle: {\r\n        paddingTop: '2em'\r\n    },\r\n    checkBoxActionStyle:{\r\n        display: 'flex'\r\n    },\r\n    questionRichTextBoxWrapper:{\r\n        width: '100%'\r\n    },\r\n    explanationCheckboxStyle:{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        paddingLeft: '1em'\r\n    },\r\n})\r\nconst InnerQuestion = ({ questionData, setQuestionData, optionIndex, questionOptions }) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState('');\r\n    const [options, setOptions] = useState([]);\r\n    const [questionText, setQuestionText] = useState('');\r\n    const [questionFocus, setQuestionFocus] = useState(null);\r\n    const [optionFocusedKey, setOptionFocusedKey] = useState(null);\r\n    const { snackbarObject, setSnackbarObject } = useContext(useSnackbar)\r\n    useEffect(()=>{\r\n        setOptions(questionOptions[optionIndex].options || [])\r\n    },[questionOptions])\r\n    useEffect(()=>{\r\nconsole.log('hello')\r\n    },[questionData])\r\n    const Editor = {\r\n        modules: {\r\n            toolbar: [\r\n                ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n                [{ 'list': 'ordered' }, { 'list': 'bullet' }],\r\n                ['image', ''],\r\n                ['clean']\r\n            ],\r\n            clipboard: {\r\n                // toggle to add extra line breaks when pasting HTML:\r\n                matchVisual: false,\r\n            }\r\n        },\r\n        formats: [\r\n            'bold', 'italic', 'underline',\r\n            'list', 'bullet', 'indent',\r\n            'image',\r\n        ]\r\n    }\r\n    const hideToolbar = {\r\n        modules: {\r\n            toolbar: false,\r\n            clipboard: {\r\n                // toggle to add extra line breaks when pasting HTML:\r\n                matchVisual: false,\r\n            }\r\n        },\r\n        formats: [\r\n            'bold', 'italic', 'underline',\r\n            'list', 'bullet', 'indent',\r\n            'image',\r\n        ]\r\n    }\r\n    const addOptionHandler = () => {\r\n        if (options.length < 6) {\r\n            let option = {\r\n                option: '', isCorrect: false\r\n            }\r\n            let tempOptions = [...questionOptions];\r\n            tempOptions[optionIndex].options = options.concat(option);\r\n            updateParentQuestionData(tempOptions);\r\n            setOptions(options.concat(option))\r\n        } else {\r\n            setSnackbarObject({\r\n                snackbarOpen: true,\r\n                snackbarText: 'Only 6 options allowed'\r\n            })\r\n        }\r\n    }\r\n    const checkboxHandler = (e, key) => {\r\n        let tempOptions = [...questionOptions];\r\n        tempOptions[optionIndex].options[key].isCorrect = e.target.checked;\r\n        setOptions(tempOptions[optionIndex].options.map((item, index)=>{\r\n            if(index === key){\r\n                item.isCorrect = e.target.checked;\r\n                return item\r\n            } else{\r\n                return item\r\n            }\r\n        }))\r\n        updateParentQuestionData(tempOptions)\r\n    }\r\n    const explanationCheckboxHandler = (e, key) => {\r\n        let tempOptions = [...questionOptions];\r\n        tempOptions[optionIndex].options[key].hasExplanation = e.target.checked;\r\n        tempOptions[optionIndex].options[key].explanation = '';\r\n        setOptions(tempOptions[optionIndex].options.map((item, index)=>{\r\n            if(index === key){\r\n                item.hasExplanation = e.target.checked;\r\n                return item\r\n            } else{\r\n                return item\r\n            }\r\n        }))\r\n        updateParentQuestionData(tempOptions)\r\n    }\r\n    const deleteOptionHandler = (e, key) => {\r\n        let tempOptions = [...options];\r\n        tempOptions.splice(key, 1)\r\n        setOptions(tempOptions)\r\n        updateParentQuestionData(tempOptions)\r\n    }\r\n    const optionInputHandler =(data, key)=>{\r\n        let tempOptions = [...questionOptions];\r\n        tempOptions[optionIndex].options[key].option = data;\r\n        setOptions(tempOptions[optionIndex].options)\r\n        updateParentQuestionData(tempOptions);\r\n    }\r\n    const explanationInputHandler = (data, key)=>{\r\n        let tempOptions = [...questionOptions];\r\n        tempOptions[optionIndex].options[key].explanation = data;\r\n        setOptions(tempOptions[optionIndex].options)\r\n        updateParentQuestionData(tempOptions);\r\n    }\r\n    const updateParentQuestionData = (tempOptions)=>{\r\n        let tempQuestionData = questionData;\r\n        tempQuestionData.options = tempOptions\r\n        setQuestionData(tempQuestionData)\r\n    }\r\n    const questionInputHandler =(data)=>{\r\n        let tempOptions = [...questionOptions];\r\n        tempOptions[optionIndex].question = data;\r\n        updateParentQuestionData(tempOptions);\r\n    }\r\n    const questionEditorClickHandler =()=>{\r\n        setOptionFocusedKey(null);\r\n        setQuestionFocus(true);\r\n    }\r\n\r\n    const onOptionTextFieldFocus = (key)=>{\r\n        setOptionFocusedKey(key)\r\n        setQuestionFocus(false);\r\n    }\r\n    return <><div className={classes.root}>\r\n        <Paper elevation={3} className={classes.questionAnswerStyle}>\r\n            Question\r\n<div onClick={questionEditorClickHandler}>\r\n<SunEditor\r\n                            onChange={questionInputHandler}\r\n                            setContents={questionOptions[optionIndex].question || ''}\r\n                            setOptions={{\r\n                                mode: 'balloon-always',\r\n                                katex: katex,\r\n                                buttonList: [\r\n                                    ['undo', 'redo'],\r\n                                    ['font', 'fontSize', 'formatBlock'],\r\n                                    ['paragraphStyle', 'blockquote'],\r\n                                    ['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript'],\r\n                                    ['fontColor', 'hiliteColor', 'textStyle'],\r\n                                    ['removeFormat'],\r\n                                    '/', // Line break\r\n                                    ['outdent', 'indent'],\r\n                                    ['align', 'horizontalRule', 'list', 'lineHeight'],\r\n                                    ['table', 'link', 'image'/*, 'video', 'audio'*/, 'math'], // You must add the 'katex' library at options to use the 'math' plugin.\r\n                                    /** ['imageGallery'] */ // You must add the \"imageGalleryUrl\".\r\n                                    ['fullScreen', 'showBlocks', 'codeView'],\r\n                                    ['preview'/*, 'print'*/],\r\n                                    // ['save', 'template']\r\n                                ] // Or Array of button list, eg. [['font', 'align'], ['image']]\r\n                                // Other option\r\n                            }} />\r\n\r\n{/* <ReactQuill theme=\"snow\"\r\nmodules={questionFocus ? Editor.modules : hideToolbar.modules}\r\nformats={questionFocus ? Editor.formats : hideToolbar.formats}\r\n                value={questionOptions[optionIndex].question || ''} onChange={questionInputHandler} /> */}\r\n</div>\r\n        </Paper>\r\n        <div className={classes.metaDataArea}>\r\n            <Paper className={classes.paper} variant=\"outlined\">\r\n                <div className={classes.optionsStyle}>\r\n                    <div className={classes.instructionsHead}>\r\n                        Options\r\n        </div>\r\n                    <div className={classes.optionsEditorStyle}>\r\n                        {options.map((data, index) => {\r\n                            return (\r\n                                <Paper key={index} className={classes.optionIteratorStyle}>\r\n                                    <div className={classes.optionActionStyle}>\r\n                                        <div className={classes.correctCheckbox}>\r\n                                        </div>\r\n                                        <IconButton onClick={(e) => deleteOptionHandler(e, index)} aria-label=\"delete\" className={classes.margin}>\r\n                                            <DeleteIcon />\r\n                                        </IconButton>\r\n                                    </div>\r\n                                    <div className={classes.checkBoxActionStyle}>\r\n                                    <Checkbox\r\n                                                onChange={(e) => checkboxHandler(e, index)}\r\n                                                checked={data.isCorrect}\r\n                                                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                                            />\r\n                                                                                \r\n                                                                                \r\n                                                                                <div className={classes.questionRichTextBoxWrapper} onClick={() => onOptionTextFieldFocus(index)}>\r\n                                    <SunEditor\r\n                                    className={classes.questionRichTextBox}\r\n                            onChange={(data)=> optionInputHandler(data,index)}\r\n                            setContents={data.option || ''}\r\n                            setOptions={{\r\n                                mode: 'balloon-always',\r\n                                katex: katex,\r\n                                buttonList: [\r\n                                    ['undo', 'redo'],\r\n                                    ['font', 'fontSize', 'formatBlock'],\r\n                                    ['paragraphStyle', 'blockquote'],\r\n                                    ['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript'],\r\n                                    ['fontColor', 'hiliteColor', 'textStyle'],\r\n                                    ['removeFormat'],\r\n                                    '/', // Line break\r\n                                    ['outdent', 'indent'],\r\n                                    ['align', 'horizontalRule', 'list', 'lineHeight'],\r\n                                    ['table', 'link', 'image'/*, 'video', 'audio'*/, 'math'], // You must add the 'katex' library at options to use the 'math' plugin.\r\n                                    /** ['imageGallery'] */ // You must add the \"imageGalleryUrl\".\r\n                                    ['fullScreen', 'showBlocks', 'codeView'],\r\n                                    ['preview'/*, 'print'*/],\r\n                                    // ['save', 'template']\r\n                                ] // Or Array of button list, eg. [['font', 'align'], ['image']]\r\n                                // Other option\r\n                            }} />\r\n                                    {/* <ReactQuill className={classes.questionRichTextBox} theme=\"snow\"\r\n                                                                modules={(index === optionFocusedKey) ? Editor.modules : hideToolbar.modules}\r\n                                                                formats={(index === optionFocusedKey) ? Editor.formats : hideToolbar.formats}\r\n                                        value={data.option || ''} onChange={(data)=> optionInputHandler(data,index)} /> */}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                        {\r\n                                                        data.isCorrect ?\r\n                                                        <>\r\n                                                        <div className={classes.explanationCheckboxStyle}>\r\n                                                            <Checkbox\r\n                                                                onChange={(e) => explanationCheckboxHandler(e, index)}\r\n                                                                checked={data.hasExplanation}\r\n                                                                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                                                            />explanation\r\n                                                </div> {data.hasExplanation ?\r\n                                                            <div style={{padding:8}}>\r\n                                                                <p style={{fontSize:12}}></p>\r\n                                                                <div className={classes.editorStyle} >\r\n                                                                    <SunEditor\r\n                                                                        onChange={(data) => explanationInputHandler(data, index)}\r\n                                                                        setContents={data.explanation}\r\n                                                                        setOptions={{\r\n                                                                            mode: 'balloon-always',\r\n                                                                            katex: katex,\r\n                                                                            buttonList: [\r\n                                                                                ['undo', 'redo'],\r\n                                                                                ['font', 'fontSize', 'formatBlock'],\r\n                                                                                ['paragraphStyle', 'blockquote'],\r\n                                                                                ['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript'],\r\n                                                                                ['fontColor', 'hiliteColor', 'textStyle'],\r\n                                                                                ['removeFormat'],\r\n                                                                                '/', // Line break\r\n                                                                                ['outdent', 'indent'],\r\n                                                                                ['align', 'horizontalRule', 'list', 'lineHeight'],\r\n                                                                                ['table', 'link', 'image'/*, 'video', 'audio'*/, 'math'], // You must add the 'katex' library at options to use the 'math' plugin.\r\n                                                                                /** ['imageGallery'] */ // You must add the \"imageGalleryUrl\".\r\n                                                                                ['fullScreen', 'showBlocks', 'codeView'],\r\n                                                                                ['preview'/*, 'print'*/],\r\n                                                                                // ['save', 'template']\r\n                                                                            ] // Or Array of button list, eg. [['font', 'align'], ['image']]\r\n                                                                            // Other option\r\n                                                                        }} />\r\n                                                                </div>\r\n                                                            </div> : ''}</>\r\n                                                            : <></>\r\n                                                    }\r\n                                </Paper>\r\n                            );\r\n                        })}</div>\r\n                    <div className={classes.addOptionButton}>\r\n                        <IconButton onClick={addOptionHandler} aria-label=\"Add\" className={classes.margin}>\r\n                            <AddIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    </div>\r\n\r\n    </>\r\n}\r\n\r\nexport default InnerQuestion;","import { makeStyles, Button, TextField, Paper } from '@material-ui/core';\r\nimport React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport useSnackbar from '../../snack-bar/hooks/use-snack-bar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport InnerQuestion from './inner-question/inner-question';\r\n// Import katex\r\nimport katex from 'katex'\r\nimport 'katex/dist/katex.min.css'\r\n\r\nimport SunEditor, { buttonList } from \"suneditor-react\";\r\nimport 'suneditor/dist/css/suneditor.min.css'; // Import Sun Editor's CSS File\r\nimport plugins from 'suneditor/src/plugins'\r\nimport useQuestionContext from '../../../utils/question-context/question-context';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        gridArea: '1/1',\r\n        overflowY: 'auto',\r\n        transition: 'all 0.3s ease'\r\n    },\r\n    marginLeftStyle: {\r\n        marginLeft: '250px',\r\n    },\r\n    marginRightStyle: {\r\n        marginRight: '250px',\r\n    },\r\n    rootContent: {\r\n        padding: '0em 5em 2em 5em',\r\n    },\r\n    collapsibleButton: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    questionAnswerStyle: {\r\n        minHeight: '8em',\r\n        padding: '1em',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n    },\r\n    metaDataArea: {\r\n        // paddingTop: '2em'\r\n\r\n    },\r\n    optionsStyle: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignSelf: 'center',\r\n        padding: '1em'\r\n    },\r\n    instructionStyle: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignSelf: 'center',\r\n        padding: '1em'\r\n    },\r\n    instructionsHead: {\r\n        fontWeight: 'bold'\r\n    },\r\n    saveButtonStyle: {\r\n        alignSelf: 'flex-end',\r\n        paddingBottom: '1em',\r\n        paddingTop: '1em'\r\n    },\r\n    paper: {\r\n        marginTop: '2em'\r\n    },\r\n    addOptionButton: {\r\n\r\n    },\r\n    optionIteratorStyle: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        marginTop: '1em',\r\n        border: '1px solid #0000ff69'\r\n    },\r\n    optionActionStyle: {\r\n        display: 'grid',\r\n        gridTemplateColumns: '40px 1fr 56px',\r\n        height: '100%'\r\n    },\r\n    optionActionStyleQuestion: {\r\n        display: 'grid',\r\n        gridTemplateColumns: '1fr 50px',\r\n        height: '100%'\r\n    },\r\n    correctCheckbox: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    explanationCheckboxStyle:{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        paddingLeft: '1em'\r\n    },\r\n    questionAnswerStyle: {\r\n        minHeight: '8em',\r\n        padding: '1em',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n    },\r\n\r\n    questionStyle: {\r\n        alignSelf: 'center'\r\n    },\r\n\r\n    answerStyle: {\r\n        alignSelf: 'center',\r\n        display: 'flex'\r\n    },\r\n\r\n    explanationStyle: {\r\n        paddingTop: '2em'\r\n    },\r\n    questionRichTextBoxOuter: {\r\n        // minHeight: '11em',\r\n    },\r\n    questionRichTextBox: {\r\n        // minHeight: '9em'\r\n    },\r\n    expandedPaperHeight: {\r\n        minHeight: '8em'\r\n    },\r\n    editorStyle: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    questionCodeInput:{\r\n        width: '25em'\r\n    }\r\n})\r\nconst QuestionContentCreator = ({ questionIndex, questionData, setQuestionData, leftCollapsed, rightCollapsed, setRightCollapsed, setLeftCollapsed }) => {\r\n    const classes = useStyles();\r\n    const { snackbarObject, setSnackbarObject } = useContext(useSnackbar);\r\n    const {questionContext, setQuestionContext} = useContext(useQuestionContext)\r\n    const [options, setOptions] = useState(questionData.options || []);\r\n    const optionRef = useRef(options)\r\n    useEffect(() => {\r\n        if (questionData.options) {\r\n            setOptions(questionData.options)\r\n        }\r\n    }, [questionData])\r\n    useEffect(() => {\r\n    }, [questionIndex])\r\n    useEffect(() => {\r\n    }, [options])\r\n    const addOptionHandler = () => {\r\n        if (options.length < 6) {\r\n            let option = {\r\n                option: '', options: [], question: '', isCorrect: false\r\n            }\r\n            setOptions(options.concat(option))\r\n        } else {\r\n            setSnackbarObject({\r\n                snackbarOpen: true,\r\n                snackbarText: 'Only 6 options allowed'\r\n            })\r\n        }\r\n    }\r\n    const checkboxHandler = (e, key) => {\r\n        let tempOptions = [...options];\r\n        tempOptions[key].isCorrect = e.target.checked;\r\n        setOptions(tempOptions);\r\n        updateParentQuestionDataOptions(tempOptions);\r\n    }\r\n    const explanationCheckboxHandler = (e, key) => {\r\n        let tempOptions = [...options];\r\n        tempOptions[key].hasExplanation = e.target.checked;\r\n        tempOptions[key].explanation = '';\r\n        setOptions(tempOptions);\r\n        updateParentQuestionDataOptions(tempOptions);\r\n    }\r\n    const deleteOptionHandler = (e, key) => {\r\n        let tempOptions = [...options];\r\n        tempOptions.splice(key, 1)\r\n        setOptions(tempOptions)\r\n        updateParentQuestionDataOptions(tempOptions);\r\n    }\r\n    const passageTypeCheckboxHandler = (e) => {\r\n        let tempOptions = [];\r\n        setOptions(tempOptions)\r\n        setQuestionData({ ...questionData, 'isPassageType': e.target.checked, options: tempOptions })\r\n    }\r\n    const leftNavigationHandler = () => {\r\n        setLeftCollapsed(!leftCollapsed)\r\n    }\r\n    const rightNavigationHandler = () => {\r\n        setRightCollapsed(!rightCollapsed)\r\n    }\r\n    const questionInputHandler = (data) => {\r\n        // setQuestion(data)\r\n        // if(focusKey) {\r\n        setQuestionData((prevState) => ({ ...prevState, 'question': data }));\r\n        // }\r\n    }\r\n    const optionInputHandler = (data, key) => {\r\n        setOptions(dataOption=>{\r\n            let tempOptions = [...dataOption];\r\n            tempOptions[key].option = data;\r\n            updateParentQuestionDataOptions(tempOptions);\r\n            return tempOptions;\r\n        });\r\n\r\n    }\r\n    const explanationInputHandler = (data, key) => {\r\n        let tempOptions = [...options];\r\n        tempOptions[key].explanation = data;\r\n        setOptions(tempOptions)\r\n        updateParentQuestionDataOptions(tempOptions);\r\n\r\n    }\r\n    const updateParentQuestionDataOptions = (tempOptions) => {\r\n        let tempQuestionData = questionData;\r\n        tempQuestionData.options = tempOptions\r\n        setQuestionData(tempQuestionData)\r\n    }\r\n    const updateParentQuestionData = (tempQuestionData) => {\r\n        setQuestionData(tempQuestionData)\r\n    }\r\n    const editorConfig = {\r\n        plugins: plugins,\r\n        height: 200,\r\n        buttonList: buttonList.complex\r\n    };\r\n    const questionCodeHandler =(e)=>{\r\n        setQuestionContext(prevData=>{\r\n            return {\r\n                questionCode: e.target.value\r\n            }\r\n        })\r\n    }\r\n    return <>\r\n        <div className={[classes.root, rightCollapsed ? '' : classes.marginRightStyle, leftCollapsed ? '' : classes.marginLeftStyle].join(' ')}>\r\n            <div className={classes.collapsibleButton}>\r\n                {/* <IconButton onClick={leftNavigationHandler} aria-label=\"delete\" className={classes.margin}>\r\n                    {leftCollapsed ? <ArrowForwardIosIcon /> : <ArrowBackIosIcon />}\r\n                </IconButton> */}\r\n                <div></div>\r\n                <IconButton onClick={rightNavigationHandler} aria-label=\"delete\" className={classes.margin}>\r\n                    {rightCollapsed ? <ArrowBackIosIcon /> : <ArrowForwardIosIcon />}\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.rootContent}>\r\n                <Paper elevation={3} className={classes.questionAnswerStyle}>\r\n                <TextField value={questionContext.questionCode || ''} onChange={questionCodeHandler} className={classes.questionCodeInput} id=\"standard-basic\" autoComplete='off' label=\"Question Code\" />\r\n                    <div className={classes.instructionsHead}>\r\n                        {questionData.isPassageType ? 'Passage:' : 'Question:'}\r\n                    </div>\r\n                    <div className={classes.questionRichTextBoxOuter}>\r\n                        <SunEditor\r\n                            onChange={questionInputHandler}\r\n                            setContents={questionData.question || ''}\r\n                            setOptions={{\r\n                                mode: 'balloon-always',\r\n                                katex: katex,\r\n                                buttonList: [\r\n                                    ['undo', 'redo'],\r\n                                    ['font', 'fontSize', 'formatBlock'],\r\n                                    ['paragraphStyle', 'blockquote'],\r\n                                    ['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript'],\r\n                                    ['fontColor', 'hiliteColor', 'textStyle'],\r\n                                    ['removeFormat'],\r\n                                    '/', // Line break\r\n                                    ['outdent', 'indent'],\r\n                                    ['align', 'horizontalRule', 'list', 'lineHeight'],\r\n                                    ['table', 'link', 'image'/*, 'video', 'audio'*/, 'math'], // You must add the 'katex' library at options to use the 'math' plugin.\r\n                                    /** ['imageGallery'] */ // You must add the \"imageGalleryUrl\".\r\n                                    ['fullScreen', 'showBlocks', 'codeView'],\r\n                                    ['preview'/*, 'print'*/],\r\n                                    // ['save', 'template']\r\n                                ] // Or Array of button list, eg. [['font', 'align'], ['image']]\r\n                                // Other option\r\n                            }} />\r\n                    </div>\r\n                    <div className={classes.correctCheckbox}>\r\n                        <div className={classes.instructionsHead}>\r\n                            is Passage type ?</div>\r\n                        <Checkbox\r\n                            checked={questionData.isPassageType}\r\n                            onClick={passageTypeCheckboxHandler}\r\n                            inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                        />\r\n                    </div>\r\n                </Paper>\r\n                <div className={classes.metaDataArea}>\r\n                    <Paper className={classes.paper} variant=\"outlined\">\r\n                        {\r\n                            questionData.isPassageType ? <div className={classes.optionsStyle}>\r\n                                <div className={classes.instructionsHead}>\r\n                                    Questions\r\n</div>\r\n                                <div className={classes.optionsEditorStyle}>\r\n                                    {options.map((data, index) => {\r\n                                        return (\r\n                                            <Paper key={index} className={classes.optionIteratorStyle}>\r\n                                                <div className={classes.optionActionStyleQuestion}>\r\n\r\n                                                    <InnerQuestion questionData={questionData} questionOptions={options} optionIndex={index} setQuestionData={setQuestionData} />\r\n                                                    <IconButton onClick={(e) => deleteOptionHandler(e, index)} aria-label=\"delete\" className={classes.margin}>\r\n                                                        <DeleteIcon />\r\n                                                    </IconButton>\r\n                                                </div>\r\n                                            </Paper>\r\n                                        );\r\n                                    })}</div>\r\n                                <div className={classes.addOptionButton}>\r\n                                    <IconButton onClick={addOptionHandler} aria-label=\"Add\" className={classes.margin}>\r\n                                        <AddIcon />\r\n                                    </IconButton>\r\n                                </div>\r\n                            </div> :\r\n                                <div className={classes.optionsStyle}>\r\n                                    <div className={classes.instructionsHead}>\r\n                                        Options\r\n        </div>\r\n                                    <div className={classes.optionsEditorStyle}>\r\n                                        {options.map((data, index) => {\r\n                                            return (\r\n                                                <Paper\r\n                                                    elevation={3} key={index} className={[classes.optionIteratorStyle].join(' ')}>\r\n                                                    <div className={classes.optionActionStyle}>\r\n                                                        <div className={classes.correctCheckbox}>\r\n                                                            <Checkbox\r\n                                                                onChange={(e) => checkboxHandler(e, index)}\r\n                                                                checked={data.isCorrect}\r\n                                                                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                                                            />\r\n                                                        </div>\r\n                                                        <div className={classes.editorStyle} >\r\n                                                            <SunEditor\r\n                                                                onChange={(e) => optionInputHandler(e, index)}\r\n                                                                setContents={data.option}\r\n                                                                setOptions={{\r\n                                                                    mode: 'balloon-always',\r\n                                                                    katex: katex,\r\n                                                                    buttonList: [\r\n                                                                        ['undo', 'redo'],\r\n                                                                        ['font', 'fontSize', 'formatBlock'],\r\n                                                                        ['paragraphStyle', 'blockquote'],\r\n                                                                        ['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript'],\r\n                                                                        ['fontColor', 'hiliteColor', 'textStyle'],\r\n                                                                        ['removeFormat'],\r\n                                                                        '/', // Line break\r\n                                                                        ['outdent', 'indent'],\r\n                                                                        ['align', 'horizontalRule', 'list', 'lineHeight'],\r\n                                                                        ['table', 'link', 'image'/*, 'video', 'audio'*/, 'math'], // You must add the 'katex' library at options to use the 'math' plugin.\r\n                                                                        /** ['imageGallery'] */ // You must add the \"imageGalleryUrl\".\r\n                                                                        ['fullScreen', 'showBlocks', 'codeView'],\r\n                                                                        ['preview'/*, 'print'*/],\r\n                                                                        // ['save', 'template']\r\n                                                                    ] // Or Array of button list, eg. [['font', 'align'], ['image']]\r\n                                                                    // Other option\r\n                                                                }} />\r\n                                                        </div>\r\n                                                        <IconButton onClick={(e) => deleteOptionHandler(e, index)} aria-label=\"delete\" className={classes.margin}>\r\n                                                            <DeleteIcon />\r\n                                                        </IconButton>\r\n\r\n                                                    </div>\r\n\r\n                                                    {\r\n                                                        data.isCorrect ?\r\n                                                            <>\r\n                                                                <div className={classes.explanationCheckboxStyle}>\r\n                                                                    <Checkbox\r\n                                                                        onChange={(e) => explanationCheckboxHandler(e, index)}\r\n                                                                        checked={data.hasExplanation}\r\n                                                                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                                                                    />explanation\r\n                                                        </div>\r\n                                                                {\r\n                                                                    data.hasExplanation ?\r\n                                                                        <div style={{ padding: 8 }}>\r\n                                                                            <p style={{ fontSize: 12 }}>{\"Instructions\"}</p>\r\n                                                                            <div className={classes.editorStyle} >\r\n                                                                                <SunEditor\r\n                                                                                    onChange={(e) => explanationInputHandler(e, index)}\r\n                                                                                    setContents={data.explanation}\r\n                                                                                    setOptions={{\r\n                                                                                        mode: 'balloon-always',\r\n                                                                                        katex: katex,\r\n                                                                                        buttonList: [\r\n                                                                                            ['undo', 'redo'],\r\n                                                                                            ['font', 'fontSize', 'formatBlock'],\r\n                                                                                            ['paragraphStyle', 'blockquote'],\r\n                                                                                            ['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript'],\r\n                                                                                            ['fontColor', 'hiliteColor', 'textStyle'],\r\n                                                                                            ['removeFormat'],\r\n                                                                                            '/', // Line break\r\n                                                                                            ['outdent', 'indent'],\r\n                                                                                            ['align', 'horizontalRule', 'list', 'lineHeight'],\r\n                                                                                            ['table', 'link', 'image'/*, 'video', 'audio'*/, 'math'], // You must add the 'katex' library at options to use the 'math' plugin.\r\n                                                                                            /** ['imageGallery'] */ // You must add the \"imageGalleryUrl\".\r\n                                                                                            ['fullScreen', 'showBlocks', 'codeView'],\r\n                                                                                            ['preview'/*, 'print'*/],\r\n                                                                                            // ['save', 'template']\r\n                                                                                        ] // Or Array of button list, eg. [['font', 'align'], ['image']]\r\n                                                                                        // Other option\r\n                                                                                    }} />\r\n                                                                            </div>\r\n                                                                        </div> : ''\r\n                                                                }\r\n\r\n                                                            </>\r\n                                                            : <></>\r\n                                                    }\r\n\r\n                                                </Paper>\r\n                                            );\r\n                                        })}</div>\r\n                                    <div className={classes.addOptionButton}>\r\n                                        <IconButton onClick={addOptionHandler} aria-label=\"Add\" className={classes.margin}>\r\n                                            <AddIcon />\r\n                                        </IconButton>\r\n                                    </div>\r\n                                </div>\r\n                        }\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </>\r\n}\r\n\r\nexport default QuestionContentCreator;","import { Button, makeStyles, Paper, TextField, useTheme } from '@material-ui/core';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport useSnackbar from '../../snack-bar/hooks/use-snack-bar';\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nconst useStyles = makeStyles(theme => ({\r\n    backwardStyle: {\r\n        display: 'flex'\r\n    },\r\n    button: {\r\n        background: 'darkslategrey',\r\n        color: 'aliceblue',\r\n        \"&:hover\": {\r\n            backgroundColor: \"#3e8888\"\r\n        }\r\n    },\r\n\r\n    forwardStyle: {\r\n        display: 'flex',\r\n    },\r\n\r\n    saveButtonStyle: {\r\n        alignSelf: 'center',\r\n        paddingBottom: '1em',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n    formControl: {\r\n        width: '9em'\r\n    },\r\n    questionStatus: {\r\n    },\r\n    saveButton: {\r\n        height: 'fit-content'\r\n    },\r\n    uncheckedIconButtonStyle: {\r\n        margin: 1,\r\n        '&:hover': {\r\n            color: 'ghostwhite',\r\n        }\r\n    },\r\n    checkedIconButtonStyle: {\r\n        margin: 1,\r\n        '&:hover': {\r\n            color: 'limegreen',\r\n        }\r\n    },\r\n    savedForLaterIconButtonStyle: {\r\n        margin: 1,\r\n        '&:hover': {\r\n            color: 'deepskyblue',\r\n        }\r\n    },\r\n    unrelatedIconButtonStyle: {\r\n        margin: 1,\r\n        '&:hover': {\r\n            color: 'tomato',\r\n        }\r\n    },\r\n    reportedIconButtonStyle: {\r\n        margin: 1,\r\n        '&:hover': {\r\n            color: 'red',\r\n        }\r\n    },\r\n    unchecked: {\r\n        color: 'ghostwhite',\r\n    },\r\n    checked: {\r\n        color: 'limegreen'\r\n    },\r\n    savedForLater: {\r\n        color: 'deepskyblue'\r\n    },\r\n    unrelated: {\r\n        color: 'tomato'\r\n    },\r\n    undone: {\r\n        color: 'lightseagreen'\r\n    },\r\n    reported: {\r\n        color: 'red'\r\n    },\r\n    questionInfo: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        paddingLeft: '1em',\r\n    },\r\n    actionButton:{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: '0em 1em 0em 1em'\r\n    }\r\n}))\r\nconst QuestionCreatorFooter = ({ uploadQuestionBank, addNewQuestion, saveQuestionData, previousQuestionHandler, nextQuestionHandler, questionIndex, totalQuestions }) => {\r\n    const appTheme = useTheme();\r\n    const classes = useStyles(appTheme);\r\n    const { snackbarObject, setSnackbarObject } = useContext(useSnackbar)\r\n    const saveQuestionHandler=()=>{\r\n        saveQuestionData()\r\n        setSnackbarObject({\r\n            snackbarOpen: true,\r\n            snackbarText: 'Saved Successfully'\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            <div className={classes.backwardStyle}>\r\n                <Button\r\n                    onClick={previousQuestionHandler}\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    startIcon={<ArrowBackIosIcon />}\r\n                >\r\n                    Back\r\n                            </Button>\r\n                <div className={classes.questionInfo}>\r\n                    Question: <b>{questionIndex + 1}</b>\r\n                </div>\r\n            </div>\r\n            <div className={classes.saveButtonStyle}>\r\n            <div className={classes.actionButton}>\r\n                <Tooltip title=\"Save\">\r\n            <IconButton onClick={saveQuestionHandler} aria-label=\"delete\" className={classes.margin}>\r\n                <SaveIcon />\r\n            </IconButton>\r\n            </Tooltip>\r\n            Save\r\n            </div>\r\n            <div className={classes.actionButton}>\r\n            <Tooltip title=\"Add Question\">\r\n            <IconButton onClick={addNewQuestion} aria-label=\"delete\" className={classes.margin}>\r\n                <AddCircleOutlineIcon />\r\n            </IconButton>\r\n            </Tooltip>\r\n            Add Question\r\n            </div>\r\n            <div className={classes.actionButton}>\r\n            <Tooltip title=\"Upload Question Bank\">\r\n            <IconButton onClick={uploadQuestionBank} aria-label=\"delete\" className={classes.margin}>\r\n                <BackupIcon />\r\n            </IconButton>\r\n            </Tooltip>\r\n            Upload to Cloud\r\n            </div>\r\n                {/* <Button variant=\"contained\" color=\"primary\" onClick={saveQuestionData}>Save</Button> */}\r\n                {/* <Button variant=\"contained\" color=\"primary\" onClick={addNewQuestion}>Add new Question</Button> */}\r\n            </div>\r\n            <div className={classes.forwardStyle}>{\r\n                questionIndex === totalQuestions - 1 ?\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        className={classes.button}\r\n                        onClick={addNewQuestion}\r\n                        endIcon={<ArrowForwardIosIcon />}\r\n                    >\r\n                        Add Next\r\n                            </Button> :\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        className={classes.button}\r\n                        onClick={nextQuestionHandler}\r\n                        endIcon={<ArrowForwardIosIcon />}\r\n                    >\r\n                        Next\r\n                                                    </Button>\r\n            }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QuestionCreatorFooter;","import { makeStyles, useTheme } from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        paddingTop: '0.5em',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        height: '100%'\r\n    },\r\n    paper: {\r\n        minHeight: 25,\r\n        minWidth: 25,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        cursor: 'pointer'\r\n    },\r\n    unchecked: {\r\n        background: 'ghostwhite'\r\n    },\r\n    checked: {\r\n        background: 'greenyellow'\r\n    },\r\n    savedForLater: {\r\n        background: 'deepskyblue'\r\n    },\r\n    borderStyle: {\r\n        border: '0.5px solid blue'\r\n    },\r\n    unrelated: {\r\n        background: 'tomato'\r\n    },\r\n    reported: {\r\n        background: 'red'\r\n    },\r\n    paginationButtons: {\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        marginTop: 'auto'\r\n    },\r\n    margin: {\r\n        margin: 1\r\n    },\r\n    filterDropdown: {\r\n        width: '8em'\r\n    },\r\n    formControl: {\r\n        paddingBottom: '1em'\r\n    },\r\n    gridContainer: {\r\n        overflowY: 'auto'\r\n    }\r\n}))\r\nconst QuestionCreatorRightsideBar = ({onMapClick, questionIndex,totalQuestions})=>{\r\n    const appTheme = useTheme()\r\n    const classes = useStyles(appTheme);\r\n    useEffect(()=>{\r\n        setActiveIndex(questionIndex)\r\n        setIndexController(Math.floor(questionIndex / 100))\r\n    }, [questionIndex])\r\n    const [activeIndex, setActiveIndex] = useState(0)\r\n    const [indexController, setIndexController] = useState(0)\r\n    const arrayForIteration = Array.from(Array(100).keys());\r\n\r\n    var pages = Math.ceil(totalQuestions / 100);\r\n    const forwardHandler = () => {\r\n        if (indexController < pages - 1) {\r\n            setIndexController(indexController + 1)\r\n        }\r\n    }\r\n    const backwardHandler = () => {\r\n        if (indexController > 0) {\r\n            setIndexController(indexController - 1)\r\n        }\r\n    }\r\n    const onPaperClickHandler = (index) => {\r\n        setActiveIndex(index);\r\n        onMapClick(index)\r\n    }\r\n    return <div className={classes.root}>\r\n\r\n        <Grid item>\r\n        <Grid className={classes.gridContainer} container justify=\"center\" spacing={1}>\r\n            {arrayForIteration.map((value, index) => (\r\n                (index + (indexController * 100)) < totalQuestions ? <Grid key={index} item>\r\n                    <Paper onClick={(e) => onPaperClickHandler(Number(e.target.innerText) - 1)} className={[classes.paper\r\n                        , activeIndex === (index + (indexController * 100)) ? classes.borderStyle : ''].join(' ')}>{index + (indexController * 100) + 1}</Paper>\r\n                </Grid> : ''\r\n            ))}\r\n        </Grid>\r\n    </Grid>\r\n    <div className={classes.paginationButtons}>\r\n            <IconButton onClick={backwardHandler} aria-label=\"delete\" className={classes.margin}>\r\n                <ArrowBackIosIcon />\r\n            </IconButton>\r\n            <IconButton onClick={forwardHandler} aria-label=\"delete\" className={classes.margin}>\r\n                <ArrowForwardIosIcon />\r\n            </IconButton>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default QuestionCreatorRightsideBar;","import { makeStyles, Paper, Snackbar, useTheme } from '@material-ui/core';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport useUserContext from '../../../utils/user-context/user-context';\r\nimport useSnackbar from '../../snack-bar/hooks/use-snack-bar';\r\nimport SimpleSnackbar from '../../snack-bar/snack-bar';\r\nimport QuestionContentCreator from '../question-content-creator/question-content-creator';\r\nimport QuestionCreatorFooter from '../question-creator-footer/question-creator-footer';\r\nimport QuestionCreatorRightsideBar from '../question-creator-rightside-bar/question-creator-rightside-bar';\r\nimport Cookies from 'js-cookie'\r\nimport { validateAndProceedUserAndDoc } from '../../../utils/auth-functions/auth-functions';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useSplashScreen from '../../splash-screen/hooks/use-splash-screen';\r\nimport useQuestionContext from '../../../utils/question-context/question-context';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flexWrap: 'wrap',\r\n        listStyle: 'none',\r\n    },\r\n    questionNavHelperGrid: {\r\n        display: 'grid',\r\n        gridTemplateColumns: '1fr',\r\n        height: '100%',\r\n        overflowX: 'hidden',\r\n        overflowY: 'hidden'\r\n    },\r\n    questionNavGrid: {\r\n        display: 'grid',\r\n        gridTemplateColumns: '250px 1fr 250px',\r\n        gridTemplateRows: '1fr 100px',\r\n        gridArea: '1/1'\r\n    },\r\n    sideBarStyle: {\r\n        gridRow: '1/3',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between'\r\n    },\r\n    rightSideBar: {\r\n        gridRow: '1/3',\r\n        gridColumn: '3/4',\r\n        transition: 'all 1s ease',\r\n    },\r\n    navigationStyle: {\r\n        background: 'aliceblue',\r\n        width: '100%',\r\n        gridRow: '2/3',\r\n        zIndex: 1,\r\n        display: 'flex',\r\n        height: '4em',\r\n        alignSelf: 'flex-end',\r\n        justifyContent: 'space-between'\r\n\r\n    },\r\n    navigationWidthSmall: {\r\n        gridColumn: '2/3',\r\n    },\r\n    navigationWidthLarge: {\r\n        gridColumn: '1/4'\r\n    },\r\n    navigationWidthLeftCollapsed: {\r\n        gridColumn: '1/3'\r\n    },\r\n    navigationWidthRightCollapsed: {\r\n        gridColumn: '2/4'\r\n    },\r\n    hideDiv: {\r\n        display: 'none'\r\n    }\r\n}))\r\nconst QuestionsCreatorLanding = () => {\r\n    const appTheme = useTheme();\r\n    const classes = useStyles(appTheme);\r\n    const history = useHistory()\r\n    const { user, setUser } = useContext(useUserContext);\r\n    const [leftCollapsed, setLeftCollapsed] = useState(true);\r\n    const [rightCollapsed, setRightCollapsed] = useState(true);\r\n    const [questionIndex, setQuestionIndex] = useState(0);\r\n    const { snackbarObject, setSnackbarObject } = useContext(useSnackbar)\r\n    const { loaderActive, setLoaderActive } = useContext(useSplashScreen)\r\n    const {questionContext, setQuestionContext} = useContext(useQuestionContext);\r\n    const LEFT = 37;\r\n    const UP = 38;\r\n    const RIGHT = 39;\r\n    const DOWN = 40;\r\n    const [questionData, setQuestionData] = useState({\r\n        isPassageType: false,\r\n        options: []\r\n    });\r\n    var keyBinder = 0;\r\n    useEffect(() => {\r\n        if (!user.total_questions) {\r\n            history.push('/addQuestions')\r\n        } else {\r\n            getQuestionByIndex(0)\r\n        }\r\n\r\n    }, []);\r\n    useEffect(() => {\r\n        if (!keyBinder) {\r\n            window.addEventListener('keydown', saveKeyStrokeHandler);\r\n            keyBinder++;\r\n        }\r\n        return () => {\r\n            while (keyBinder > 0) {\r\n                window.removeEventListener('keydown', saveKeyStrokeHandler);\r\n                keyBinder--;\r\n            }\r\n        }\r\n    }, [questionData]);\r\n    const setUserDataFromCookie = async (userHashKey, documentHashKey) => {\r\n        var userObj = await validateAndProceedUserAndDoc(userHashKey, documentHashKey);\r\n        setUser(userObj);\r\n    }\r\n    const saveKeyStrokeHandler = (e) => {\r\n        let charCode = String.fromCharCode(e.which).toLowerCase();\r\n        if (e.ctrlKey && charCode === 's') {\r\n            saveQuestionData()\r\n            e.preventDefault()\r\n            setSnackbarObject({\r\n                snackbarOpen: true,\r\n                snackbarText: 'Saved Successfully'\r\n            })\r\n        }\r\n        if (e.ctrlKey && charCode === 'q') {\r\n            addNewQuestion();\r\n            e.preventDefault()\r\n        }\r\n        if (e.ctrlKey && (e.which === LEFT)) {\r\n            previousQuestionHandler();\r\n            e.preventDefault()\r\n        }\r\n        if (e.ctrlKey && (e.which === RIGHT)) {\r\n            nextQuestionHandler();\r\n            e.preventDefault()\r\n        }\r\n    }\r\n    const onMapClick = (index) => {\r\n        // updateUserData(index)\r\n        saveQuestionData();\r\n        setQuestionIndex(index);\r\n        getQuestionByIndex(index);\r\n    }\r\n    const nextQuestionHandler = () => {\r\n        if (user.total_questions - 1 > questionIndex) {\r\n            getQuestionByIndex(questionIndex + 1)\r\n            setQuestionIndex(questionIndex + 1);\r\n        }\r\n    }\r\n    const previousQuestionHandler = () => {\r\n        if (questionIndex - 1 > -1) {\r\n            getQuestionByIndex(questionIndex - 1)\r\n            setQuestionIndex(questionIndex - 1);\r\n        }\r\n    }\r\n    const getQuestionByIndex = async (index) => {\r\n        const formData = new FormData();\r\n        formData.append('index', index)\r\n        formData.append('userKey', user.user_hash_key || Cookies.get('user_key'))\r\n        formData.append('documentKey', user.doc_hash_key || Cookies.get('document_key'))\r\n\r\n        let blankQuestionData = {\r\n            options: [],\r\n            question: '',\r\n            isPassageType: false,\r\n        };\r\n        setQuestionData(blankQuestionData);\r\n        var response = await fetch('http://127.0.0.1:5000/getQuestionByIndex', {\r\n            method: 'post',\r\n            body: formData\r\n        });\r\n        var resultObj = await response.json();\r\n        if (JSON.parse(resultObj.current_object)) {\r\n            let questionDataObject = JSON.parse(resultObj.current_object);\r\n            if(questionDataObject.questionCode){\r\n                setQuestionContext({\r\n                    questionCode: questionDataObject.questionCode\r\n                })\r\n            }\r\n            setQuestionData(questionDataObject);\r\n        }\r\n    }\r\n    const saveQuestionData = async () => {\r\n        setLoaderActive(true)\r\n        questionData.questionCode = questionContext.questionCode;\r\n        const formData = new FormData();\r\n        formData.append('index', questionIndex)\r\n        formData.append('questionData', JSON.stringify(questionData));\r\n        formData.append('userKey', user.user_hash_key || Cookies.get('user_key'))\r\n        formData.append('documentKey', user.doc_hash_key || Cookies.get('document_key'))\r\n        var response = await fetch('http://127.0.0.1:5000/saveQuestionByIndex', {\r\n            method: 'post',\r\n            body: formData\r\n        });\r\n        setLoaderActive(false)\r\n    }\r\n    const updateUserData = async (index) => {\r\n        const formData = new FormData();\r\n        formData.append('userKey', user.user_hash_key)\r\n        formData.append('last_index', index)\r\n        formData.append('documentKey', user.doc_hash_key)\r\n        var response = await fetch('http://127.0.0.1:5000/updateCreaorData', {\r\n            method: 'post',\r\n            body: formData\r\n        });\r\n        setQuestionIndex(index)\r\n    }\r\n    const uploadQuestionBank = async () => {\r\n        setLoaderActive(true)\r\n        const formData = new FormData();\r\n        formData.append('userKey', user.user_hash_key)\r\n        formData.append('documentKey', user.doc_hash_key)\r\n        var response = await fetch('http://127.0.0.1:5000/uploadQuestionBank', {\r\n            method: 'post',\r\n            body: formData\r\n        });\r\n        console.log('success')\r\n        if (response.statusText === 'OK') {\r\n            setSnackbarObject({\r\n                snackbarOpen: true,\r\n                snackbarText: 'Cloud updated Successfully'\r\n            })\r\n        } else {\r\n            setSnackbarObject({\r\n                snackbarOpen: true,\r\n                snackbarText: 'Cloud updation failed'\r\n            })\r\n        }\r\n        setLoaderActive(false)\r\n    }\r\n    const createNewQuestion = async (tempData, index) => {\r\n        const formData = new FormData();\r\n        formData.append('questionData', JSON.stringify(tempData));\r\n        formData.append('userKey', user.user_hash_key)\r\n        formData.append('index', index)\r\n        formData.append('documentKey', user.doc_hash_key)\r\n        var response = await fetch('http://127.0.0.1:5000/createNewQuestion', {\r\n            method: 'post',\r\n            body: formData\r\n        });\r\n        setQuestionIndex(index)\r\n        // updateUserData(index)\r\n    }\r\n    const addNewQuestion = () => {\r\n        saveQuestionData();\r\n        let blankQuestionData = {\r\n            options: [],\r\n            isPassageType: false,\r\n        };\r\n        setQuestionData(blankQuestionData);\r\n        createNewQuestion(blankQuestionData, user.total_questions);\r\n        setUser({ ...user, 'total_questions': user.total_questions + 1, 'last_index': questionIndex + 1 })\r\n    }\r\n    return (<>\r\n        <div className={classes.root}>\r\n            <div className={classes.questionNavHelperGrid}>\r\n                <QuestionContentCreator questionIndex={questionIndex} leftCollapsed={leftCollapsed} setLeftCollapsed={setLeftCollapsed}\r\n                    rightCollapsed={rightCollapsed} setRightCollapsed={setRightCollapsed} questionData={questionData}\r\n                    setQuestionData={setQuestionData} />\r\n                <div className={classes.questionNavGrid}>\r\n                    {leftCollapsed ? '' : <Paper className={classes.sideBarStyle}>\r\n                        ashdgsj\r\n                    </Paper>}\r\n                    <Paper elevation={3} className={[classes.navigationStyle,\r\n                    leftCollapsed && rightCollapsed ? classes.navigationWidthLarge : leftCollapsed ? classes.navigationWidthLeftCollapsed : rightCollapsed ? classes.navigationWidthRightCollapsed : ''\r\n                    ].join(' ')}>\r\n                        <QuestionCreatorFooter uploadQuestionBank={uploadQuestionBank} questionIndex={questionIndex} totalQuestions={user.total_questions} addNewQuestion={addNewQuestion} saveQuestionData={saveQuestionData} previousQuestionHandler={previousQuestionHandler}\r\n                            nextQuestionHandler={nextQuestionHandler} />\r\n                    </Paper>\r\n                    <Paper className={[classes.rightSideBar, rightCollapsed ? classes.hideDiv : ''].join(' ')}>\r\n                        <QuestionCreatorRightsideBar questionIndex={questionIndex} onMapClick={onMapClick} totalQuestions={user.total_questions} />\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n            {/* <SimpleSnackbar /> */}\r\n        </div>\r\n    </>)\r\n}\r\n\r\n\r\nexport default QuestionsCreatorLanding;","import React, { useState } from 'react';\r\nimport useQuestionContext from '../../../utils/question-context/question-context';\r\nimport QuestionsLanding from '../../questions-landing/questions-landing';\r\nimport QuestionsCreatorLanding from '../question-creator-landing/question-creator-landing';\r\n\r\nconst QuestionEditor = () => {\r\n    const [questionContext, setQuestionContext] = useState({})\r\n    const questionContextObject = { questionContext, setQuestionContext }\r\n    return (\r\n        <useQuestionContext.Provider value={questionContextObject}>\r\n            <QuestionsCreatorLanding />\r\n        </useQuestionContext.Provider>\r\n    );\r\n}\r\n\r\nexport default QuestionEditor;","import React from 'react';\r\nimport { Route } from \"react-router-dom\";\r\nimport KeyHome from '../components/key-home/key-home';\r\nimport SignUserLanding from '../components/question-creator/auth-forms/sign-user-forms/sign-user-landing';\r\nimport QuestionCreator from '../components/question-creator/question-creator';\r\nimport QuestionEditor from '../components/question-creator/question-editor/question-editor';\r\nimport QuestionsLanding from '../components/questions-landing/questions-landing';\r\n\r\n\r\nconst Routes =()=> (\r\n    <>\r\n        <Route exact path=\"/\" component={KeyHome}></Route>\r\n        <Route exact path=\"/questions\" component={QuestionsLanding}></Route>\r\n        <Route exact path=\"/addQuestions\" component={QuestionCreator}></Route>\r\n        <Route exact path=\"/QuestionEditor\" component={QuestionEditor}></Route>\r\n        <Route exact path=\"/SignUserLanding\" component={SignUserLanding}></Route>\r\n    </>\r\n)\r\n\r\nexport default Routes;","\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nconst mainTheme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#182445'\r\n        },\r\n        secondary: {\r\n            main: '#00517C'\r\n        },\r\n        textGrey:{\r\n            main: '#989A9C'\r\n        },\r\n        textBlack:{\r\n            main: '#2F2F2F'\r\n        },\r\n        textWhite:{\r\n            main: '#EBEEF1'\r\n        },\r\n        success:{\r\n            main: '#398715'\r\n        },\r\n        warning:{\r\n            main: '#F4A700'\r\n        },\r\n        info:{\r\n            main: '#0276D6'\r\n        },\r\n        active:{\r\n            main: '#58B72B'\r\n        },\r\n        disabled:{\r\n            main:'#CDCECF'\r\n        },\r\n        danger:{\r\n            main:'#F1543F'\r\n        },\r\n        savedGreen:{\r\n            main: '#87E55A'\r\n        },\r\n        textPureWhite:{\r\n            main: '#FFFFFF'\r\n        }\r\n    },\r\n    mainAppTheme: {\r\n        background: '#182445'\r\n    },\r\n    svgFillMainBg:{\r\n        fill: '#182445'\r\n    }\r\n});\r\n\r\nexport { mainTheme };","import { ThemeProvider } from '@material-ui/core';\nimport { useState } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport useSnackbar from './components/snack-bar/hooks/use-snack-bar';\nimport SimpleSnackbar from './components/snack-bar/snack-bar';\nimport useSplashScreen from './components/splash-screen/hooks/use-splash-screen';\nimport SplashScreen from './components/splash-screen/splash-screen';\nimport Routes from './routes/routes';\nimport { mainTheme } from './utils/app-theme/app-theme';\nimport useUserContext from './utils/user-context/user-context';\nfunction App() {\n  const [user, setUser] = useState({});\n  const userObject = { user, setUser };\n  const [snackbarObject, setSnackbarObject] = useState({});\n  const snackbarValue = { snackbarObject, setSnackbarObject };\n  const [loaderActive, setLoaderActive] = useState(false);\n  const loaderValue = { loaderActive, setLoaderActive };\n  return (\n    <div className=\"App\">\n      <useUserContext.Provider value={userObject}>\n        <ThemeProvider theme={mainTheme}>\n          <useSnackbar.Provider value={snackbarValue}>\n            <useSplashScreen.Provider value={loaderValue}>\n              <BrowserRouter>\n                <Routes />\n                <SplashScreen />\n                <SimpleSnackbar/>\n              </BrowserRouter>\n            </useSplashScreen.Provider>\n          </useSnackbar.Provider>\n        </ThemeProvider>\n      </useUserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}